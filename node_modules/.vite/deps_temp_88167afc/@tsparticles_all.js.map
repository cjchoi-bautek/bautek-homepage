{
  "version": 3,
  "sources": ["../../@tsparticles/pjs/browser/marcbruederlin/Particles.js", "../../@tsparticles/pjs/browser/VincentGarreau/particles.js", "../../@tsparticles/pjs/browser/index.js", "../../@tsparticles/shape-arrow/browser/Utils.js", "../../@tsparticles/shape-arrow/browser/ArrowDrawer.js", "../../@tsparticles/shape-arrow/browser/index.js", "../../@tsparticles/effect-bubble/browser/BubbleDrawer.js", "../../@tsparticles/effect-bubble/browser/index.js", "../../@tsparticles/plugin-canvas-mask/browser/Options/Classes/CanvasMaskOverride.js", "../../@tsparticles/plugin-canvas-mask/browser/Options/Classes/CanvasMaskPixels.js", "../../@tsparticles/plugin-canvas-mask/browser/Options/Classes/ImageMask.js", "../../@tsparticles/plugin-canvas-mask/browser/Options/Classes/FontTextMask.js", "../../@tsparticles/plugin-canvas-mask/browser/Options/Classes/TextMaskLine.js", "../../@tsparticles/plugin-canvas-mask/browser/Options/Classes/TextMask.js", "../../@tsparticles/plugin-canvas-mask/browser/Options/Classes/CanvasMask.js", "../../@tsparticles/plugin-canvas-mask/browser/utils.js", "../../@tsparticles/plugin-canvas-mask/browser/CanvasMaskInstance.js", "../../@tsparticles/plugin-canvas-mask/browser/CanvasMaskPlugin.js", "../../@tsparticles/plugin-canvas-mask/browser/index.js", "../../@tsparticles/shape-cards/browser/Utils.js", "../../@tsparticles/shape-cards/browser/ClubDrawer.js", "../../@tsparticles/shape-cards/browser/DiamondDrawer.js", "../../@tsparticles/shape-cards/browser/HeartDrawer.js", "../../@tsparticles/shape-cards/browser/SpadeDrawer.js", "../../@tsparticles/shape-cards/browser/index.js", "../../@tsparticles/shape-cog/browser/Utils.js", "../../@tsparticles/shape-cog/browser/CogDrawer.js", "../../@tsparticles/shape-cog/browser/index.js", "../../@tsparticles/simplex-noise/browser/utils.js", "../../@tsparticles/simplex-noise/browser/Classes/SimplexNoise2D.js", "../../@tsparticles/simplex-noise/browser/Classes/SimplexNoise3D.js", "../../@tsparticles/simplex-noise/browser/Classes/SimplexNoise4D.js", "../../@tsparticles/simplex-noise/browser/SimplexNoise.js", "../../@tsparticles/path-curl-noise/browser/CurlNoiseGenerator.js", "../../@tsparticles/path-curl-noise/browser/index.js", "../../@tsparticles/path-curves/browser/Curves.js", "../../@tsparticles/path-curves/browser/CurvesPathGenerator.js", "../../@tsparticles/path-curves/browser/index.js", "../../@tsparticles/plugin-easing-back/browser/index.js", "../../@tsparticles/plugin-easing-circ/browser/index.js", "../../@tsparticles/plugin-easing-cubic/browser/index.js", "../../@tsparticles/plugin-easing-expo/browser/index.js", "../../@tsparticles/plugin-easing-linear/browser/index.js", "../../@tsparticles/plugin-easing-quart/browser/index.js", "../../@tsparticles/plugin-easing-quint/browser/index.js", "../../@tsparticles/plugin-easing-sine/browser/index.js", "../../@tsparticles/plugin-emitters/browser/Options/Classes/EmitterLife.js", "../../@tsparticles/plugin-emitters/browser/Options/Classes/EmitterRate.js", "../../@tsparticles/plugin-emitters/browser/Options/Classes/EmitterShapeReplace.js", "../../@tsparticles/plugin-emitters/browser/Options/Classes/EmitterShape.js", "../../@tsparticles/plugin-emitters/browser/Options/Classes/EmitterSize.js", "../../@tsparticles/plugin-emitters/browser/Options/Classes/Emitter.js", "../../@tsparticles/plugin-emitters/browser/Enums/EmitterClickMode.js", "../../@tsparticles/plugin-emitters/browser/EmitterInstance.js", "../../@tsparticles/plugin-emitters/browser/Emitters.js", "../../@tsparticles/plugin-emitters/browser/EmittersPlugin.js", "../../@tsparticles/plugin-emitters/browser/ShapeManager.js", "../../@tsparticles/plugin-emitters/browser/EmitterShapeBase.js", "../../@tsparticles/plugin-emitters/browser/index.js", "../../@tsparticles/plugin-emitters-shape-canvas/browser/utils.js", "../../@tsparticles/plugin-emitters-shape-canvas/browser/EmittersCanvasShape.js", "../../@tsparticles/plugin-emitters-shape-canvas/browser/Options/Classes/PixelsOptions.js", "../../@tsparticles/plugin-emitters-shape-canvas/browser/Options/Classes/TextFontOptions.js", "../../@tsparticles/plugin-emitters-shape-canvas/browser/Options/Classes/TextLinesOptions.js", "../../@tsparticles/plugin-emitters-shape-canvas/browser/Options/Classes/TextOptions.js", "../../@tsparticles/plugin-emitters-shape-canvas/browser/Options/Classes/EmittersCanvasShapeOptions.js", "../../@tsparticles/plugin-emitters-shape-canvas/browser/EmittersCanvasShapeGenerator.js", "../../@tsparticles/plugin-emitters-shape-canvas/browser/index.js", "../../@tsparticles/plugin-emitters-shape-path/browser/utils.js", "../../@tsparticles/plugin-emitters-shape-path/browser/EmittersPathShape.js", "../../@tsparticles/plugin-emitters-shape-path/browser/Options/Classes/EmittersPathShapeOptions.js", "../../@tsparticles/plugin-emitters-shape-path/browser/EmittersPathShapeGenerator.js", "../../@tsparticles/plugin-emitters-shape-path/browser/index.js", "../../@tsparticles/plugin-emitters-shape-polygon/browser/utils.js", "../../@tsparticles/plugin-emitters-shape-polygon/browser/EmittersPolygonShape.js", "../../@tsparticles/plugin-emitters-shape-polygon/browser/Options/Classes/EmittersPolygonShapeOptions.js", "../../@tsparticles/plugin-emitters-shape-polygon/browser/EmittersPolygonShapeGenerator.js", "../../@tsparticles/plugin-emitters-shape-polygon/browser/index.js", "../../@tsparticles/plugin-export-image/browser/ExportImageInstance.js", "../../@tsparticles/plugin-export-image/browser/ExportImagePlugin.js", "../../@tsparticles/plugin-export-image/browser/index.js", "../../@tsparticles/plugin-export-json/browser/ExportJSONInstance.js", "../../@tsparticles/plugin-export-json/browser/ExportJSONPlugin.js", "../../@tsparticles/plugin-export-json/browser/index.js", "../../@tsparticles/plugin-export-video/browser/ExportVideoInstance.js", "../../@tsparticles/plugin-export-video/browser/ExportVideoPlugin.js", "../../@tsparticles/plugin-export-video/browser/index.js", "../../@tsparticles/interaction-external-particle/browser/Options/Classes/InteractivityParticle.js", "../../@tsparticles/interaction-external-particle/browser/InteractivityParticleMaker.js", "../../@tsparticles/interaction-external-particle/browser/index.js", "../../@tsparticles/interaction-external-pop/browser/Popper.js", "../../@tsparticles/interaction-external-pop/browser/index.js", "../../@tsparticles/plugin-absorbers/browser/Options/Classes/AbsorberSizeLimit.js", "../../@tsparticles/plugin-absorbers/browser/Options/Classes/AbsorberSize.js", "../../@tsparticles/plugin-absorbers/browser/Options/Classes/Absorber.js", "../../@tsparticles/plugin-absorbers/browser/Enums/AbsorberClickMode.js", "../../@tsparticles/plugin-absorbers/browser/AbsorberInstance.js", "../../@tsparticles/plugin-absorbers/browser/Absorbers.js", "../../@tsparticles/plugin-absorbers/browser/AbsorbersPlugin.js", "../../@tsparticles/plugin-absorbers/browser/index.js", "../../@tsparticles/updater-destroy/browser/Options/Classes/DestroyBounds.js", "../../@tsparticles/updater-destroy/browser/Enums/DestroyMode.js", "../../@tsparticles/updater-destroy/browser/Options/Classes/SplitFactor.js", "../../@tsparticles/updater-destroy/browser/Options/Classes/SplitRate.js", "../../@tsparticles/updater-destroy/browser/Options/Classes/Split.js", "../../@tsparticles/updater-destroy/browser/Options/Classes/Destroy.js", "../../@tsparticles/updater-destroy/browser/Utils.js", "../../@tsparticles/updater-destroy/browser/DestroyUpdater.js", "../../@tsparticles/updater-destroy/browser/index.js", "../../@tsparticles/plugin-emitters-shape-circle/browser/EmittersCircleShape.js", "../../@tsparticles/plugin-emitters-shape-circle/browser/EmittersCircleShapeGenerator.js", "../../@tsparticles/plugin-emitters-shape-circle/browser/index.js", "../../@tsparticles/plugin-emitters-shape-square/browser/EmittersSquareShape.js", "../../@tsparticles/plugin-emitters-shape-square/browser/EmittersSquareShapeGenerator.js", "../../@tsparticles/plugin-emitters-shape-square/browser/index.js", "../../@tsparticles/interaction-external-trail/browser/Options/Classes/Trail.js", "../../@tsparticles/interaction-external-trail/browser/TrailMaker.js", "../../@tsparticles/interaction-external-trail/browser/index.js", "../../@tsparticles/updater-roll/browser/RollMode.js", "../../@tsparticles/updater-roll/browser/Utils.js", "../../@tsparticles/updater-roll/browser/Options/Classes/RollLight.js", "../../@tsparticles/updater-roll/browser/Options/Classes/Roll.js", "../../@tsparticles/updater-roll/browser/RollUpdater.js", "../../@tsparticles/updater-roll/browser/index.js", "../../@tsparticles/move-base/browser/Utils.js", "../../@tsparticles/move-base/browser/BaseMover.js", "../../@tsparticles/move-base/browser/index.js", "../../@tsparticles/shape-circle/browser/Utils.js", "../../@tsparticles/shape-circle/browser/CircleDrawer.js", "../../@tsparticles/shape-circle/browser/index.js", "../../@tsparticles/updater-color/browser/ColorUpdater.js", "../../@tsparticles/updater-color/browser/index.js", "../../@tsparticles/plugin-hex-color/browser/HexColorManager.js", "../../@tsparticles/plugin-hex-color/browser/index.js", "../../@tsparticles/plugin-hsl-color/browser/HslColorManager.js", "../../@tsparticles/plugin-hsl-color/browser/index.js", "../../@tsparticles/updater-opacity/browser/OpacityUpdater.js", "../../@tsparticles/updater-opacity/browser/index.js", "../../@tsparticles/updater-out-modes/browser/Utils.js", "../../@tsparticles/updater-out-modes/browser/BounceOutMode.js", "../../@tsparticles/updater-out-modes/browser/DestroyOutMode.js", "../../@tsparticles/updater-out-modes/browser/NoneOutMode.js", "../../@tsparticles/updater-out-modes/browser/OutOutMode.js", "../../@tsparticles/updater-out-modes/browser/OutOfCanvasUpdater.js", "../../@tsparticles/updater-out-modes/browser/index.js", "../../@tsparticles/plugin-rgb-color/browser/RgbColorManager.js", "../../@tsparticles/plugin-rgb-color/browser/index.js", "../../@tsparticles/updater-size/browser/SizeUpdater.js", "../../@tsparticles/updater-size/browser/index.js", "../../@tsparticles/basic/browser/index.js", "../../@tsparticles/plugin-easing-quad/browser/index.js", "../../@tsparticles/shape-emoji/browser/Utils.js", "../../@tsparticles/shape-emoji/browser/EmojiDrawer.js", "../../@tsparticles/shape-emoji/browser/index.js", "../../@tsparticles/interaction-external-attract/browser/Utils.js", "../../@tsparticles/interaction-external-attract/browser/Options/Classes/Attract.js", "../../@tsparticles/interaction-external-attract/browser/Attractor.js", "../../@tsparticles/interaction-external-attract/browser/index.js", "../../@tsparticles/interaction-external-bounce/browser/Utils.js", "../../@tsparticles/interaction-external-bounce/browser/Options/Classes/Bounce.js", "../../@tsparticles/interaction-external-bounce/browser/Bouncer.js", "../../@tsparticles/interaction-external-bounce/browser/index.js", "../../@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleBase.js", "../../@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleDiv.js", "../../@tsparticles/interaction-external-bubble/browser/Options/Classes/Bubble.js", "../../@tsparticles/interaction-external-bubble/browser/Enums.js", "../../@tsparticles/interaction-external-bubble/browser/Utils.js", "../../@tsparticles/interaction-external-bubble/browser/Bubbler.js", "../../@tsparticles/interaction-external-bubble/browser/index.js", "../../@tsparticles/interaction-external-connect/browser/Options/Classes/ConnectLinks.js", "../../@tsparticles/interaction-external-connect/browser/Options/Classes/Connect.js", "../../@tsparticles/interaction-external-connect/browser/Utils.js", "../../@tsparticles/interaction-external-connect/browser/Connector.js", "../../@tsparticles/interaction-external-connect/browser/index.js", "../../@tsparticles/interaction-external-grab/browser/Options/Classes/GrabLinks.js", "../../@tsparticles/interaction-external-grab/browser/Options/Classes/Grab.js", "../../@tsparticles/interaction-external-grab/browser/Utils.js", "../../@tsparticles/interaction-external-grab/browser/Grabber.js", "../../@tsparticles/interaction-external-grab/browser/index.js", "../../@tsparticles/interaction-external-pause/browser/Pauser.js", "../../@tsparticles/interaction-external-pause/browser/index.js", "../../@tsparticles/interaction-external-push/browser/Options/Classes/Push.js", "../../@tsparticles/interaction-external-push/browser/Pusher.js", "../../@tsparticles/interaction-external-push/browser/index.js", "../../@tsparticles/interaction-external-remove/browser/Options/Classes/Remove.js", "../../@tsparticles/interaction-external-remove/browser/Remover.js", "../../@tsparticles/interaction-external-remove/browser/index.js", "../../@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseBase.js", "../../@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseDiv.js", "../../@tsparticles/interaction-external-repulse/browser/Options/Classes/Repulse.js", "../../@tsparticles/interaction-external-repulse/browser/Repulser.js", "../../@tsparticles/interaction-external-repulse/browser/index.js", "../../@tsparticles/interaction-external-slow/browser/Options/Classes/Slow.js", "../../@tsparticles/interaction-external-slow/browser/Slower.js", "../../@tsparticles/interaction-external-slow/browser/index.js", "../../@tsparticles/shape-image/browser/Utils.js", "../../@tsparticles/shape-image/browser/GifUtils/Constants.js", "../../@tsparticles/shape-image/browser/GifUtils/ByteStream.js", "../../@tsparticles/shape-image/browser/GifUtils/Enums/DisposalMethod.js", "../../@tsparticles/shape-image/browser/GifUtils/Types/GIFDataHeaders.js", "../../@tsparticles/shape-image/browser/GifUtils/Utils.js", "../../@tsparticles/shape-image/browser/ImageDrawer.js", "../../@tsparticles/shape-image/browser/Options/Classes/Preload.js", "../../@tsparticles/shape-image/browser/ImagePreloader.js", "../../@tsparticles/shape-image/browser/index.js", "../../@tsparticles/updater-life/browser/Options/Classes/LifeDelay.js", "../../@tsparticles/updater-life/browser/Options/Classes/LifeDuration.js", "../../@tsparticles/updater-life/browser/Options/Classes/Life.js", "../../@tsparticles/updater-life/browser/Utils.js", "../../@tsparticles/updater-life/browser/LifeUpdater.js", "../../@tsparticles/updater-life/browser/index.js", "../../@tsparticles/shape-line/browser/Utils.js", "../../@tsparticles/shape-line/browser/LineDrawer.js", "../../@tsparticles/shape-line/browser/index.js", "../../@tsparticles/move-parallax/browser/ParallaxMover.js", "../../@tsparticles/move-parallax/browser/index.js", "../../@tsparticles/interaction-particles-attract/browser/Attractor.js", "../../@tsparticles/interaction-particles-attract/browser/index.js", "../../@tsparticles/interaction-particles-collisions/browser/Absorb.js", "../../@tsparticles/interaction-particles-collisions/browser/Bounce.js", "../../@tsparticles/interaction-particles-collisions/browser/Destroy.js", "../../@tsparticles/interaction-particles-collisions/browser/ResolveCollision.js", "../../@tsparticles/interaction-particles-collisions/browser/Collider.js", "../../@tsparticles/interaction-particles-collisions/browser/index.js", "../../@tsparticles/interaction-particles-links/browser/CircleWarp.js", "../../@tsparticles/interaction-particles-links/browser/Options/Classes/LinksShadow.js", "../../@tsparticles/interaction-particles-links/browser/Options/Classes/LinksTriangle.js", "../../@tsparticles/interaction-particles-links/browser/Options/Classes/Links.js", "../../@tsparticles/interaction-particles-links/browser/Linker.js", "../../@tsparticles/interaction-particles-links/browser/interaction.js", "../../@tsparticles/interaction-particles-links/browser/Utils.js", "../../@tsparticles/interaction-particles-links/browser/LinkInstance.js", "../../@tsparticles/interaction-particles-links/browser/LinksPlugin.js", "../../@tsparticles/interaction-particles-links/browser/plugin.js", "../../@tsparticles/interaction-particles-links/browser/index.js", "../../@tsparticles/shape-polygon/browser/Utils.js", "../../@tsparticles/shape-polygon/browser/PolygonDrawerBase.js", "../../@tsparticles/shape-polygon/browser/PolygonDrawer.js", "../../@tsparticles/shape-polygon/browser/TriangleDrawer.js", "../../@tsparticles/shape-polygon/browser/index.js", "../../@tsparticles/updater-rotate/browser/Options/Classes/RotateAnimation.js", "../../@tsparticles/updater-rotate/browser/Options/Classes/Rotate.js", "../../@tsparticles/updater-rotate/browser/RotateUpdater.js", "../../@tsparticles/updater-rotate/browser/index.js", "../../@tsparticles/shape-square/browser/Utils.js", "../../@tsparticles/shape-square/browser/SquareDrawer.js", "../../@tsparticles/shape-square/browser/index.js", "../../@tsparticles/shape-star/browser/Utils.js", "../../@tsparticles/shape-star/browser/StarDrawer.js", "../../@tsparticles/shape-star/browser/index.js", "../../@tsparticles/updater-stroke-color/browser/StrokeColorUpdater.js", "../../@tsparticles/updater-stroke-color/browser/index.js", "../../@tsparticles/slim/browser/index.js", "../../@tsparticles/shape-text/browser/Utils.js", "../../@tsparticles/shape-text/browser/TextDrawer.js", "../../@tsparticles/shape-text/browser/index.js", "../../@tsparticles/updater-tilt/browser/TiltDirection.js", "../../@tsparticles/updater-tilt/browser/Options/Classes/TiltAnimation.js", "../../@tsparticles/updater-tilt/browser/Options/Classes/Tilt.js", "../../@tsparticles/updater-tilt/browser/TiltUpdater.js", "../../@tsparticles/updater-tilt/browser/index.js", "../../@tsparticles/updater-twinkle/browser/Options/Classes/TwinkleValues.js", "../../@tsparticles/updater-twinkle/browser/Options/Classes/Twinkle.js", "../../@tsparticles/updater-twinkle/browser/TwinkleUpdater.js", "../../@tsparticles/updater-twinkle/browser/index.js", "../../@tsparticles/updater-wobble/browser/Options/Classes/WobbleSpeed.js", "../../@tsparticles/updater-wobble/browser/Options/Classes/Wobble.js", "../../@tsparticles/updater-wobble/browser/Utils.js", "../../@tsparticles/updater-wobble/browser/WobbleUpdater.js", "../../@tsparticles/updater-wobble/browser/index.js", "../../tsparticles/browser/index.js", "../../@tsparticles/updater-gradient/browser/Options/Classes/GradientColorOpacityAnimation.js", "../../@tsparticles/updater-gradient/browser/Options/Classes/GradientColorOpacity.js", "../../@tsparticles/updater-gradient/browser/Options/Classes/AnimatableGradientColor.js", "../../@tsparticles/updater-gradient/browser/Options/Classes/GradientAngleAnimation.js", "../../@tsparticles/updater-gradient/browser/Options/Classes/GradientAngle.js", "../../@tsparticles/updater-gradient/browser/Options/Classes/AnimatableGradient.js", "../../@tsparticles/updater-gradient/browser/Utils.js", "../../@tsparticles/updater-gradient/browser/GradientUpdater.js", "../../@tsparticles/updater-gradient/browser/index.js", "../../@tsparticles/shape-heart/browser/Utils.js", "../../@tsparticles/shape-heart/browser/HeartDrawer.js", "../../@tsparticles/shape-heart/browser/index.js", "../../@tsparticles/plugin-hsv-color/browser/HsvColorManager.js", "../../@tsparticles/plugin-hsv-color/browser/index.js", "../../@tsparticles/plugin-infection/browser/Options/Classes/InfectionStage.js", "../../@tsparticles/plugin-infection/browser/Options/Classes/Infection.js", "../../@tsparticles/plugin-infection/browser/Infecter.js", "../../@tsparticles/plugin-infection/browser/InfectionInstance.js", "../../@tsparticles/plugin-infection/browser/InfectionPlugin.js", "../../@tsparticles/plugin-infection/browser/ParticlesInfecter.js", "../../@tsparticles/plugin-infection/browser/index.js", "../../@tsparticles/shape-infinity/browser/Utils.js", "../../@tsparticles/shape-infinity/browser/InfinityDrawer.js", "../../@tsparticles/shape-infinity/browser/index.js", "../../@tsparticles/interaction-light/browser/Utils.js", "../../@tsparticles/interaction-light/browser/Options/Classes/LightGradient.js", "../../@tsparticles/interaction-light/browser/Options/Classes/LightArea.js", "../../@tsparticles/interaction-light/browser/Options/Classes/LightShadow.js", "../../@tsparticles/interaction-light/browser/Options/Classes/Light.js", "../../@tsparticles/interaction-light/browser/ExternalLighter.js", "../../@tsparticles/interaction-light/browser/ParticlesLighter.js", "../../@tsparticles/interaction-light/browser/index.js", "../../@tsparticles/plugin-motion/browser/Options/Classes/MotionReduce.js", "../../@tsparticles/plugin-motion/browser/Options/Classes/Motion.js", "../../@tsparticles/plugin-motion/browser/MotionInstance.js", "../../@tsparticles/plugin-motion/browser/MotionPlugin.js", "../../@tsparticles/plugin-motion/browser/index.js", "../../@tsparticles/plugin-named-color/browser/NamedColorManager.js", "../../@tsparticles/plugin-named-color/browser/index.js", "../../@tsparticles/plugin-oklch-color/browser/utils.js", "../../@tsparticles/plugin-oklch-color/browser/LchColorManager.js", "../../@tsparticles/plugin-oklch-color/browser/OklchColorManager.js", "../../@tsparticles/plugin-oklch-color/browser/index.js", "../../@tsparticles/updater-orbit/browser/Options/Classes/OrbitRotation.js", "../../@tsparticles/updater-orbit/browser/Options/Classes/Orbit.js", "../../@tsparticles/updater-orbit/browser/Enums.js", "../../@tsparticles/updater-orbit/browser/Utils.js", "../../@tsparticles/updater-orbit/browser/OrbitUpdater.js", "../../@tsparticles/updater-orbit/browser/index.js", "../../@tsparticles/interaction-particles-repulse/browser/Options/Classes/ParticlesRepulse.js", "../../@tsparticles/interaction-particles-repulse/browser/Repulser.js", "../../@tsparticles/interaction-particles-repulse/browser/index.js", "../../@tsparticles/shape-path/browser/SegmentType.js", "../../@tsparticles/shape-path/browser/Utils.js", "../../@tsparticles/shape-path/browser/PathDrawer.js", "../../@tsparticles/shape-path/browser/index.js", "../../@tsparticles/perlin-noise/browser/Grad.js", "../../@tsparticles/perlin-noise/browser/PerlinNoise.js", "../../@tsparticles/path-perlin-noise/browser/PerlinNoiseGenerator.js", "../../@tsparticles/path-perlin-noise/browser/index.js", "../../@tsparticles/plugin-poisson-disc/browser/Options/Classes/Poisson.js", "../../@tsparticles/plugin-poisson-disc/browser/PoissonDisc.js", "../../@tsparticles/plugin-poisson-disc/browser/PoissonInstance.js", "../../@tsparticles/plugin-poisson-disc/browser/PoissonDiscPlugin.js", "../../@tsparticles/plugin-poisson-disc/browser/index.js", "../../@tsparticles/plugin-polygon-mask/browser/pathseg.js", "../../@tsparticles/plugin-polygon-mask/browser/Options/Classes/PolygonMaskDrawStroke.js", "../../@tsparticles/plugin-polygon-mask/browser/Options/Classes/PolygonMaskDraw.js", "../../@tsparticles/plugin-polygon-mask/browser/Enums/PolygonMaskInlineArrangement.js", "../../@tsparticles/plugin-polygon-mask/browser/Options/Classes/PolygonMaskInline.js", "../../@tsparticles/plugin-polygon-mask/browser/Options/Classes/PolygonMaskLocalSvg.js", "../../@tsparticles/plugin-polygon-mask/browser/Enums/PolygonMaskMoveType.js", "../../@tsparticles/plugin-polygon-mask/browser/Options/Classes/PolygonMaskMove.js", "../../@tsparticles/plugin-polygon-mask/browser/Enums/PolygonMaskType.js", "../../@tsparticles/plugin-polygon-mask/browser/Options/Classes/PolygonMask.js", "../../@tsparticles/plugin-polygon-mask/browser/utils.js", "../../@tsparticles/plugin-polygon-mask/browser/PolygonMaskInstance.js", "../../@tsparticles/plugin-polygon-mask/browser/PolygonMaskPlugin.js", "../../@tsparticles/plugin-polygon-mask/browser/index.js", "../../@tsparticles/path-polygon/browser/PolygonPathGenerator.js", "../../@tsparticles/path-polygon/browser/index.js", "../../@tsparticles/shape-rounded-polygon/browser/Utils.js", "../../@tsparticles/shape-rounded-polygon/browser/RoundedPolygonDrawer.js", "../../@tsparticles/shape-rounded-polygon/browser/index.js", "../../@tsparticles/shape-rounded-rect/browser/Utils.js", "../../@tsparticles/shape-rounded-rect/browser/RoundedRectDrawer.js", "../../@tsparticles/shape-rounded-rect/browser/index.js", "../../@tsparticles/path-svg/browser/SVGPathGenerator.js", "../../@tsparticles/path-svg/browser/index.js", "../../@tsparticles/path-simplex-noise/browser/SimplexNoiseGenerator.js", "../../@tsparticles/path-simplex-noise/browser/index.js", "../../@tsparticles/plugin-sounds/browser/Options/Classes/SoundsAudio.js", "../../@tsparticles/plugin-sounds/browser/Options/Classes/SoundsNote.js", "../../@tsparticles/plugin-sounds/browser/Options/Classes/SoundsMelody.js", "../../@tsparticles/plugin-sounds/browser/Options/Classes/SoundsEvent.js", "../../@tsparticles/plugin-sounds/browser/Options/Classes/SoundsIcon.js", "../../@tsparticles/plugin-sounds/browser/Options/Classes/SoundsIcons.js", "../../@tsparticles/plugin-sounds/browser/Options/Classes/SoundsVolume.js", "../../@tsparticles/plugin-sounds/browser/Options/Classes/Sounds.js", "../../@tsparticles/plugin-sounds/browser/enums.js", "../../@tsparticles/plugin-sounds/browser/utils.js", "../../@tsparticles/plugin-sounds/browser/SoundsInstance.js", "../../@tsparticles/plugin-sounds/browser/SoundsPlugin.js", "../../@tsparticles/plugin-sounds/browser/index.js", "../../@tsparticles/shape-spiral/browser/Utils.js", "../../@tsparticles/shape-spiral/browser/SpiralDrawer.js", "../../@tsparticles/shape-spiral/browser/index.js", "../../@tsparticles/effect-trail/browser/TrailDrawer.js", "../../@tsparticles/effect-trail/browser/index.js", "../../@tsparticles/path-zig-zag/browser/ZigZagPathGenerator.js", "../../@tsparticles/path-zig-zag/browser/index.js", "../../@tsparticles/all/browser/index.js"],
  "sourcesContent": ["import { tsParticles } from \"@tsparticles/engine\";\nconst linksMinDistance = 120, moveMinSpeed = 0.5, particlesMinCount = 100, sizeMinValue = 3;\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        void tsParticles\n            .load({\n            element: el,\n            id: selector.replace(\".\", \"\").replace(\"!\", \"\"),\n            options: {\n                fullScreen: {\n                    enable: false,\n                },\n                particles: {\n                    color: {\n                        value: options.color ?? \"!000000\",\n                    },\n                    links: {\n                        color: \"random\",\n                        distance: options.minDistance ?? linksMinDistance,\n                        enable: options.connectParticles ?? false,\n                    },\n                    move: {\n                        enable: true,\n                        speed: options.speed ?? moveMinSpeed,\n                    },\n                    number: {\n                        value: options.maxParticles ?? particlesMinCount,\n                    },\n                    size: {\n                        value: { min: 1, max: options.sizeVariations ?? sizeMinValue },\n                    },\n                },\n                responsive: options.responsive?.map(responsive => ({\n                    maxWidth: responsive.breakpoint,\n                    options: {\n                        particles: {\n                            color: {\n                                value: responsive.options?.color,\n                            },\n                            links: {\n                                distance: responsive.options?.minDistance,\n                                enable: responsive.options?.connectParticles,\n                            },\n                            number: {\n                                value: options.maxParticles,\n                            },\n                            move: {\n                                enable: true,\n                                speed: responsive.options?.speed,\n                            },\n                            size: {\n                                value: responsive.options?.sizeVariations,\n                            },\n                        },\n                    },\n                })),\n            },\n        })\n            .then(container => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container?.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container?.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container?.play();\n    }\n}\n", "import { deepExtend } from \"@tsparticles/engine\";\nconst defaultMinOpacity = 0, defaultMinSize = 0, speedFactor = 3, defaultPjsOptions = {\n    particles: {\n        number: {\n            value: 400,\n            density: {\n                enable: true,\n                value_area: 800,\n            },\n        },\n        color: {\n            value: \"#fff\",\n        },\n        shape: {\n            type: \"circle\",\n            stroke: {\n                width: 0,\n                color: \"#ff0000\",\n            },\n            polygon: {\n                nb_sides: 5,\n            },\n            image: {\n                src: \"\",\n                width: 100,\n                height: 100,\n            },\n        },\n        opacity: {\n            value: 1,\n            random: false,\n            anim: {\n                enable: false,\n                speed: 2,\n                opacity_min: 0,\n                sync: false,\n            },\n        },\n        size: {\n            value: 20,\n            random: false,\n            anim: {\n                enable: false,\n                speed: 20,\n                size_min: 0,\n                sync: false,\n            },\n        },\n        line_linked: {\n            enable: true,\n            distance: 100,\n            color: \"#fff\",\n            opacity: 1,\n            width: 1,\n        },\n        move: {\n            enable: true,\n            speed: 2,\n            direction: \"none\",\n            random: false,\n            straight: false,\n            out_mode: \"out\",\n            bounce: false,\n            attract: {\n                enable: false,\n                rotateX: 3000,\n                rotateY: 3000,\n            },\n        },\n    },\n    interactivity: {\n        detect_on: \"canvas\",\n        events: {\n            onhover: {\n                enable: true,\n                mode: \"grab\",\n            },\n            onclick: {\n                enable: true,\n                mode: \"push\",\n            },\n            resize: true,\n        },\n        modes: {\n            grab: {\n                distance: 100,\n                line_linked: {\n                    opacity: 1,\n                },\n            },\n            bubble: {\n                distance: 200,\n                size: 80,\n                duration: 0.4,\n                opacity: 1,\n                speed: 3,\n            },\n            repulse: {\n                distance: 200,\n                duration: 0.4,\n            },\n            push: {\n                particles_nb: 4,\n            },\n            remove: {\n                particles_nb: 2,\n            },\n        },\n    },\n    retina_detect: false,\n};\nconst initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        const fixedOptions = deepExtend(defaultPjsOptions, options);\n        return engine.load({\n            id: tagId,\n            options: {\n                fullScreen: {\n                    enable: false,\n                },\n                detectRetina: fixedOptions.retina_detect,\n                smooth: true,\n                interactivity: {\n                    detectsOn: fixedOptions.interactivity.detect_on,\n                    events: {\n                        onHover: {\n                            enable: fixedOptions.interactivity.events.onhover.enable,\n                            mode: fixedOptions.interactivity.events.onhover.mode,\n                        },\n                        onClick: {\n                            enable: fixedOptions.interactivity.events.onclick.enable,\n                            mode: fixedOptions.interactivity.events.onclick.mode,\n                        },\n                        resize: {\n                            enable: fixedOptions.interactivity.events.resize,\n                        },\n                    },\n                    modes: {\n                        grab: {\n                            distance: fixedOptions.interactivity.modes.grab.distance,\n                            links: {\n                                opacity: fixedOptions.interactivity.modes.grab.line_linked.opacity,\n                            },\n                        },\n                        bubble: {\n                            distance: fixedOptions.interactivity.modes.bubble.distance,\n                            size: fixedOptions.interactivity.modes.bubble.size,\n                            duration: fixedOptions.interactivity.modes.bubble.duration,\n                            opacity: fixedOptions.interactivity.modes.bubble.opacity,\n                            speed: fixedOptions.interactivity.modes.bubble.speed,\n                        },\n                        repulse: {\n                            distance: fixedOptions.interactivity.modes.repulse.distance,\n                            duration: fixedOptions.interactivity.modes.repulse.duration,\n                        },\n                        push: {\n                            quantity: fixedOptions.interactivity.modes.push.particles_nb,\n                        },\n                        remove: {\n                            quantity: fixedOptions.interactivity.modes.remove.particles_nb,\n                        },\n                    },\n                },\n                particles: {\n                    collisions: {\n                        enable: fixedOptions.particles.move.bounce,\n                    },\n                    number: {\n                        value: fixedOptions.particles.number.value,\n                        density: {\n                            enable: fixedOptions.particles.number.density.enable,\n                            width: fixedOptions.particles.number.density.value_area,\n                        },\n                    },\n                    color: {\n                        value: fixedOptions.particles.color.value,\n                    },\n                    stroke: {\n                        width: fixedOptions.particles.shape.stroke.width,\n                        color: {\n                            value: fixedOptions.particles.shape.stroke.color,\n                        },\n                    },\n                    shape: {\n                        type: fixedOptions.particles.shape.type,\n                        options: {\n                            polygon: {\n                                sides: fixedOptions.particles.shape.polygon.nb_sides,\n                            },\n                            image: {\n                                src: fixedOptions.particles.shape.image.src,\n                                width: fixedOptions.particles.shape.image.width,\n                                height: fixedOptions.particles.shape.image.height,\n                            },\n                        },\n                    },\n                    opacity: {\n                        value: fixedOptions.particles.opacity.random\n                            ? {\n                                min: fixedOptions.particles.opacity.anim.enable\n                                    ? fixedOptions.particles.opacity.anim.opacity_min\n                                    : defaultMinOpacity,\n                                max: fixedOptions.particles.opacity.value,\n                            }\n                            : fixedOptions.particles.opacity.value,\n                        animation: {\n                            enable: fixedOptions.particles.opacity.anim.enable,\n                            speed: fixedOptions.particles.opacity.anim.speed,\n                            sync: fixedOptions.particles.opacity.anim.sync,\n                        },\n                    },\n                    size: {\n                        value: fixedOptions.particles.size.random\n                            ? {\n                                min: fixedOptions.particles.size.anim.enable\n                                    ? fixedOptions.particles.size.anim.size_min\n                                    : defaultMinSize,\n                                max: fixedOptions.particles.size.value,\n                            }\n                            : fixedOptions.particles.size.value,\n                        animation: {\n                            enable: fixedOptions.particles.size.anim.enable,\n                            speed: fixedOptions.particles.size.anim.speed,\n                            sync: fixedOptions.particles.size.anim.sync,\n                        },\n                    },\n                    links: {\n                        enable: fixedOptions.particles.line_linked.enable,\n                        distance: fixedOptions.particles.line_linked.distance,\n                        color: fixedOptions.particles.line_linked.color,\n                        opacity: fixedOptions.particles.line_linked.opacity,\n                        width: fixedOptions.particles.line_linked.width,\n                    },\n                    move: {\n                        enable: fixedOptions.particles.move.enable,\n                        speed: fixedOptions.particles.move.speed / speedFactor,\n                        direction: fixedOptions.particles.move.direction,\n                        random: fixedOptions.particles.move.random,\n                        straight: fixedOptions.particles.move.straight,\n                        outModes: fixedOptions.particles.move.out_mode,\n                        attract: {\n                            enable: fixedOptions.particles.move.attract.enable,\n                            rotate: {\n                                x: fixedOptions.particles.move.attract.rotateX,\n                                y: fixedOptions.particles.move.attract.rotateY,\n                            },\n                        },\n                    },\n                },\n            },\n        });\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .load({ id: tagId, url: pathConfigJson })\n            .then(container => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n", "import { Particles } from \"./marcbruederlin/Particles.js\";\nimport { initParticlesJS } from \"./VincentGarreau/particles.js\";\nconst initPjs = (engine) => {\n    engine.checkVersion(\"3.8.1\");\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n", "const double = 2, defaultHeightFactor = 0.5, defaultHeadWidthFactor = 0.2, defaultBodyHeightFactor = 0.5, half = 0.5, origin = {\n    x: 0,\n    y: 0,\n};\nexport function drawArrow(data) {\n    const { context, particle, radius } = data, width = radius * double, heightFactor = particle.heightFactor ?? defaultHeightFactor, headWidthFactor = particle.headWidthFactor ?? defaultHeadWidthFactor, bodyHeightFactor = particle.bodyHeightFactor ?? defaultBodyHeightFactor, height = width * heightFactor, headWidth = width * headWidthFactor, bodyHeight = height * bodyHeightFactor;\n    context.moveTo(-width * half, origin.y);\n    context.lineTo(-width * half, -bodyHeight * half);\n    context.lineTo(width * half - headWidth, -bodyHeight * half);\n    context.lineTo(width * half - headWidth, -height * half);\n    context.lineTo(width * half + headWidth, origin.y);\n    context.lineTo(width * half - headWidth, height * half);\n    context.lineTo(width * half - headWidth, bodyHeight * half);\n    context.lineTo(-width * half, bodyHeight * half);\n    context.lineTo(-width * half, origin.y);\n}\n", "import { getRangeValue } from \"@tsparticles/engine\";\nimport { drawArrow } from \"./Utils.js\";\nconst defaultHeightFactor = 0.5, defaultHeadWidthFactor = 0.2, defaultBodyHeightFactor = 0.5;\nexport class ArrowDrawer {\n    constructor() {\n        this.validTypes = [\"arrow\"];\n    }\n    draw(data) {\n        drawArrow(data);\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData;\n        particle.heightFactor = getRangeValue(shapeData?.heightFactor ?? defaultHeightFactor);\n        particle.headWidthFactor = getRangeValue(shapeData?.headWidthFactor ?? defaultHeadWidthFactor);\n        particle.bodyHeightFactor = getRangeValue(shapeData?.bodyHeightFactor ?? defaultBodyHeightFactor);\n    }\n}\n", "import { ArrowDrawer } from \"./ArrowDrawer.js\";\nexport async function loadArrowShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new ArrowDrawer(), refresh);\n}\n", "import { defaultAngle, doublePI } from \"@tsparticles/engine\";\nconst bubbleFactor = 3;\nexport class BubbleDrawer {\n    draw(data) {\n        const { context, radius } = data, bubbleRadius = radius / bubbleFactor;\n        context.beginPath();\n        context.arc(bubbleRadius, -bubbleRadius, bubbleRadius, defaultAngle, doublePI, false);\n        context.closePath();\n        context.fillStyle = \"#fff9\";\n        context.fill();\n    }\n}\n", "import { BubbleDrawer } from \"./BubbleDrawer.js\";\nexport async function loadBubbleEffect(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEffect(\"bubble\", new BubbleDrawer(), refresh);\n}\n", "import { isNull } from \"@tsparticles/engine\";\nexport class CanvasMaskOverride {\n    constructor() {\n        this.color = true;\n        this.opacity = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = data.color;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { isFunction, isNull, isString, } from \"@tsparticles/engine\";\nconst minAlpha = 0;\nexport class CanvasMaskPixels {\n    constructor() {\n        this.filter = (pixel) => pixel.a > minAlpha;\n        this.offset = 4;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.filter !== undefined) {\n            if (isString(data.filter)) {\n                if (Object.hasOwn(window, data.filter)) {\n                    const filter = window[data.filter];\n                    if (isFunction(filter)) {\n                        this.filter = filter;\n                    }\n                }\n            }\n            else {\n                this.filter = data.filter;\n            }\n        }\n        if (data.offset !== undefined) {\n            this.offset = data.offset;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nexport class ImageMask {\n    constructor() {\n        this.src = \"\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nexport class FontTextMask {\n    constructor() {\n        this.family = \"sans-serif\";\n        this.size = 100;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.family !== undefined) {\n            this.family = data.family;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.style !== undefined) {\n            this.style = data.style;\n        }\n        if (data.variant !== undefined) {\n            this.variant = data.variant;\n        }\n        if (data.weight !== undefined) {\n            this.weight = data.weight;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nexport class TextMaskLine {\n    constructor() {\n        this.separator = \"\\n\";\n        this.spacing = 10;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.separator !== undefined) {\n            this.separator = data.separator;\n        }\n        if (data.spacing !== undefined) {\n            this.spacing = data.spacing;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { FontTextMask } from \"./FontTextMask.js\";\nimport { TextMaskLine } from \"./TextMaskLine.js\";\nexport class TextMask {\n    constructor() {\n        this.color = \"#000000\";\n        this.font = new FontTextMask();\n        this.lines = new TextMaskLine();\n        this.text = \"\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = data.color;\n        }\n        this.font.load(data.font);\n        this.lines.load(data.lines);\n        if (data.text !== undefined) {\n            this.text = data.text;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { CanvasMaskOverride } from \"./CanvasMaskOverride.js\";\nimport { CanvasMaskPixels } from \"./CanvasMaskPixels.js\";\nimport { ImageMask } from \"./ImageMask.js\";\nimport { TextMask } from \"./TextMask.js\";\nexport class CanvasMask {\n    constructor() {\n        this.enable = false;\n        this.override = new CanvasMaskOverride();\n        this.pixels = new CanvasMaskPixels();\n        this.position = {\n            x: 50,\n            y: 50,\n        };\n        this.scale = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.element !== undefined && data.element instanceof HTMLCanvasElement) {\n            this.element = data.element;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.image) {\n            if (!this.image) {\n                this.image = new ImageMask();\n            }\n            this.image.load(data.image);\n        }\n        this.pixels.load(data.pixels);\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? this.position.x,\n                y: data.position.y ?? this.position.y,\n            };\n        }\n        this.override.load(data.override);\n        if (data.scale !== undefined) {\n            this.scale = data.scale;\n        }\n        if (data.selector !== undefined) {\n            this.selector = data.selector;\n        }\n        if (data.text) {\n            if (!this.text) {\n                this.text = new TextMask();\n            }\n            this.text.load(data.text);\n        }\n    }\n}\n", "import { errorPrefix, getRandom, isNumber, percentDenominator, } from \"@tsparticles/engine\";\nconst half = 0.5, origin = {\n    x: 0,\n    y: 0,\n}, defaultWidth = 0;\nexport function addParticlesFromCanvasPixels(container, data, position, scale, override, filter) {\n    const { height, width } = data, numPixels = height * width, indexArray = shuffle(range(numPixels)), maxParticles = Math.min(numPixels, container.actualOptions.particles.number.value), canvasSize = container.canvas.size;\n    let selectedPixels = 0;\n    const positionOffset = {\n        x: (canvasSize.width * position.x) / percentDenominator - width * scale * half,\n        y: (canvasSize.height * position.y) / percentDenominator - height * scale * half,\n    };\n    while (selectedPixels < maxParticles && indexArray.length) {\n        const defaultIndex = 0, nextIndex = indexArray.pop() ?? defaultIndex, pixelPos = {\n            x: nextIndex % width,\n            y: Math.floor(nextIndex / width),\n        }, pixel = data.pixels[pixelPos.y][pixelPos.x], shouldCreateParticle = filter(pixel);\n        if (!shouldCreateParticle) {\n            continue;\n        }\n        const pos = {\n            x: pixelPos.x * scale + positionOffset.x,\n            y: pixelPos.y * scale + positionOffset.y,\n        }, pOptions = {};\n        if (override.color) {\n            pOptions.color = {\n                value: pixel,\n            };\n        }\n        if (override.opacity) {\n            pOptions.opacity = {\n                value: pixel.a,\n            };\n        }\n        container.particles.addParticle(pos, pOptions);\n        selectedPixels++;\n    }\n}\nexport function getCanvasImageData(ctx, size, offset, clear = true) {\n    const imageData = ctx.getImageData(origin.x, origin.y, size.width, size.height).data;\n    if (clear) {\n        ctx.clearRect(origin.x, origin.y, size.width, size.height);\n    }\n    const pixels = [];\n    for (let i = 0; i < imageData.length; i += offset) {\n        const idx = i / offset, pos = {\n            x: idx % size.width,\n            y: Math.floor(idx / size.width),\n        };\n        if (!pixels[pos.y]) {\n            pixels[pos.y] = [];\n        }\n        const indexesOffset = {\n            r: 0,\n            g: 1,\n            b: 2,\n            a: 3,\n        }, alphaFactor = 255;\n        pixels[pos.y][pos.x] = {\n            r: imageData[i + indexesOffset.r],\n            g: imageData[i + indexesOffset.g],\n            b: imageData[i + indexesOffset.b],\n            a: imageData[i + indexesOffset.a] / alphaFactor,\n        };\n    }\n    return {\n        pixels,\n        width: Math.min(...pixels.map(row => row.length)),\n        height: pixels.length,\n    };\n}\nexport function getImageData(src, offset) {\n    const image = new Image();\n    image.crossOrigin = \"Anonymous\";\n    const p = new Promise((resolve, reject) => {\n        image.onerror = reject;\n        image.onload = () => {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = image.width;\n            canvas.height = image.height;\n            const context = canvas.getContext(\"2d\");\n            if (!context) {\n                return reject(new Error(`${errorPrefix} Could not get canvas context`));\n            }\n            context.drawImage(image, origin.x, origin.y, image.width, image.height, origin.x, origin.y, canvas.width, canvas.height);\n            resolve(getCanvasImageData(context, canvas, offset));\n        };\n    });\n    image.src = src;\n    return p;\n}\nexport function getTextData(textOptions, offset) {\n    const canvas = document.createElement(\"canvas\"), context = canvas.getContext(\"2d\"), { font, text, lines: linesOptions, color } = textOptions;\n    if (!text || !context) {\n        return;\n    }\n    const lines = text.split(linesOptions.separator), fontSize = isNumber(font.size) ? `${font.size}px` : font.size, linesData = [];\n    let maxWidth = 0, totalHeight = 0;\n    for (const line of lines) {\n        context.font = `${font.style ?? \"\"} ${font.variant ?? \"\"} ${font.weight ?? \"\"} ${fontSize} ${font.family}`;\n        const measure = context.measureText(line), lineData = {\n            measure,\n            text: line,\n            height: measure.actualBoundingBoxAscent + measure.actualBoundingBoxDescent,\n            width: measure.width,\n        };\n        maxWidth = Math.max(maxWidth || defaultWidth, lineData.width);\n        totalHeight += lineData.height + linesOptions.spacing;\n        linesData.push(lineData);\n    }\n    canvas.width = maxWidth;\n    canvas.height = totalHeight;\n    let currentHeight = 0;\n    for (const line of linesData) {\n        context.font = `${font.style ?? \"\"} ${font.variant ?? \"\"} ${font.weight ?? \"\"} ${fontSize} ${font.family}`;\n        context.fillStyle = color;\n        context.fillText(line.text, origin.x, currentHeight + line.measure.actualBoundingBoxAscent);\n        currentHeight += line.height + linesOptions.spacing;\n    }\n    return getCanvasImageData(context, canvas, offset);\n}\nfunction shuffle(array) {\n    const lengthOffset = 1, minIndex = 0;\n    for (let currentIndex = array.length - lengthOffset; currentIndex >= minIndex; currentIndex--) {\n        const randomIndex = Math.floor(getRandom() * currentIndex);\n        [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n}\nconst range = (n) => [...Array(n).keys()];\n", "import { addParticlesFromCanvasPixels, getCanvasImageData, getImageData, getTextData, } from \"./utils.js\";\nimport { isNull } from \"@tsparticles/engine\";\nexport class CanvasMaskInstance {\n    constructor(container) {\n        this._container = container;\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions.canvasMask;\n        if (!options?.enable) {\n            return;\n        }\n        let pixelData = {\n            pixels: [],\n            height: 0,\n            width: 0,\n        };\n        const offset = options.pixels.offset;\n        if (options.image) {\n            const url = options.image.src;\n            if (!url) {\n                return;\n            }\n            pixelData = await getImageData(url, offset);\n        }\n        else if (options.text) {\n            const textOptions = options.text;\n            const data = getTextData(textOptions, offset);\n            if (isNull(data)) {\n                return;\n            }\n            pixelData = data;\n        }\n        else if (options.element ?? options.selector) {\n            const canvas = options.element ?? (options.selector && document.querySelector(options.selector));\n            if (!canvas) {\n                return;\n            }\n            const context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            pixelData = getCanvasImageData(context, canvas, offset);\n        }\n        addParticlesFromCanvasPixels(container, pixelData, options.position, options.scale, options.override, options.pixels.filter);\n    }\n}\n", "import { CanvasMask } from \"./Options/Classes/CanvasMask.js\";\nimport { CanvasMaskInstance } from \"./CanvasMaskInstance.js\";\nexport class CanvasMaskPlugin {\n    constructor() {\n        this.id = \"canvasMask\";\n    }\n    getPlugin(container) {\n        return Promise.resolve(new CanvasMaskInstance(container));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        let canvasMaskOptions = options.canvasMask;\n        if (canvasMaskOptions?.load === undefined) {\n            options.canvasMask = canvasMaskOptions = new CanvasMask();\n        }\n        canvasMaskOptions.load(source?.canvasMask);\n    }\n    needsPlugin(options) {\n        return options?.canvasMask?.enable ?? false;\n    }\n}\n", "import { CanvasMaskPlugin } from \"./CanvasMaskPlugin.js\";\nexport async function loadCanvasMaskPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPlugin(new CanvasMaskPlugin(), refresh);\n}\n", "export function drawPath(data, path) {\n    if (!path.segments.length || !path.segments[0].values.length) {\n        return;\n    }\n    const { context, radius } = data;\n    context.moveTo(path.segments[0].values[0].x * radius, path.segments[0].values[0].y * radius);\n    for (const segment of path.segments) {\n        context.bezierCurveTo(segment.values[1].x * radius, segment.values[1].y * radius, segment.values[2].x * radius, segment.values[2].y * radius, segment.values[3].x * radius, segment.values[3].y * radius);\n    }\n    for (let i = path.segments.length - 1; i >= 0; i--) {\n        const segment = path.segments[i];\n        context.bezierCurveTo(-segment.values[2].x * radius, segment.values[2].y * radius, -segment.values[1].x * radius, segment.values[1].y * radius, -segment.values[0].x * radius, segment.values[0].y * radius);\n    }\n}\nconst n = 1.0 / 2;\nexport const paths = {\n    heart: {\n        segments: [\n            {\n                values: [\n                    { x: 0, y: n },\n                    { x: 0, y: n },\n                    { x: n, y: 0 },\n                    { x: n, y: -n / 2 },\n                ],\n            },\n            {\n                values: [\n                    { x: n, y: -n / 2 },\n                    { x: n, y: -n / 2 },\n                    { x: n, y: -n },\n                    { x: n / 2, y: -n },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 2, y: -n },\n                    { x: n / 2, y: -n },\n                    { x: 0, y: -n },\n                    { x: 0, y: -n / 2 },\n                ],\n            },\n        ],\n    },\n    diamond: {\n        segments: [\n            {\n                values: [\n                    { x: 0, y: n },\n                    { x: 0, y: n },\n                    { x: (3 * n) / 4, y: 0 },\n                    { x: (3 * n) / 4, y: 0 },\n                ],\n            },\n            {\n                values: [\n                    { x: (3 * n) / 4, y: 0 },\n                    { x: (3 * n) / 4, y: 0 },\n                    { x: 0, y: -n },\n                    { x: 0, y: -n },\n                ],\n            },\n        ],\n    },\n    club: {\n        segments: [\n            {\n                values: [\n                    { x: 0, y: -n },\n                    { x: 0, y: -n },\n                    { x: n / 2, y: -n },\n                    { x: n / 2, y: -n / 2 },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 2, y: -n / 2 },\n                    { x: n / 2, y: -n / 2 },\n                    { x: n, y: -n / 2 },\n                    { x: n, y: 0 },\n                ],\n            },\n            {\n                values: [\n                    { x: n, y: 0 },\n                    { x: n, y: 0 },\n                    { x: n, y: n / 2 },\n                    { x: n / 2, y: n / 2 },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 2, y: n / 2 },\n                    { x: n / 2, y: n / 2 },\n                    { x: n / 8, y: n / 2 },\n                    { x: n / 8, y: n / 8 },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 8, y: n / 8 },\n                    { x: n / 8, y: n / 2 },\n                    { x: n / 2, y: n },\n                    { x: n / 2, y: n },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 2, y: n },\n                    { x: n / 2, y: n },\n                    { x: 0, y: n },\n                    { x: 0, y: n },\n                ],\n            },\n        ],\n    },\n    spade: {\n        segments: [\n            {\n                values: [\n                    { x: 0, y: -n },\n                    { x: 0, y: -n },\n                    { x: n, y: -n / 2 },\n                    { x: n, y: 0 },\n                ],\n            },\n            {\n                values: [\n                    { x: n, y: 0 },\n                    { x: n, y: 0 },\n                    { x: n, y: n / 2 },\n                    { x: n / 2, y: n / 2 },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 2, y: n / 2 },\n                    { x: n / 2, y: n / 2 },\n                    { x: n / 8, y: n / 2 },\n                    { x: n / 8, y: n / 8 },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 8, y: n / 8 },\n                    { x: n / 8, y: n / 2 },\n                    { x: n / 2, y: n },\n                    { x: n / 2, y: n },\n                ],\n            },\n            {\n                values: [\n                    { x: n / 2, y: n },\n                    { x: n / 2, y: n },\n                    { x: 0, y: n },\n                    { x: 0, y: n },\n                ],\n            },\n        ],\n    },\n};\n", "import { drawPath, paths } from \"./Utils.js\";\nexport class ClubDrawer {\n    constructor() {\n        this.validTypes = [\"club\", \"clubs\"];\n    }\n    draw(data) {\n        drawPath(data, paths.club);\n    }\n}\n", "import { drawPath, paths } from \"./Utils.js\";\nexport class DiamondDrawer {\n    constructor() {\n        this.validTypes = [\"diamond\", \"diamonds\"];\n    }\n    draw(data) {\n        drawPath(data, paths.diamond);\n    }\n}\n", "import { drawPath, paths } from \"./Utils.js\";\nexport class HeartDrawer {\n    constructor() {\n        this.validTypes = [\"heart\", \"hearts\"];\n    }\n    draw(data) {\n        drawPath(data, paths.heart);\n    }\n}\n", "import { drawPath, paths } from \"./Utils.js\";\nexport class SpadeDrawer {\n    constructor() {\n        this.validTypes = [\"spade\", \"spades\"];\n    }\n    draw(data) {\n        drawPath(data, paths.spade);\n    }\n}\n", "import { ClubDrawer } from \"./ClubDrawer.js\";\nimport { DiamondDrawer } from \"./DiamondDrawer.js\";\nimport { HeartDrawer } from \"./HeartDrawer.js\";\nimport { SpadeDrawer } from \"./SpadeDrawer.js\";\nexport async function loadCardsShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new SpadeDrawer(), refresh);\n    await engine.addShape(new HeartDrawer(), refresh);\n    await engine.addShape(new DiamondDrawer(), refresh);\n    await engine.addShape(new ClubDrawer(), refresh);\n}\n", "import { percentDenominator } from \"@tsparticles/engine\";\nconst double = 2, doublePI = Math.PI * double, minAngle = 0, origin = { x: 0, y: 0 }, taperFactor = 0.005;\nexport function drawCogHole(data) {\n    const { context, particle, radius } = data;\n    if (particle.cogHoleRadius === undefined ||\n        particle.cogInnerRadius === undefined ||\n        particle.cogInnerTaper === undefined ||\n        particle.cogNotches === undefined ||\n        particle.cogOuterTaper === undefined) {\n        return;\n    }\n    const holeRadius = (radius * particle.cogHoleRadius) / percentDenominator;\n    context.globalCompositeOperation = \"destination-out\";\n    context.beginPath();\n    context.moveTo(holeRadius, origin.y);\n    context.arc(origin.x, origin.y, holeRadius, minAngle, doublePI);\n    context.closePath();\n    context.fill();\n    context.globalCompositeOperation = \"source-over\";\n}\nexport function drawCog(data) {\n    const { context, particle, radius } = data;\n    if (particle.cogHoleRadius === undefined ||\n        particle.cogInnerRadius === undefined ||\n        particle.cogInnerTaper === undefined ||\n        particle.cogNotches === undefined ||\n        particle.cogOuterTaper === undefined) {\n        return;\n    }\n    const angle = doublePI / (particle.cogNotches * double), taperAI = angle * particle.cogInnerTaper * taperFactor, taperAO = angle * particle.cogOuterTaper * taperFactor, innerRadius = (radius * particle.cogInnerRadius) / percentDenominator;\n    let a = angle, toggle = false;\n    context.moveTo(radius * Math.cos(taperAO), radius * Math.sin(taperAO));\n    for (; a <= doublePI; a += angle) {\n        if (toggle) {\n            context.lineTo(innerRadius * Math.cos(a - taperAI), innerRadius * Math.sin(a - taperAI));\n            context.lineTo(radius * Math.cos(a + taperAO), radius * Math.sin(a + taperAO));\n        }\n        else {\n            context.lineTo(radius * Math.cos(a - taperAO), radius * Math.sin(a - taperAO));\n            context.lineTo(innerRadius * Math.cos(a + taperAI), innerRadius * Math.sin(a + taperAI));\n        }\n        toggle = !toggle;\n    }\n}\n", "import { getRangeValue } from \"@tsparticles/engine\";\nimport { drawCog, drawCogHole } from \"./Utils.js\";\nconst defaultHoleRadius = 44, defaultInnerRadius = 72, defaultInnerTaper = 35, defaultNotches = 7, defaultOuterTaper = 50;\nexport class CogDrawer {\n    constructor() {\n        this.validTypes = [\"cog\"];\n    }\n    afterDraw(data) {\n        drawCogHole(data);\n    }\n    draw(data) {\n        drawCog(data);\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData;\n        particle.cogHoleRadius = getRangeValue(shapeData?.holeRadius ?? defaultHoleRadius);\n        particle.cogInnerRadius = getRangeValue(shapeData?.innerRadius ?? defaultInnerRadius);\n        particle.cogInnerTaper = getRangeValue(shapeData?.innerTaper ?? defaultInnerTaper);\n        particle.cogNotches = getRangeValue(shapeData?.notches ?? defaultNotches);\n        particle.cogOuterTaper = getRangeValue(shapeData?.outerTaper ?? defaultOuterTaper);\n    }\n}\n", "import { CogDrawer } from \"./CogDrawer.js\";\nexport async function loadCogShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new CogDrawer(), refresh);\n}\n", "export function shuffleSeed(seed) {\n    const newSeed = new Uint32Array(1);\n    newSeed[0] = seed[0] * 1664525 + 1013904223;\n    return newSeed;\n}\n", "import { shuffleSeed } from \"../utils.js\";\nexport class SimplexNoise2D {\n    constructor() {\n        this._NORM_2D = 1.0 / 47.0;\n        this._SQUISH_2D = (Math.sqrt(2 + 1) - 1) / 2;\n        this._STRETCH_2D = (1 / Math.sqrt(2 + 1) - 1) / 2;\n        this._base2D = [\n            [1, 1, 0, 1, 0, 1, 0, 0, 0],\n            [1, 1, 0, 1, 0, 1, 2, 1, 1],\n        ];\n        this._gradients2D = [\n            5,\n            2,\n            2,\n            5,\n            -5,\n            2,\n            -2,\n            5,\n            5,\n            -2,\n            2,\n            -5,\n            -5,\n            -2,\n            -2,\n            -5,\n        ];\n        this._lookup = [];\n        this._lookupPairs2D = [\n            0,\n            1,\n            1,\n            0,\n            4,\n            1,\n            17,\n            0,\n            20,\n            2,\n            21,\n            2,\n            22,\n            5,\n            23,\n            5,\n            26,\n            4,\n            39,\n            3,\n            42,\n            4,\n            43,\n            3,\n        ];\n        this._p2D = [\n            0,\n            0,\n            1,\n            -1,\n            0,\n            0,\n            -1,\n            1,\n            0,\n            2,\n            1,\n            1,\n            1,\n            2,\n            2,\n            0,\n            1,\n            2,\n            0,\n            2,\n            1,\n            0,\n            0,\n            0,\n        ];\n        this._perm = new Uint8Array(256);\n        this._perm2D = new Uint8Array(256);\n    }\n    noise(x, y) {\n        const { _gradients2D, _NORM_2D, _SQUISH_2D, _STRETCH_2D, _lookup, _perm, _perm2D } = this;\n        const stretchOffset = (x + y) * _STRETCH_2D, xs = x + stretchOffset, ys = y + stretchOffset, xsb = Math.floor(xs), ysb = Math.floor(ys), squishOffset = (xsb + ysb) * _SQUISH_2D, dx0 = x - (xsb + squishOffset), dy0 = y - (ysb + squishOffset), xins = xs - xsb, yins = ys - ysb, inSum = xins + yins, hash = (xins - yins + 1) | (inSum << 1) | ((inSum + yins) << 2) | ((inSum + xins) << 4);\n        let value = 0;\n        for (let c = _lookup[hash]; c !== undefined; c = c.next) {\n            const dx = dx0 + c.dx, dy = dy0 + c.dy, attn = 2 - dx * dx - dy * dy;\n            if (attn > 0) {\n                const px = xsb + c.xsb, py = ysb + c.ysb, indexPartA = _perm[px & 0xff], index = _perm2D[(indexPartA + py) & 0xff], valuePart = _gradients2D[index] * dx + _gradients2D[index + 1] * dy;\n                value += attn * attn * attn * attn * valuePart;\n            }\n        }\n        return value * _NORM_2D;\n    }\n    seed(clientSeed) {\n        const { _p2D, _base2D, _lookupPairs2D } = this;\n        const contributions = [];\n        for (let i = 0; i < _p2D.length; i += 4) {\n            const baseSet = _base2D[_p2D[i]];\n            let previous = null, current = null;\n            for (let k = 0; k < baseSet.length; k += 3) {\n                current = this._contribution2D(baseSet[k], baseSet[k + 1], baseSet[k + 2]);\n                if (previous === null) {\n                    contributions[i / 4] = current;\n                }\n                else {\n                    previous.next = current;\n                }\n                previous = current;\n            }\n            if (current) {\n                current.next = this._contribution2D(_p2D[i + 1], _p2D[i + 2], _p2D[i + 3]);\n            }\n        }\n        this._lookup = [];\n        for (let i = 0; i < _lookupPairs2D.length; i += 2) {\n            this._lookup[_lookupPairs2D[i]] = contributions[_lookupPairs2D[i + 1]];\n        }\n        this._perm = new Uint8Array(256);\n        this._perm2D = new Uint8Array(256);\n        const source = new Uint8Array(256);\n        for (let i = 0; i < 256; i++) {\n            source[i] = i;\n        }\n        let seed = new Uint32Array(1);\n        seed[0] = clientSeed;\n        seed = shuffleSeed(shuffleSeed(shuffleSeed(seed)));\n        for (let i = 255; i >= 0; i--) {\n            seed = shuffleSeed(seed);\n            const r = new Uint32Array(1);\n            r[0] = (seed[0] + 31) % (i + 1);\n            if (r[0] < 0) {\n                r[0] += i + 1;\n            }\n            this._perm[i] = source[r[0]];\n            this._perm2D[i] = this._perm[i] & 0x0e;\n            source[r[0]] = source[i];\n        }\n    }\n    _contribution2D(multiplier, xsb, ysb) {\n        const { _SQUISH_2D } = this;\n        return {\n            dx: -xsb - multiplier * _SQUISH_2D,\n            dy: -ysb - multiplier * _SQUISH_2D,\n            xsb,\n            ysb,\n        };\n    }\n}\n", "import { shuffleSeed } from \"../utils.js\";\nexport class SimplexNoise3D {\n    constructor() {\n        this._NORM_3D = 1.0 / 103.0;\n        this._SQUISH_3D = (Math.sqrt(3 + 1) - 1) / 3;\n        this._STRETCH_3D = (1 / Math.sqrt(3 + 1) - 1) / 3;\n        this._base3D = [\n            [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1],\n            [2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1, 3, 1, 1, 1],\n            [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 1, 1],\n        ];\n        this._gradients3D = [\n            -11,\n            4,\n            4,\n            -4,\n            11,\n            4,\n            -4,\n            4,\n            11,\n            11,\n            4,\n            4,\n            4,\n            11,\n            4,\n            4,\n            4,\n            11,\n            -11,\n            -4,\n            4,\n            -4,\n            -11,\n            4,\n            -4,\n            -4,\n            11,\n            11,\n            -4,\n            4,\n            4,\n            -11,\n            4,\n            4,\n            -4,\n            11,\n            -11,\n            4,\n            -4,\n            -4,\n            11,\n            -4,\n            -4,\n            4,\n            -11,\n            11,\n            4,\n            -4,\n            4,\n            11,\n            -4,\n            4,\n            4,\n            -11,\n            -11,\n            -4,\n            -4,\n            -4,\n            -11,\n            -4,\n            -4,\n            -4,\n            -11,\n            11,\n            -4,\n            -4,\n            4,\n            -11,\n            -4,\n            4,\n            -4,\n            -11,\n        ];\n        this._lookup = [];\n        this._lookupPairs3D = [\n            0,\n            2,\n            1,\n            1,\n            2,\n            2,\n            5,\n            1,\n            6,\n            0,\n            7,\n            0,\n            32,\n            2,\n            34,\n            2,\n            129,\n            1,\n            133,\n            1,\n            160,\n            5,\n            161,\n            5,\n            518,\n            0,\n            519,\n            0,\n            546,\n            4,\n            550,\n            4,\n            645,\n            3,\n            647,\n            3,\n            672,\n            5,\n            673,\n            5,\n            674,\n            4,\n            677,\n            3,\n            678,\n            4,\n            679,\n            3,\n            680,\n            13,\n            681,\n            13,\n            682,\n            12,\n            685,\n            14,\n            686,\n            12,\n            687,\n            14,\n            712,\n            20,\n            714,\n            18,\n            809,\n            21,\n            813,\n            23,\n            840,\n            20,\n            841,\n            21,\n            1198,\n            19,\n            1199,\n            22,\n            1226,\n            18,\n            1230,\n            19,\n            1325,\n            23,\n            1327,\n            22,\n            1352,\n            15,\n            1353,\n            17,\n            1354,\n            15,\n            1357,\n            17,\n            1358,\n            16,\n            1359,\n            16,\n            1360,\n            11,\n            1361,\n            10,\n            1362,\n            11,\n            1365,\n            10,\n            1366,\n            9,\n            1367,\n            9,\n            1392,\n            11,\n            1394,\n            11,\n            1489,\n            10,\n            1493,\n            10,\n            1520,\n            8,\n            1521,\n            8,\n            1878,\n            9,\n            1879,\n            9,\n            1906,\n            7,\n            1910,\n            7,\n            2005,\n            6,\n            2007,\n            6,\n            2032,\n            8,\n            2033,\n            8,\n            2034,\n            7,\n            2037,\n            6,\n            2038,\n            7,\n            2039,\n            6,\n        ];\n        this._p3D = [\n            0,\n            0,\n            1,\n            -1,\n            0,\n            0,\n            1,\n            0,\n            -1,\n            0,\n            0,\n            -1,\n            1,\n            0,\n            0,\n            0,\n            1,\n            -1,\n            0,\n            0,\n            -1,\n            0,\n            1,\n            0,\n            0,\n            -1,\n            1,\n            0,\n            2,\n            1,\n            1,\n            0,\n            1,\n            1,\n            1,\n            -1,\n            0,\n            2,\n            1,\n            0,\n            1,\n            1,\n            1,\n            -1,\n            1,\n            0,\n            2,\n            0,\n            1,\n            1,\n            1,\n            -1,\n            1,\n            1,\n            1,\n            3,\n            2,\n            1,\n            0,\n            3,\n            1,\n            2,\n            0,\n            1,\n            3,\n            2,\n            0,\n            1,\n            3,\n            1,\n            0,\n            2,\n            1,\n            3,\n            0,\n            2,\n            1,\n            3,\n            0,\n            1,\n            2,\n            1,\n            1,\n            1,\n            0,\n            0,\n            2,\n            2,\n            0,\n            0,\n            1,\n            1,\n            0,\n            1,\n            0,\n            2,\n            0,\n            2,\n            0,\n            1,\n            1,\n            0,\n            0,\n            1,\n            2,\n            0,\n            0,\n            2,\n            2,\n            0,\n            0,\n            0,\n            0,\n            1,\n            1,\n            -1,\n            1,\n            2,\n            0,\n            0,\n            0,\n            0,\n            1,\n            -1,\n            1,\n            1,\n            2,\n            0,\n            0,\n            0,\n            0,\n            1,\n            1,\n            1,\n            -1,\n            2,\n            3,\n            1,\n            1,\n            1,\n            2,\n            0,\n            0,\n            2,\n            2,\n            3,\n            1,\n            1,\n            1,\n            2,\n            2,\n            0,\n            0,\n            2,\n            3,\n            1,\n            1,\n            1,\n            2,\n            0,\n            2,\n            0,\n            2,\n            1,\n            1,\n            -1,\n            1,\n            2,\n            0,\n            0,\n            2,\n            2,\n            1,\n            1,\n            -1,\n            1,\n            2,\n            2,\n            0,\n            0,\n            2,\n            1,\n            -1,\n            1,\n            1,\n            2,\n            0,\n            0,\n            2,\n            2,\n            1,\n            -1,\n            1,\n            1,\n            2,\n            0,\n            2,\n            0,\n            2,\n            1,\n            1,\n            1,\n            -1,\n            2,\n            2,\n            0,\n            0,\n            2,\n            1,\n            1,\n            1,\n            -1,\n            2,\n            0,\n            2,\n            0,\n        ];\n        this._perm = new Uint8Array(256);\n        this._perm3D = new Uint8Array(256);\n    }\n    noise(x, y, z) {\n        const { _STRETCH_3D, _NORM_3D, _SQUISH_3D, _lookup, _perm, _perm3D, _gradients3D } = this, stretchOffset = (x + y + z) * _STRETCH_3D, xs = x + stretchOffset, ys = y + stretchOffset, zs = z + stretchOffset, xsb = Math.floor(xs), ysb = Math.floor(ys), zsb = Math.floor(zs), squishOffset = (xsb + ysb + zsb) * _SQUISH_3D, dx0 = x - (xsb + squishOffset), dy0 = y - (ysb + squishOffset), dz0 = z - (zsb + squishOffset), xins = xs - xsb, yins = ys - ysb, zins = zs - zsb, inSum = xins + yins + zins, hash = (yins - zins + 1) |\n            ((xins - yins + 1) << 1) |\n            ((xins - zins + 1) << 2) |\n            (inSum << 3) |\n            ((inSum + zins) << 5) |\n            ((inSum + yins) << 7) |\n            ((inSum + xins) << 9);\n        let value = 0;\n        for (let c = _lookup[hash]; c !== undefined; c = c.next) {\n            const dx = dx0 + c.dx, dy = dy0 + c.dy, dz = dz0 + c.dz, attn = 2 - dx * dx - dy * dy - dz * dz;\n            if (attn > 0) {\n                const px = xsb + c.xsb, py = ysb + c.ysb, pz = zsb + c.zsb, indexPartA = _perm[px & 0xff], indexPartB = _perm[(indexPartA + py) & 0xff], index = _perm3D[(indexPartB + pz) & 0xff], valuePart = _gradients3D[index] * dx + _gradients3D[index + 1] * dy + _gradients3D[index + 2] * dz;\n                value += attn * attn * attn * attn * valuePart;\n            }\n        }\n        return value * _NORM_3D;\n    }\n    seed(clientSeed) {\n        const { _base3D, _lookupPairs3D, _p3D } = this, contributions = [];\n        for (let i = 0; i < _p3D.length; i += 9) {\n            const baseSet = _base3D[_p3D[i]];\n            let previous = null, current = null;\n            for (let k = 0; k < baseSet.length; k += 4) {\n                current = this._contribution3D(baseSet[k], baseSet[k + 1], baseSet[k + 2], baseSet[k + 3]);\n                if (previous === null) {\n                    contributions[i / 9] = current;\n                }\n                else {\n                    previous.next = current;\n                }\n                previous = current;\n            }\n            if (current) {\n                current.next = this._contribution3D(_p3D[i + 1], _p3D[i + 2], _p3D[i + 3], _p3D[i + 4]);\n                current.next.next = this._contribution3D(_p3D[i + 5], _p3D[i + 6], _p3D[i + 7], _p3D[i + 8]);\n            }\n        }\n        this._lookup = [];\n        for (let i = 0; i < _lookupPairs3D.length; i += 2) {\n            this._lookup[_lookupPairs3D[i]] = contributions[_lookupPairs3D[i + 1]];\n        }\n        this._perm = new Uint8Array(256);\n        this._perm3D = new Uint8Array(256);\n        const source = new Uint8Array(256);\n        for (let i = 0; i < 256; i++) {\n            source[i] = i;\n        }\n        let seed = new Uint32Array(1);\n        seed[0] = clientSeed;\n        seed = shuffleSeed(shuffleSeed(shuffleSeed(seed)));\n        for (let i = 255; i >= 0; i--) {\n            seed = shuffleSeed(seed);\n            const r = new Uint32Array(1);\n            r[0] = (seed[0] + 31) % (i + 1);\n            if (r[0] < 0) {\n                r[0] += i + 1;\n            }\n            this._perm[i] = source[r[0]];\n            this._perm3D[i] = (this._perm[i] % 24) * 3;\n            source[r[0]] = source[i];\n        }\n    }\n    _contribution3D(multiplier, xsb, ysb, zsb) {\n        const { _SQUISH_3D } = this;\n        return {\n            dx: -xsb - multiplier * _SQUISH_3D,\n            dy: -ysb - multiplier * _SQUISH_3D,\n            dz: -zsb - multiplier * _SQUISH_3D,\n            xsb,\n            ysb,\n            zsb,\n        };\n    }\n}\n", "import { shuffleSeed } from \"../utils.js\";\nexport class SimplexNoise4D {\n    constructor() {\n        this._NORM_4D = 1.0 / 30.0;\n        this._SQUISH_4D = (Math.sqrt(4 + 1) - 1) * 0.25;\n        this._STRETCH_4D = (1 / Math.sqrt(4 + 1) - 1) * 0.25;\n        this._lookup = [];\n        this._perm = new Uint8Array(0);\n        this._perm4D = new Uint8Array(0);\n        this._base4D = [\n            [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1],\n            [3, 1, 1, 1, 0, 3, 1, 1, 0, 1, 3, 1, 0, 1, 1, 3, 0, 1, 1, 1, 4, 1, 1, 1, 1],\n            [\n                1,\n                1,\n                0,\n                0,\n                0,\n                1,\n                0,\n                1,\n                0,\n                0,\n                1,\n                0,\n                0,\n                1,\n                0,\n                1,\n                0,\n                0,\n                0,\n                1,\n                2,\n                1,\n                1,\n                0,\n                0,\n                2,\n                1,\n                0,\n                1,\n                0,\n                2,\n                1,\n                0,\n                0,\n                1,\n                2,\n                0,\n                1,\n                1,\n                0,\n                2,\n                0,\n                1,\n                0,\n                1,\n                2,\n                0,\n                0,\n                1,\n                1,\n            ],\n            [\n                3,\n                1,\n                1,\n                1,\n                0,\n                3,\n                1,\n                1,\n                0,\n                1,\n                3,\n                1,\n                0,\n                1,\n                1,\n                3,\n                0,\n                1,\n                1,\n                1,\n                2,\n                1,\n                1,\n                0,\n                0,\n                2,\n                1,\n                0,\n                1,\n                0,\n                2,\n                1,\n                0,\n                0,\n                1,\n                2,\n                0,\n                1,\n                1,\n                0,\n                2,\n                0,\n                1,\n                0,\n                1,\n                2,\n                0,\n                0,\n                1,\n                1,\n            ],\n        ];\n        this._gradients4D = [\n            3,\n            1,\n            1,\n            1,\n            1,\n            3,\n            1,\n            1,\n            1,\n            1,\n            3,\n            1,\n            1,\n            1,\n            1,\n            3,\n            -3,\n            1,\n            1,\n            1,\n            -1,\n            3,\n            1,\n            1,\n            -1,\n            1,\n            3,\n            1,\n            -1,\n            1,\n            1,\n            3,\n            3,\n            -1,\n            1,\n            1,\n            1,\n            -3,\n            1,\n            1,\n            1,\n            -1,\n            3,\n            1,\n            1,\n            -1,\n            1,\n            3,\n            -3,\n            -1,\n            1,\n            1,\n            -1,\n            -3,\n            1,\n            1,\n            -1,\n            -1,\n            3,\n            1,\n            -1,\n            -1,\n            1,\n            3,\n            3,\n            1,\n            -1,\n            1,\n            1,\n            3,\n            -1,\n            1,\n            1,\n            1,\n            -3,\n            1,\n            1,\n            1,\n            -1,\n            3,\n            -3,\n            1,\n            -1,\n            1,\n            -1,\n            3,\n            -1,\n            1,\n            -1,\n            1,\n            -3,\n            1,\n            -1,\n            1,\n            -1,\n            3,\n            3,\n            -1,\n            -1,\n            1,\n            1,\n            -3,\n            -1,\n            1,\n            1,\n            -1,\n            -3,\n            1,\n            1,\n            -1,\n            -1,\n            3,\n            -3,\n            -1,\n            -1,\n            1,\n            -1,\n            -3,\n            -1,\n            1,\n            -1,\n            -1,\n            -3,\n            1,\n            -1,\n            -1,\n            -1,\n            3,\n            3,\n            1,\n            1,\n            -1,\n            1,\n            3,\n            1,\n            -1,\n            1,\n            1,\n            3,\n            -1,\n            1,\n            1,\n            1,\n            -3,\n            -3,\n            1,\n            1,\n            -1,\n            -1,\n            3,\n            1,\n            -1,\n            -1,\n            1,\n            3,\n            -1,\n            -1,\n            1,\n            1,\n            -3,\n            3,\n            -1,\n            1,\n            -1,\n            1,\n            -3,\n            1,\n            -1,\n            1,\n            -1,\n            3,\n            -1,\n            1,\n            -1,\n            1,\n            -3,\n            -3,\n            -1,\n            1,\n            -1,\n            -1,\n            -3,\n            1,\n            -1,\n            -1,\n            -1,\n            3,\n            -1,\n            -1,\n            -1,\n            1,\n            -3,\n            3,\n            1,\n            -1,\n            -1,\n            1,\n            3,\n            -1,\n            -1,\n            1,\n            1,\n            -3,\n            -1,\n            1,\n            1,\n            -1,\n            -3,\n            -3,\n            1,\n            -1,\n            -1,\n            -1,\n            3,\n            -1,\n            -1,\n            -1,\n            1,\n            -3,\n            -1,\n            -1,\n            1,\n            -1,\n            -3,\n            3,\n            -1,\n            -1,\n            -1,\n            1,\n            -3,\n            -1,\n            -1,\n            1,\n            -1,\n            -3,\n            -1,\n            1,\n            -1,\n            -1,\n            -3,\n            -3,\n            -1,\n            -1,\n            -1,\n            -1,\n            -3,\n            -1,\n            -1,\n            -1,\n            -1,\n            -3,\n            -1,\n            -1,\n            -1,\n            -1,\n            -3,\n        ];\n        this._lookupPairs4D = [\n            0,\n            3,\n            1,\n            2,\n            2,\n            3,\n            5,\n            2,\n            6,\n            1,\n            7,\n            1,\n            8,\n            3,\n            9,\n            2,\n            10,\n            3,\n            13,\n            2,\n            16,\n            3,\n            18,\n            3,\n            22,\n            1,\n            23,\n            1,\n            24,\n            3,\n            26,\n            3,\n            33,\n            2,\n            37,\n            2,\n            38,\n            1,\n            39,\n            1,\n            41,\n            2,\n            45,\n            2,\n            54,\n            1,\n            55,\n            1,\n            56,\n            0,\n            57,\n            0,\n            58,\n            0,\n            59,\n            0,\n            60,\n            0,\n            61,\n            0,\n            62,\n            0,\n            63,\n            0,\n            256,\n            3,\n            258,\n            3,\n            264,\n            3,\n            266,\n            3,\n            272,\n            3,\n            274,\n            3,\n            280,\n            3,\n            282,\n            3,\n            2049,\n            2,\n            2053,\n            2,\n            2057,\n            2,\n            2061,\n            2,\n            2081,\n            2,\n            2085,\n            2,\n            2089,\n            2,\n            2093,\n            2,\n            2304,\n            9,\n            2305,\n            9,\n            2312,\n            9,\n            2313,\n            9,\n            16390,\n            1,\n            16391,\n            1,\n            16406,\n            1,\n            16407,\n            1,\n            16422,\n            1,\n            16423,\n            1,\n            16438,\n            1,\n            16439,\n            1,\n            16642,\n            8,\n            16646,\n            8,\n            16658,\n            8,\n            16662,\n            8,\n            18437,\n            6,\n            18439,\n            6,\n            18469,\n            6,\n            18471,\n            6,\n            18688,\n            9,\n            18689,\n            9,\n            18690,\n            8,\n            18693,\n            6,\n            18694,\n            8,\n            18695,\n            6,\n            18696,\n            9,\n            18697,\n            9,\n            18706,\n            8,\n            18710,\n            8,\n            18725,\n            6,\n            18727,\n            6,\n            131128,\n            0,\n            131129,\n            0,\n            131130,\n            0,\n            131131,\n            0,\n            131132,\n            0,\n            131133,\n            0,\n            131134,\n            0,\n            131135,\n            0,\n            131352,\n            7,\n            131354,\n            7,\n            131384,\n            7,\n            131386,\n            7,\n            133161,\n            5,\n            133165,\n            5,\n            133177,\n            5,\n            133181,\n            5,\n            133376,\n            9,\n            133377,\n            9,\n            133384,\n            9,\n            133385,\n            9,\n            133400,\n            7,\n            133402,\n            7,\n            133417,\n            5,\n            133421,\n            5,\n            133432,\n            7,\n            133433,\n            5,\n            133434,\n            7,\n            133437,\n            5,\n            147510,\n            4,\n            147511,\n            4,\n            147518,\n            4,\n            147519,\n            4,\n            147714,\n            8,\n            147718,\n            8,\n            147730,\n            8,\n            147734,\n            8,\n            147736,\n            7,\n            147738,\n            7,\n            147766,\n            4,\n            147767,\n            4,\n            147768,\n            7,\n            147770,\n            7,\n            147774,\n            4,\n            147775,\n            4,\n            149509,\n            6,\n            149511,\n            6,\n            149541,\n            6,\n            149543,\n            6,\n            149545,\n            5,\n            149549,\n            5,\n            149558,\n            4,\n            149559,\n            4,\n            149561,\n            5,\n            149565,\n            5,\n            149566,\n            4,\n            149567,\n            4,\n            149760,\n            9,\n            149761,\n            9,\n            149762,\n            8,\n            149765,\n            6,\n            149766,\n            8,\n            149767,\n            6,\n            149768,\n            9,\n            149769,\n            9,\n            149778,\n            8,\n            149782,\n            8,\n            149784,\n            7,\n            149786,\n            7,\n            149797,\n            6,\n            149799,\n            6,\n            149801,\n            5,\n            149805,\n            5,\n            149814,\n            4,\n            149815,\n            4,\n            149816,\n            7,\n            149817,\n            5,\n            149818,\n            7,\n            149821,\n            5,\n            149822,\n            4,\n            149823,\n            4,\n            149824,\n            37,\n            149825,\n            37,\n            149826,\n            36,\n            149829,\n            34,\n            149830,\n            36,\n            149831,\n            34,\n            149832,\n            37,\n            149833,\n            37,\n            149842,\n            36,\n            149846,\n            36,\n            149848,\n            35,\n            149850,\n            35,\n            149861,\n            34,\n            149863,\n            34,\n            149865,\n            33,\n            149869,\n            33,\n            149878,\n            32,\n            149879,\n            32,\n            149880,\n            35,\n            149881,\n            33,\n            149882,\n            35,\n            149885,\n            33,\n            149886,\n            32,\n            149887,\n            32,\n            150080,\n            49,\n            150082,\n            48,\n            150088,\n            49,\n            150098,\n            48,\n            150104,\n            47,\n            150106,\n            47,\n            151873,\n            46,\n            151877,\n            45,\n            151881,\n            46,\n            151909,\n            45,\n            151913,\n            44,\n            151917,\n            44,\n            152128,\n            49,\n            152129,\n            46,\n            152136,\n            49,\n            152137,\n            46,\n            166214,\n            43,\n            166215,\n            42,\n            166230,\n            43,\n            166247,\n            42,\n            166262,\n            41,\n            166263,\n            41,\n            166466,\n            48,\n            166470,\n            43,\n            166482,\n            48,\n            166486,\n            43,\n            168261,\n            45,\n            168263,\n            42,\n            168293,\n            45,\n            168295,\n            42,\n            168512,\n            31,\n            168513,\n            28,\n            168514,\n            31,\n            168517,\n            28,\n            168518,\n            25,\n            168519,\n            25,\n            280952,\n            40,\n            280953,\n            39,\n            280954,\n            40,\n            280957,\n            39,\n            280958,\n            38,\n            280959,\n            38,\n            281176,\n            47,\n            281178,\n            47,\n            281208,\n            40,\n            281210,\n            40,\n            282985,\n            44,\n            282989,\n            44,\n            283001,\n            39,\n            283005,\n            39,\n            283208,\n            30,\n            283209,\n            27,\n            283224,\n            30,\n            283241,\n            27,\n            283256,\n            22,\n            283257,\n            22,\n            297334,\n            41,\n            297335,\n            41,\n            297342,\n            38,\n            297343,\n            38,\n            297554,\n            29,\n            297558,\n            24,\n            297562,\n            29,\n            297590,\n            24,\n            297594,\n            21,\n            297598,\n            21,\n            299365,\n            26,\n            299367,\n            23,\n            299373,\n            26,\n            299383,\n            23,\n            299389,\n            20,\n            299391,\n            20,\n            299584,\n            31,\n            299585,\n            28,\n            299586,\n            31,\n            299589,\n            28,\n            299590,\n            25,\n            299591,\n            25,\n            299592,\n            30,\n            299593,\n            27,\n            299602,\n            29,\n            299606,\n            24,\n            299608,\n            30,\n            299610,\n            29,\n            299621,\n            26,\n            299623,\n            23,\n            299625,\n            27,\n            299629,\n            26,\n            299638,\n            24,\n            299639,\n            23,\n            299640,\n            22,\n            299641,\n            22,\n            299642,\n            21,\n            299645,\n            20,\n            299646,\n            21,\n            299647,\n            20,\n            299648,\n            61,\n            299649,\n            60,\n            299650,\n            61,\n            299653,\n            60,\n            299654,\n            59,\n            299655,\n            59,\n            299656,\n            58,\n            299657,\n            57,\n            299666,\n            55,\n            299670,\n            54,\n            299672,\n            58,\n            299674,\n            55,\n            299685,\n            52,\n            299687,\n            51,\n            299689,\n            57,\n            299693,\n            52,\n            299702,\n            54,\n            299703,\n            51,\n            299704,\n            56,\n            299705,\n            56,\n            299706,\n            53,\n            299709,\n            50,\n            299710,\n            53,\n            299711,\n            50,\n            299904,\n            61,\n            299906,\n            61,\n            299912,\n            58,\n            299922,\n            55,\n            299928,\n            58,\n            299930,\n            55,\n            301697,\n            60,\n            301701,\n            60,\n            301705,\n            57,\n            301733,\n            52,\n            301737,\n            57,\n            301741,\n            52,\n            301952,\n            79,\n            301953,\n            79,\n            301960,\n            76,\n            301961,\n            76,\n            316038,\n            59,\n            316039,\n            59,\n            316054,\n            54,\n            316071,\n            51,\n            316086,\n            54,\n            316087,\n            51,\n            316290,\n            78,\n            316294,\n            78,\n            316306,\n            73,\n            316310,\n            73,\n            318085,\n            77,\n            318087,\n            77,\n            318117,\n            70,\n            318119,\n            70,\n            318336,\n            79,\n            318337,\n            79,\n            318338,\n            78,\n            318341,\n            77,\n            318342,\n            78,\n            318343,\n            77,\n            430776,\n            56,\n            430777,\n            56,\n            430778,\n            53,\n            430781,\n            50,\n            430782,\n            53,\n            430783,\n            50,\n            431000,\n            75,\n            431002,\n            72,\n            431032,\n            75,\n            431034,\n            72,\n            432809,\n            74,\n            432813,\n            69,\n            432825,\n            74,\n            432829,\n            69,\n            433032,\n            76,\n            433033,\n            76,\n            433048,\n            75,\n            433065,\n            74,\n            433080,\n            75,\n            433081,\n            74,\n            447158,\n            71,\n            447159,\n            68,\n            447166,\n            71,\n            447167,\n            68,\n            447378,\n            73,\n            447382,\n            73,\n            447386,\n            72,\n            447414,\n            71,\n            447418,\n            72,\n            447422,\n            71,\n            449189,\n            70,\n            449191,\n            70,\n            449197,\n            69,\n            449207,\n            68,\n            449213,\n            69,\n            449215,\n            68,\n            449408,\n            67,\n            449409,\n            67,\n            449410,\n            66,\n            449413,\n            64,\n            449414,\n            66,\n            449415,\n            64,\n            449416,\n            67,\n            449417,\n            67,\n            449426,\n            66,\n            449430,\n            66,\n            449432,\n            65,\n            449434,\n            65,\n            449445,\n            64,\n            449447,\n            64,\n            449449,\n            63,\n            449453,\n            63,\n            449462,\n            62,\n            449463,\n            62,\n            449464,\n            65,\n            449465,\n            63,\n            449466,\n            65,\n            449469,\n            63,\n            449470,\n            62,\n            449471,\n            62,\n            449472,\n            19,\n            449473,\n            19,\n            449474,\n            18,\n            449477,\n            16,\n            449478,\n            18,\n            449479,\n            16,\n            449480,\n            19,\n            449481,\n            19,\n            449490,\n            18,\n            449494,\n            18,\n            449496,\n            17,\n            449498,\n            17,\n            449509,\n            16,\n            449511,\n            16,\n            449513,\n            15,\n            449517,\n            15,\n            449526,\n            14,\n            449527,\n            14,\n            449528,\n            17,\n            449529,\n            15,\n            449530,\n            17,\n            449533,\n            15,\n            449534,\n            14,\n            449535,\n            14,\n            449728,\n            19,\n            449729,\n            19,\n            449730,\n            18,\n            449734,\n            18,\n            449736,\n            19,\n            449737,\n            19,\n            449746,\n            18,\n            449750,\n            18,\n            449752,\n            17,\n            449754,\n            17,\n            449784,\n            17,\n            449786,\n            17,\n            451520,\n            19,\n            451521,\n            19,\n            451525,\n            16,\n            451527,\n            16,\n            451528,\n            19,\n            451529,\n            19,\n            451557,\n            16,\n            451559,\n            16,\n            451561,\n            15,\n            451565,\n            15,\n            451577,\n            15,\n            451581,\n            15,\n            451776,\n            19,\n            451777,\n            19,\n            451784,\n            19,\n            451785,\n            19,\n            465858,\n            18,\n            465861,\n            16,\n            465862,\n            18,\n            465863,\n            16,\n            465874,\n            18,\n            465878,\n            18,\n            465893,\n            16,\n            465895,\n            16,\n            465910,\n            14,\n            465911,\n            14,\n            465918,\n            14,\n            465919,\n            14,\n            466114,\n            18,\n            466118,\n            18,\n            466130,\n            18,\n            466134,\n            18,\n            467909,\n            16,\n            467911,\n            16,\n            467941,\n            16,\n            467943,\n            16,\n            468160,\n            13,\n            468161,\n            13,\n            468162,\n            13,\n            468163,\n            13,\n            468164,\n            13,\n            468165,\n            13,\n            468166,\n            13,\n            468167,\n            13,\n            580568,\n            17,\n            580570,\n            17,\n            580585,\n            15,\n            580589,\n            15,\n            580598,\n            14,\n            580599,\n            14,\n            580600,\n            17,\n            580601,\n            15,\n            580602,\n            17,\n            580605,\n            15,\n            580606,\n            14,\n            580607,\n            14,\n            580824,\n            17,\n            580826,\n            17,\n            580856,\n            17,\n            580858,\n            17,\n            582633,\n            15,\n            582637,\n            15,\n            582649,\n            15,\n            582653,\n            15,\n            582856,\n            12,\n            582857,\n            12,\n            582872,\n            12,\n            582873,\n            12,\n            582888,\n            12,\n            582889,\n            12,\n            582904,\n            12,\n            582905,\n            12,\n            596982,\n            14,\n            596983,\n            14,\n            596990,\n            14,\n            596991,\n            14,\n            597202,\n            11,\n            597206,\n            11,\n            597210,\n            11,\n            597214,\n            11,\n            597234,\n            11,\n            597238,\n            11,\n            597242,\n            11,\n            597246,\n            11,\n            599013,\n            10,\n            599015,\n            10,\n            599021,\n            10,\n            599023,\n            10,\n            599029,\n            10,\n            599031,\n            10,\n            599037,\n            10,\n            599039,\n            10,\n            599232,\n            13,\n            599233,\n            13,\n            599234,\n            13,\n            599235,\n            13,\n            599236,\n            13,\n            599237,\n            13,\n            599238,\n            13,\n            599239,\n            13,\n            599240,\n            12,\n            599241,\n            12,\n            599250,\n            11,\n            599254,\n            11,\n            599256,\n            12,\n            599257,\n            12,\n            599258,\n            11,\n            599262,\n            11,\n            599269,\n            10,\n            599271,\n            10,\n            599272,\n            12,\n            599273,\n            12,\n            599277,\n            10,\n            599279,\n            10,\n            599282,\n            11,\n            599285,\n            10,\n            599286,\n            11,\n            599287,\n            10,\n            599288,\n            12,\n            599289,\n            12,\n            599290,\n            11,\n            599293,\n            10,\n            599294,\n            11,\n            599295,\n            10,\n        ];\n        this._p4D = [\n            0,\n            0,\n            1,\n            -1,\n            0,\n            0,\n            0,\n            1,\n            0,\n            -1,\n            0,\n            0,\n            1,\n            0,\n            0,\n            -1,\n            0,\n            0,\n            -1,\n            1,\n            0,\n            0,\n            0,\n            0,\n            1,\n            -1,\n            0,\n            0,\n            0,\n            1,\n            0,\n            -1,\n            0,\n            0,\n            -1,\n            0,\n            1,\n            0,\n            0,\n            0,\n            -1,\n            1,\n            0,\n            0,\n            0,\n            0,\n            1,\n            -1,\n            0,\n            0,\n            -1,\n            0,\n            0,\n            1,\n            0,\n            0,\n            -1,\n            0,\n            1,\n            0,\n            0,\n            0,\n            -1,\n            1,\n            0,\n            2,\n            1,\n            1,\n            0,\n            0,\n            1,\n            1,\n            1,\n            -1,\n            0,\n            1,\n            1,\n            1,\n            0,\n            -1,\n            0,\n            2,\n            1,\n            0,\n            1,\n            0,\n            1,\n            1,\n            -1,\n            1,\n            0,\n            1,\n            1,\n            0,\n            1,\n            -1,\n            0,\n            2,\n            0,\n            1,\n            1,\n            0,\n            1,\n            -1,\n            1,\n            1,\n            0,\n            1,\n            0,\n            1,\n            1,\n            -1,\n            0,\n            2,\n            1,\n            0,\n            0,\n            1,\n            1,\n            1,\n            -1,\n            0,\n            1,\n            1,\n            1,\n            0,\n            -1,\n            1,\n            0,\n            2,\n            0,\n            1,\n            0,\n            1,\n            1,\n            -1,\n            1,\n            0,\n            1,\n            1,\n            0,\n            1,\n            -1,\n            1,\n            0,\n            2,\n            0,\n            0,\n            1,\n            1,\n            1,\n            -1,\n            0,\n            1,\n            1,\n            1,\n            0,\n            -1,\n            1,\n            1,\n            1,\n            4,\n            2,\n            1,\n            1,\n            0,\n            4,\n            1,\n            2,\n            1,\n            0,\n            4,\n            1,\n            1,\n            2,\n            0,\n            1,\n            4,\n            2,\n            1,\n            0,\n            1,\n            4,\n            1,\n            2,\n            0,\n            1,\n            4,\n            1,\n            1,\n            0,\n            2,\n            1,\n            4,\n            2,\n            0,\n            1,\n            1,\n            4,\n            1,\n            0,\n            2,\n            1,\n            4,\n            1,\n            0,\n            1,\n            2,\n            1,\n            4,\n            0,\n            2,\n            1,\n            1,\n            4,\n            0,\n            1,\n            2,\n            1,\n            4,\n            0,\n            1,\n            1,\n            2,\n            1,\n            2,\n            1,\n            1,\n            0,\n            0,\n            3,\n            2,\n            1,\n            0,\n            0,\n            3,\n            1,\n            2,\n            0,\n            0,\n            1,\n            2,\n            1,\n            0,\n            1,\n            0,\n            3,\n            2,\n            0,\n            1,\n            0,\n            3,\n            1,\n            0,\n            2,\n            0,\n            1,\n            2,\n            0,\n            1,\n            1,\n            0,\n            3,\n            0,\n            2,\n            1,\n            0,\n            3,\n            0,\n            1,\n            2,\n            0,\n            1,\n            2,\n            1,\n            0,\n            0,\n            1,\n            3,\n            2,\n            0,\n            0,\n            1,\n            3,\n            1,\n            0,\n            0,\n            2,\n            1,\n            2,\n            0,\n            1,\n            0,\n            1,\n            3,\n            0,\n            2,\n            0,\n            1,\n            3,\n            0,\n            1,\n            0,\n            2,\n            1,\n            2,\n            0,\n            0,\n            1,\n            1,\n            3,\n            0,\n            0,\n            2,\n            1,\n            3,\n            0,\n            0,\n            1,\n            2,\n            2,\n            3,\n            1,\n            1,\n            1,\n            0,\n            2,\n            1,\n            1,\n            1,\n            -1,\n            2,\n            2,\n            0,\n            0,\n            0,\n            2,\n            3,\n            1,\n            1,\n            0,\n            1,\n            2,\n            1,\n            1,\n            -1,\n            1,\n            2,\n            2,\n            0,\n            0,\n            0,\n            2,\n            3,\n            1,\n            0,\n            1,\n            1,\n            2,\n            1,\n            -1,\n            1,\n            1,\n            2,\n            2,\n            0,\n            0,\n            0,\n            2,\n            3,\n            1,\n            1,\n            1,\n            0,\n            2,\n            1,\n            1,\n            1,\n            -1,\n            2,\n            0,\n            2,\n            0,\n            0,\n            2,\n            3,\n            1,\n            1,\n            0,\n            1,\n            2,\n            1,\n            1,\n            -1,\n            1,\n            2,\n            0,\n            2,\n            0,\n            0,\n            2,\n            3,\n            0,\n            1,\n            1,\n            1,\n            2,\n            -1,\n            1,\n            1,\n            1,\n            2,\n            0,\n            2,\n            0,\n            0,\n            2,\n            3,\n            1,\n            1,\n            1,\n            0,\n            2,\n            1,\n            1,\n            1,\n            -1,\n            2,\n            0,\n            0,\n            2,\n            0,\n            2,\n            3,\n            1,\n            0,\n            1,\n            1,\n            2,\n            1,\n            -1,\n            1,\n            1,\n            2,\n            0,\n            0,\n            2,\n            0,\n            2,\n            3,\n            0,\n            1,\n            1,\n            1,\n            2,\n            -1,\n            1,\n            1,\n            1,\n            2,\n            0,\n            0,\n            2,\n            0,\n            2,\n            3,\n            1,\n            1,\n            0,\n            1,\n            2,\n            1,\n            1,\n            -1,\n            1,\n            2,\n            0,\n            0,\n            0,\n            2,\n            2,\n            3,\n            1,\n            0,\n            1,\n            1,\n            2,\n            1,\n            -1,\n            1,\n            1,\n            2,\n            0,\n            0,\n            0,\n            2,\n            2,\n            3,\n            0,\n            1,\n            1,\n            1,\n            2,\n            -1,\n            1,\n            1,\n            1,\n            2,\n            0,\n            0,\n            0,\n            2,\n            2,\n            1,\n            1,\n            1,\n            -1,\n            0,\n            1,\n            1,\n            1,\n            0,\n            -1,\n            0,\n            0,\n            0,\n            0,\n            0,\n            2,\n            1,\n            1,\n            -1,\n            1,\n            0,\n            1,\n            1,\n            0,\n            1,\n            -1,\n            0,\n            0,\n            0,\n            0,\n            0,\n            2,\n            1,\n            -1,\n            1,\n            1,\n            0,\n            1,\n            0,\n            1,\n            1,\n            -1,\n            0,\n            0,\n            0,\n            0,\n            0,\n            2,\n            1,\n            1,\n            -1,\n            0,\n            1,\n            1,\n            1,\n            0,\n            -1,\n            1,\n            0,\n            0,\n            0,\n            0,\n            0,\n            2,\n            1,\n            -1,\n            1,\n            0,\n            1,\n            1,\n            0,\n            1,\n            -1,\n            1,\n            0,\n            0,\n            0,\n            0,\n            0,\n            2,\n            1,\n            -1,\n            0,\n            1,\n            1,\n            1,\n            0,\n            -1,\n            1,\n            1,\n            0,\n            0,\n            0,\n            0,\n            0,\n            2,\n            1,\n            1,\n            1,\n            -1,\n            0,\n            1,\n            1,\n            1,\n            0,\n            -1,\n            2,\n            2,\n            0,\n            0,\n            0,\n            2,\n            1,\n            1,\n            -1,\n            1,\n            0,\n            1,\n            1,\n            0,\n            1,\n            -1,\n            2,\n            2,\n            0,\n            0,\n            0,\n            2,\n            1,\n            1,\n            -1,\n            0,\n            1,\n            1,\n            1,\n            0,\n            -1,\n            1,\n            2,\n            2,\n            0,\n            0,\n            0,\n            2,\n            1,\n            1,\n            1,\n            -1,\n            0,\n            1,\n            1,\n            1,\n            0,\n            -1,\n            2,\n            0,\n            2,\n            0,\n            0,\n            2,\n            1,\n            -1,\n            1,\n            1,\n            0,\n            1,\n            0,\n            1,\n            1,\n            -1,\n            2,\n            0,\n            2,\n            0,\n            0,\n            2,\n            1,\n            -1,\n            1,\n            0,\n            1,\n            1,\n            0,\n            1,\n            -1,\n            1,\n            2,\n            0,\n            2,\n            0,\n            0,\n            2,\n            1,\n            1,\n            -1,\n            1,\n            0,\n            1,\n            1,\n            0,\n            1,\n            -1,\n            2,\n            0,\n            0,\n            2,\n            0,\n            2,\n            1,\n            -1,\n            1,\n            1,\n            0,\n            1,\n            0,\n            1,\n            1,\n            -1,\n            2,\n            0,\n            0,\n            2,\n            0,\n            2,\n            1,\n            -1,\n            0,\n            1,\n            1,\n            1,\n            0,\n            -1,\n            1,\n            1,\n            2,\n            0,\n            0,\n            2,\n            0,\n            2,\n            1,\n            1,\n            -1,\n            0,\n            1,\n            1,\n            1,\n            0,\n            -1,\n            1,\n            2,\n            0,\n            0,\n            0,\n            2,\n            2,\n            1,\n            -1,\n            1,\n            0,\n            1,\n            1,\n            0,\n            1,\n            -1,\n            1,\n            2,\n            0,\n            0,\n            0,\n            2,\n            2,\n            1,\n            -1,\n            0,\n            1,\n            1,\n            1,\n            0,\n            -1,\n            1,\n            1,\n            2,\n            0,\n            0,\n            0,\n            2,\n            3,\n            1,\n            1,\n            0,\n            0,\n            0,\n            2,\n            2,\n            0,\n            0,\n            0,\n            2,\n            1,\n            1,\n            1,\n            -1,\n            3,\n            1,\n            0,\n            1,\n            0,\n            0,\n            2,\n            0,\n            2,\n            0,\n            0,\n            2,\n            1,\n            1,\n            1,\n            -1,\n            3,\n            1,\n            0,\n            0,\n            1,\n            0,\n            2,\n            0,\n            0,\n            2,\n            0,\n            2,\n            1,\n            1,\n            1,\n            -1,\n            3,\n            1,\n            1,\n            0,\n            0,\n            0,\n            2,\n            2,\n            0,\n            0,\n            0,\n            2,\n            1,\n            1,\n            -1,\n            1,\n            3,\n            1,\n            0,\n            1,\n            0,\n            0,\n            2,\n            0,\n            2,\n            0,\n            0,\n            2,\n            1,\n            1,\n            -1,\n            1,\n            3,\n            1,\n            0,\n            0,\n            0,\n            1,\n            2,\n            0,\n            0,\n            0,\n            2,\n            2,\n            1,\n            1,\n            -1,\n            1,\n            3,\n            1,\n            1,\n            0,\n            0,\n            0,\n            2,\n            2,\n            0,\n            0,\n            0,\n            2,\n            1,\n            -1,\n            1,\n            1,\n            3,\n            1,\n            0,\n            0,\n            1,\n            0,\n            2,\n            0,\n            0,\n            2,\n            0,\n            2,\n            1,\n            -1,\n            1,\n            1,\n            3,\n            1,\n            0,\n            0,\n            0,\n            1,\n            2,\n            0,\n            0,\n            0,\n            2,\n            2,\n            1,\n            -1,\n            1,\n            1,\n            3,\n            1,\n            0,\n            1,\n            0,\n            0,\n            2,\n            0,\n            2,\n            0,\n            0,\n            2,\n            -1,\n            1,\n            1,\n            1,\n            3,\n            1,\n            0,\n            0,\n            1,\n            0,\n            2,\n            0,\n            0,\n            2,\n            0,\n            2,\n            -1,\n            1,\n            1,\n            1,\n            3,\n            1,\n            0,\n            0,\n            0,\n            1,\n            2,\n            0,\n            0,\n            0,\n            2,\n            2,\n            -1,\n            1,\n            1,\n            1,\n            3,\n            3,\n            2,\n            1,\n            0,\n            0,\n            3,\n            1,\n            2,\n            0,\n            0,\n            4,\n            1,\n            1,\n            1,\n            1,\n            3,\n            3,\n            2,\n            0,\n            1,\n            0,\n            3,\n            1,\n            0,\n            2,\n            0,\n            4,\n            1,\n            1,\n            1,\n            1,\n            3,\n            3,\n            0,\n            2,\n            1,\n            0,\n            3,\n            0,\n            1,\n            2,\n            0,\n            4,\n            1,\n            1,\n            1,\n            1,\n            3,\n            3,\n            2,\n            0,\n            0,\n            1,\n            3,\n            1,\n            0,\n            0,\n            2,\n            4,\n            1,\n            1,\n            1,\n            1,\n            3,\n            3,\n            0,\n            2,\n            0,\n            1,\n            3,\n            0,\n            1,\n            0,\n            2,\n            4,\n            1,\n            1,\n            1,\n            1,\n            3,\n            3,\n            0,\n            0,\n            2,\n            1,\n            3,\n            0,\n            0,\n            1,\n            2,\n            4,\n            1,\n            1,\n            1,\n            1,\n            3,\n            3,\n            2,\n            1,\n            0,\n            0,\n            3,\n            1,\n            2,\n            0,\n            0,\n            2,\n            1,\n            1,\n            1,\n            -1,\n            3,\n            3,\n            2,\n            0,\n            1,\n            0,\n            3,\n            1,\n            0,\n            2,\n            0,\n            2,\n            1,\n            1,\n            1,\n            -1,\n            3,\n            3,\n            0,\n            2,\n            1,\n            0,\n            3,\n            0,\n            1,\n            2,\n            0,\n            2,\n            1,\n            1,\n            1,\n            -1,\n            3,\n            3,\n            2,\n            1,\n            0,\n            0,\n            3,\n            1,\n            2,\n            0,\n            0,\n            2,\n            1,\n            1,\n            -1,\n            1,\n            3,\n            3,\n            2,\n            0,\n            0,\n            1,\n            3,\n            1,\n            0,\n            0,\n            2,\n            2,\n            1,\n            1,\n            -1,\n            1,\n            3,\n            3,\n            0,\n            2,\n            0,\n            1,\n            3,\n            0,\n            1,\n            0,\n            2,\n            2,\n            1,\n            1,\n            -1,\n            1,\n            3,\n            3,\n            2,\n            0,\n            1,\n            0,\n            3,\n            1,\n            0,\n            2,\n            0,\n            2,\n            1,\n            -1,\n            1,\n            1,\n            3,\n            3,\n            2,\n            0,\n            0,\n            1,\n            3,\n            1,\n            0,\n            0,\n            2,\n            2,\n            1,\n            -1,\n            1,\n            1,\n            3,\n            3,\n            0,\n            0,\n            2,\n            1,\n            3,\n            0,\n            0,\n            1,\n            2,\n            2,\n            1,\n            -1,\n            1,\n            1,\n            3,\n            3,\n            0,\n            2,\n            1,\n            0,\n            3,\n            0,\n            1,\n            2,\n            0,\n            2,\n            -1,\n            1,\n            1,\n            1,\n            3,\n            3,\n            0,\n            2,\n            0,\n            1,\n            3,\n            0,\n            1,\n            0,\n            2,\n            2,\n            -1,\n            1,\n            1,\n            1,\n            3,\n            3,\n            0,\n            0,\n            2,\n            1,\n            3,\n            0,\n            0,\n            1,\n            2,\n            2,\n            -1,\n            1,\n            1,\n            1,\n        ];\n    }\n    noise(x, y, z, w) {\n        const { _perm, _perm4D, _lookup, _STRETCH_4D, _SQUISH_4D, _gradients4D, _NORM_4D } = this;\n        const stretchOffset = (x + y + z + w) * _STRETCH_4D, xs = x + stretchOffset, ys = y + stretchOffset, zs = z + stretchOffset, ws = w + stretchOffset, xsb = Math.floor(xs), ysb = Math.floor(ys), zsb = Math.floor(zs), wsb = Math.floor(ws), squishOffset = (xsb + ysb + zsb + wsb) * _SQUISH_4D, dx0 = x - (xsb + squishOffset), dy0 = y - (ysb + squishOffset), dz0 = z - (zsb + squishOffset), dw0 = w - (wsb + squishOffset), xins = xs - xsb, yins = ys - ysb, zins = zs - zsb, wins = ws - wsb, inSum = xins + yins + zins + wins, hash = (zins - wins + 1) |\n            ((yins - zins + 1) << 1) |\n            ((yins - wins + 1) << 2) |\n            ((xins - yins + 1) << 3) |\n            ((xins - zins + 1) << 4) |\n            ((xins - wins + 1) << 5) |\n            (inSum << 6) |\n            ((inSum + wins) << 8) |\n            ((inSum + zins) << 11) |\n            ((inSum + yins) << 14) |\n            ((inSum + xins) << 17);\n        let value = 0;\n        for (let c = _lookup[hash]; c !== undefined; c = c.next) {\n            const dx = dx0 + c.dx, dy = dy0 + c.dy, dz = dz0 + c.dz, dw = dw0 + c.dw, attn = 2 - dx * dx - dy * dy - dz * dz - dw * dw;\n            if (attn > 0) {\n                const px = xsb + c.xsb, py = ysb + c.ysb, pz = zsb + c.zsb, pw = wsb + c.wsb, indexPartA = _perm[px & 0xff], indexPartB = _perm[(indexPartA + py) & 0xff], indexPartC = _perm[(indexPartB + pz) & 0xff], index = _perm4D[(indexPartC + pw) & 0xff], valuePart = _gradients4D[index] * dx +\n                    _gradients4D[index + 1] * dy +\n                    _gradients4D[index + 2] * dz +\n                    _gradients4D[index + 3] * dw;\n                value += attn * attn * attn * attn * valuePart;\n            }\n        }\n        return value * _NORM_4D;\n    }\n    seed(clientSeed) {\n        const { _p4D, _base4D, _lookupPairs4D } = this;\n        const contributions = [];\n        for (let i = 0; i < _p4D.length; i += 16) {\n            const baseSet = _base4D[_p4D[i]];\n            let previous = null, current = null;\n            for (let k = 0; k < baseSet.length; k += 5) {\n                current = this._contribution4D(baseSet[k], baseSet[k + 1], baseSet[k + 2], baseSet[k + 3], baseSet[k + 4]);\n                if (previous === null) {\n                    contributions[i / 16] = current;\n                }\n                else {\n                    previous.next = current;\n                }\n                previous = current;\n            }\n            if (current) {\n                current.next = this._contribution4D(_p4D[i + 1], _p4D[i + 2], _p4D[i + 3], _p4D[i + 4], _p4D[i + 5]);\n                current.next.next = this._contribution4D(_p4D[i + 6], _p4D[i + 7], _p4D[i + 8], _p4D[i + 9], _p4D[i + 10]);\n                current.next.next.next = this._contribution4D(_p4D[i + 11], _p4D[i + 12], _p4D[i + 13], _p4D[i + 14], _p4D[i + 15]);\n            }\n        }\n        this._lookup = [];\n        for (let i = 0; i < _lookupPairs4D.length; i += 2) {\n            this._lookup[_lookupPairs4D[i]] = contributions[_lookupPairs4D[i + 1]];\n        }\n        this._perm = new Uint8Array(256);\n        this._perm4D = new Uint8Array(256);\n        const source = new Uint8Array(256);\n        for (let i = 0; i < 256; i++) {\n            source[i] = i;\n        }\n        let seed = new Uint32Array(1);\n        seed[0] = clientSeed;\n        seed = shuffleSeed(shuffleSeed(shuffleSeed(seed)));\n        for (let i = 255; i >= 0; i--) {\n            seed = shuffleSeed(seed);\n            const r = new Uint32Array(1);\n            r[0] = (seed[0] + 31) % (i + 1);\n            if (r[0] < 0) {\n                r[0] += i + 1;\n            }\n            this._perm[i] = source[r[0]];\n            this._perm4D[i] = this._perm[i] & 0xfc;\n            source[r[0]] = source[i];\n        }\n    }\n    _contribution4D(multiplier, xsb, ysb, zsb, wsb) {\n        const { _SQUISH_4D } = this;\n        return {\n            dx: -xsb - multiplier * _SQUISH_4D,\n            dy: -ysb - multiplier * _SQUISH_4D,\n            dz: -zsb - multiplier * _SQUISH_4D,\n            dw: -wsb - multiplier * _SQUISH_4D,\n            xsb,\n            ysb,\n            zsb,\n            wsb,\n        };\n    }\n}\n", "import { SimplexNoise2D } from \"./Classes/SimplexNoise2D.js\";\nimport { SimplexNoise3D } from \"./Classes/SimplexNoise3D.js\";\nimport { SimplexNoise4D } from \"./Classes/SimplexNoise4D.js\";\nexport class SimplexNoise {\n    constructor() {\n        this.noise2d = new SimplexNoise2D();\n        this.noise3d = new SimplexNoise3D();\n        this.noise4d = new SimplexNoise4D();\n    }\n}\n", "import { Vector, deepExtend, getRandom, } from \"@tsparticles/engine\";\nimport { SimplexNoise } from \"@tsparticles/simplex-noise\";\nconst defaultOptions = {\n    speed: 0.2,\n    step: 250,\n}, double = 2;\nexport class CurlNoiseGenerator {\n    constructor() {\n        const simplex = new SimplexNoise();\n        this._simplex = simplex.noise2d;\n        this.options = deepExtend({}, defaultOptions);\n    }\n    generate(particle) {\n        const pos = particle.getPosition(), { speed, step } = this.options, x = pos.x / step, y = pos.y / step, eps = 0.001, n1a = this._simplex.noise(x, y + eps), n2a = this._simplex.noise(x, y - eps), a = (n1a - n2a) / (double * eps), n1b = this._simplex.noise(x + eps, y), n2b = this._simplex.noise(x - eps, y), b = (n1b - n2b) / (double * eps);\n        particle.velocity.x = 0;\n        particle.velocity.y = 0;\n        return Vector.create(speed * a, speed * -b);\n    }\n    init(container) {\n        const sourceOptions = container.actualOptions.particles.move.path.options;\n        this.options.seed = sourceOptions?.seed;\n        this.options.speed =\n            (sourceOptions?.speed ?? defaultOptions.speed) * container.retina.pixelRatio;\n        this.options.step = sourceOptions?.step ?? defaultOptions.step;\n        this._simplex.seed(this.options.seed ?? getRandom());\n    }\n    reset() {\n    }\n    update() {\n    }\n}\n", "import { CurlNoiseGenerator } from \"./CurlNoiseGenerator.js\";\nexport const curlNoisePathName = \"curlNoise\";\nexport async function loadCurlNoisePath(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPathGenerator(curlNoisePathName, new CurlNoiseGenerator(), refresh);\n}\n", "import { getRandom } from \"@tsparticles/engine\";\nexport function CurvesPathGen(rndFunc, period, nbHarmonics, attenHarmonics, lowValue = 0, highValue = 1) {\n    const arP0 = [], arP1 = [], amplitudes = [], increments = [], phases = [], randomFunc = rndFunc ?? getRandom;\n    let globAmplitude = 0;\n    if (nbHarmonics < 1)\n        nbHarmonics = 1;\n    for (let kh = 1; kh <= nbHarmonics; ++kh) {\n        arP0[kh] = randomFunc();\n        arP1[kh] = randomFunc();\n        amplitudes[kh] = kh === 1 ? 1 : amplitudes[kh - 1] * attenHarmonics;\n        globAmplitude += amplitudes[kh];\n        increments[kh] = kh / period;\n        phases[kh] = randomFunc();\n    }\n    amplitudes.forEach((value, kh) => (amplitudes[kh] = (value / globAmplitude) * (highValue - lowValue)));\n    return () => {\n        let pf, pfl, signal = 0;\n        for (let kh = nbHarmonics; kh >= 1; --kh) {\n            pf = phases[kh] += increments[kh];\n            if (phases[kh] >= 1) {\n                pf = phases[kh] -= 1;\n                arP0[kh] = arP1[kh];\n                arP1[kh] = randomFunc();\n            }\n            pfl = pf ** 2 * (3 - 2 * pf);\n            signal += (arP0[kh] * (1 - pfl) + arP1[kh] * pfl) * amplitudes[kh];\n        }\n        return signal + lowValue;\n    };\n}\n", "import { Vector, getRandom, isFunction, isString } from \"@tsparticles/engine\";\nimport { CurvesPathGen } from \"./Curves.js\";\nconst double = 2, doublePI = Math.PI * double;\nfunction randomVelocity() {\n    const offset = 0.8, factor = 0.6;\n    return getRandom() * factor + offset;\n}\nexport class CurvesPathGenerator {\n    constructor() {\n        this.options = {\n            rndFunc: null,\n            period: 100,\n            nbHarmonics: 2,\n            attenHarmonics: 0.8,\n            lowValue: -0.03,\n            highValue: 0.03,\n        };\n    }\n    generate(p) {\n        if (!p.pathGen) {\n            const options = this.options;\n            p.pathGen = CurvesPathGen(options.rndFunc, options.period, options.nbHarmonics, options.attenHarmonics, options.lowValue, options.highValue);\n        }\n        if (!p.curveVelocity) {\n            p.curveVelocity = Vector.origin;\n            p.curveVelocity.length = randomVelocity();\n            p.curveVelocity.angle = getRandom() * doublePI;\n        }\n        else {\n            p.curveVelocity.length += 0.01;\n            p.curveVelocity.angle = (p.curveVelocity.angle + p.pathGen()) % doublePI;\n        }\n        p.velocity.x = 0;\n        p.velocity.y = 0;\n        return p.curveVelocity;\n    }\n    init(container) {\n        const sourceOptions = container.actualOptions.particles.move.path.options, { options } = this;\n        if (isFunction(sourceOptions.rndFunc)) {\n            options.rndFunc = sourceOptions.rndFunc;\n        }\n        else if (isString(sourceOptions.rndFunc)) {\n            options.rndFunc =\n                window[sourceOptions.rndFunc] ?? this.options.rndFunc;\n        }\n        options.period = sourceOptions.period ?? options.period;\n        options.nbHarmonics = sourceOptions.nbHarmonics ?? options.nbHarmonics;\n        options.attenHarmonics = sourceOptions.attenHarmonics ?? options.attenHarmonics;\n        options.lowValue = sourceOptions.lowValue ?? options.lowValue;\n        options.highValue = sourceOptions.highValue ?? options.highValue;\n    }\n    reset(particle) {\n        delete particle.pathGen;\n        delete particle.curveVelocity;\n    }\n    update() {\n    }\n}\n", "import { CurvesPathGenerator } from \"./CurvesPathGenerator.js\";\nexport const curvesPathName = \"curvesPathGenerator\";\nexport async function loadCurvesPath(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPathGenerator(curvesPathName, new CurvesPathGenerator(), refresh);\n}\n", "import { EasingType } from \"@tsparticles/engine\";\nexport async function loadEasingBackPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEasing(EasingType.easeInBack, value => {\n        const c1 = 1.70158, c3 = c1 + 1;\n        return c3 * value ** 3 - c1 * value ** 2;\n    }, false);\n    await engine.addEasing(EasingType.easeOutBack, value => {\n        const c1 = 1.70158, c3 = c1 + 1;\n        return 1 + c3 * Math.pow(value - 1, 3) + c1 * Math.pow(value - 1, 2);\n    }, false);\n    await engine.addEasing(EasingType.easeInOutBack, value => {\n        const c1 = 1.70158, c2 = c1 * 1.525;\n        return value < 0.5\n            ? ((2 * value) ** 2 * ((c2 + 1) * 2 * value - c2)) / 2\n            : ((2 * value - 2) ** 2 * ((c2 + 1) * (value * 2 - 2) + c2) + 2) / 2;\n    }, false);\n    await engine.refresh(refresh);\n}\n", "import { EasingType } from \"@tsparticles/engine\";\nexport async function loadEasingCircPlugin(engine, refresh) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEasing(EasingType.easeInCirc, value => 1 - Math.sqrt(1 - value ** 2), false);\n    await engine.addEasing(EasingType.easeOutCirc, value => Math.sqrt(1 - (value - 1) ** 2), false);\n    await engine.addEasing(EasingType.easeInOutCirc, value => value < 0.5 ? (1 - Math.sqrt(1 - (2 * value) ** 2)) / 2 : (Math.sqrt(1 - (-2 * value + 2) ** 2) + 1) / 2, false);\n    await engine.refresh(refresh);\n}\n", "import { EasingType } from \"@tsparticles/engine\";\nexport async function loadEasingCubicPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEasing(EasingType.easeInCubic, value => value ** 3, false);\n    await engine.addEasing(EasingType.easeOutCubic, value => 1 - (1 - value) ** 3, false);\n    await engine.addEasing(EasingType.easeInOutCubic, value => (value < 0.5 ? 4 * value ** 3 : 1 - (-2 * value + 2) ** 3 / 2), false);\n    await engine.refresh(refresh);\n}\n", "import { EasingType } from \"@tsparticles/engine\";\nexport async function loadEasingExpoPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEasing(EasingType.easeInExpo, value => (!value ? 0 : 2 ** (10 * value - 10)), false);\n    await engine.addEasing(EasingType.easeOutExpo, value => (value === 1 ? 1 : 1 - Math.pow(2, -10 * value)), false);\n    await engine.addEasing(EasingType.easeInOutExpo, value => {\n        if (value === 1) {\n            return !value ? 0 : 1;\n        }\n        else if (!value) {\n            return 0;\n        }\n        else {\n            return value < 0.5 ? 2 ** (20 * value - 10) / 2 : (2 - 2 ** (-20 * value + 10)) / 2;\n        }\n    }, false);\n    await engine.refresh(refresh);\n}\n", "import { EasingType } from \"@tsparticles/engine\";\nexport async function loadEasingLinearPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEasing(EasingType.easeInLinear, value => {\n        return value;\n    }, false);\n    await engine.addEasing(EasingType.easeOutLinear, value => {\n        return value;\n    }, false);\n    await engine.addEasing(EasingType.easeInOutLinear, value => {\n        return value;\n    }, false);\n    await engine.refresh(refresh);\n}\n", "import { EasingType } from \"@tsparticles/engine\";\nexport async function loadEasingQuartPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEasing(EasingType.easeInQuart, value => value ** 4, false);\n    await engine.addEasing(EasingType.easeOutQuart, value => 1 - (1 - value) ** 4, false);\n    await engine.addEasing(EasingType.easeInOutQuart, value => (value < 0.5 ? 8 * value ** 4 : 1 - (-2 * value + 2) ** 4 / 2), false);\n    await engine.refresh(refresh);\n}\n", "import { EasingType } from \"@tsparticles/engine\";\nexport async function loadEasingQuintPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEasing(EasingType.easeInQuint, value => value ** 5, false);\n    await engine.addEasing(EasingType.easeOutQuint, value => 1 - (1 - value) ** 5, false);\n    await engine.addEasing(EasingType.easeInOutQuint, value => (value < 0.5 ? 16 * value ** 5 : 1 - (-2 * value + 2) ** 5 / 2), false);\n    await engine.refresh(refresh);\n}\n", "import { EasingType } from \"@tsparticles/engine\";\nexport async function loadEasingSinePlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEasing(EasingType.easeInSine, value => 1 - Math.cos((value * Math.PI) / 2), false);\n    await engine.addEasing(EasingType.easeOutSine, value => Math.sin((value * Math.PI) / 2), false);\n    await engine.addEasing(EasingType.easeInOutSine, value => -(Math.cos(Math.PI * value) - 1) / 2, false);\n    await engine.refresh(refresh);\n}\n", "import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n", "import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nexport class EmitterShapeReplace {\n    constructor() {\n        this.color = false;\n        this.opacity = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = data.color;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { deepExtend, isNull } from \"@tsparticles/engine\";\nimport { EmitterShapeReplace } from \"./EmitterShapeReplace.js\";\nexport class EmitterShape {\n    constructor() {\n        this.options = {};\n        this.replace = new EmitterShapeReplace();\n        this.type = \"square\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options ?? {});\n        }\n        this.replace.load(data.replace);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "import { PixelMode, isNull } from \"@tsparticles/engine\";\nexport class EmitterSize {\n    constructor() {\n        this.mode = PixelMode.percent;\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n", "import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, isNull, setRangeValue, } from \"@tsparticles/engine\";\nimport { EmitterLife } from \"./EmitterLife.js\";\nimport { EmitterRate } from \"./EmitterRate.js\";\nimport { EmitterShape } from \"./EmitterShape.js\";\nimport { EmitterSize } from \"./EmitterSize.js\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = new EmitterShape();\n        this.startCount = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (!this.size) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, particles => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        this.shape.load(data.shape);\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n", "export var EmitterClickMode;\n(function (EmitterClickMode) {\n    EmitterClickMode[\"emitter\"] = \"emitter\";\n})(EmitterClickMode || (EmitterClickMode = {}));\n", "import { PixelMode, Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, getSize, isPointInside, itemFromSingleOrMultiple, millisecondsToSeconds, randomInRange, rangeColorToHsl, } from \"@tsparticles/engine\";\nimport { Emitter } from \"./Options/Classes/Emitter.js\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize.js\";\nconst half = 0.5, defaultLifeDelay = 0, minLifeCount = 0, defaultSpawnDelay = 0, defaultEmitDelay = 0, defaultLifeCount = -1, defaultColorAnimationFactor = 1;\nfunction setParticlesOptionsColor(particlesOptions, color) {\n    if (particlesOptions.color) {\n        particlesOptions.color.value = color;\n    }\n    else {\n        particlesOptions.color = {\n            value: color,\n        };\n    }\n}\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        this.emitters = emitters;\n        this.container = container;\n        this._destroy = () => {\n            this._mutationObserver?.disconnect();\n            this._mutationObserver = undefined;\n            this._resizeObserver?.disconnect();\n            this._resizeObserver = undefined;\n            this.emitters.removeEmitter(this);\n            this._engine.dispatchEvent(\"emitterDestroyed\", {\n                container: this.container,\n                data: {\n                    emitter: this,\n                },\n            });\n        };\n        this._prepareToDie = () => {\n            if (this._paused) {\n                return;\n            }\n            const duration = this.options.life?.duration !== undefined ? getRangeValue(this.options.life.duration) : undefined, minDuration = 0, minLifeCount = 0;\n            if (this.container.retina.reduceFactor &&\n                (this._lifeCount > minLifeCount || this._immortal) &&\n                duration !== undefined &&\n                duration > minDuration) {\n                this._duration = duration * millisecondsToSeconds;\n            }\n        };\n        this._setColorAnimation = (animation, initValue, maxValue, factor = defaultColorAnimationFactor) => {\n            const container = this.container;\n            if (!animation.enable) {\n                return initValue;\n            }\n            const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (delay * millisecondsToSeconds) / container.retina.reduceFactor, defaultColorSpeed = 0, colorSpeed = getRangeValue(animation.speed ?? defaultColorSpeed);\n            return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * factor) % maxValue;\n        };\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay =\n            (getRangeValue(this.options.life.delay ?? defaultLifeDelay) * millisecondsToSeconds) /\n                this.container.retina.reduceFactor;\n        this.position = this._initialPosition ?? this._calcPosition();\n        this.name = this.options.name;\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions ??= {};\n        particlesOptions.move ??= {};\n        particlesOptions.move.direction ??= this.options.direction;\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this._engine, this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this._size = this._calcSize();\n        this.size = getSize(this._size, this.container.canvas.size);\n        this._lifeCount = this.options.life.count ?? defaultLifeCount;\n        this._immortal = this._lifeCount <= minLifeCount;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                this._mutationObserver = new MutationObserver(() => {\n                    this.resize();\n                });\n                this._resizeObserver = new ResizeObserver(() => {\n                    this.resize();\n                });\n                this._mutationObserver.observe(element, {\n                    attributes: true,\n                    attributeFilter: [\"style\", \"width\", \"height\"],\n                });\n                this._resizeObserver.observe(element);\n            }\n        }\n        const shapeOptions = this.options.shape, shapeGenerator = this._engine.emitterShapeManager?.getShapeGenerator(shapeOptions.type);\n        if (shapeGenerator) {\n            this._shape = shapeGenerator.generate(this.position, this.size, this.fill, shapeOptions.options);\n        }\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    async init() {\n        await this._shape?.init();\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > minLifeCount || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= (this._spawnDelay ?? defaultSpawnDelay)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (delay * millisecondsToSeconds) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > minLifeCount || this._immortal) {\n            this._prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n        this._size = this._calcSize();\n        this.size = getSize(this._size, this.container.canvas.size);\n        this._shape?.resize(this.position, this.size);\n    }\n    update(delta) {\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = this._spawnDelay ?? defaultSpawnDelay;\n            this._currentEmitDelay = this._emitDelay ?? defaultEmitDelay;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this._emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > minLifeCount || this._immortal) {\n                    this.position = this._calcPosition();\n                    this._shape?.resize(this.position, this.size);\n                    this._spawnDelay =\n                        (getRangeValue(this.options.life.delay ?? defaultLifeDelay) * millisecondsToSeconds) /\n                            this.container.retina.reduceFactor;\n                }\n                else {\n                    this._destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this._emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n    _calcPosition() {\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect(), pxRatio = this.container.retina.pixelRatio;\n                return {\n                    x: (elRect.x + elRect.width * half) * pxRatio,\n                    y: (elRect.y + elRect.height * half) * pxRatio,\n                };\n            }\n        }\n        return calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n    }\n    _calcSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                    mode: PixelMode.precise,\n                };\n            }\n        }\n        return (this.options.size ??\n            (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: PixelMode.percent,\n                    width: 0,\n                });\n                return size;\n            })());\n    }\n    _emit() {\n        if (this._paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this._emitParticles(quantity);\n    }\n    _emitParticles(quantity) {\n        const singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, singleParticlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = this.options.spawnColor?.animation;\n                if (hslAnimation) {\n                    const maxValues = {\n                        h: 360,\n                        s: 100,\n                        l: 100,\n                    }, colorFactor = 3.6;\n                    this.spawnColor.h = this._setColorAnimation(hslAnimation.h, this.spawnColor.h, maxValues.h, colorFactor);\n                    this.spawnColor.s = this._setColorAnimation(hslAnimation.s, this.spawnColor.s, maxValues.s);\n                    this.spawnColor.l = this._setColorAnimation(hslAnimation.l, this.spawnColor.l, maxValues.l);\n                }\n                setParticlesOptionsColor(particlesOptions, this.spawnColor);\n            }\n            const shapeOptions = this.options.shape;\n            let position = this.position;\n            if (this._shape) {\n                const shapePosData = this._shape.randomPosition();\n                if (shapePosData) {\n                    position = shapePosData.position;\n                    const replaceData = shapeOptions.replace;\n                    if (replaceData.color && shapePosData.color) {\n                        setParticlesOptionsColor(particlesOptions, shapePosData.color);\n                    }\n                    if (replaceData.opacity) {\n                        if (particlesOptions.opacity) {\n                            particlesOptions.opacity.value = shapePosData.opacity;\n                        }\n                        else {\n                            particlesOptions.opacity = {\n                                value: shapePosData.opacity,\n                            };\n                        }\n                    }\n                }\n                else {\n                    position = null;\n                }\n            }\n            if (position) {\n                this.container.particles.addParticle(position, particlesOptions);\n            }\n        }\n    }\n}\n", "import { arrayRandomIndex, executeOnSingleOrMultiple, isArray, isNumber, itemFromArray, } from \"@tsparticles/engine\";\nimport { Emitter } from \"./Options/Classes/Emitter.js\";\nimport { EmitterClickMode } from \"./Enums/EmitterClickMode.js\";\nimport { EmitterInstance } from \"./EmitterInstance.js\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        const defaultIndex = 0;\n        container.getEmitter = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName ?? defaultIndex]\n            : this.array.find(t => t.name === idxOrName);\n        container.addEmitter = async (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    async addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        await emitter.init();\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode !== EmitterClickMode.emitter) {\n            return;\n        }\n        let emittersModeOptions;\n        if (modeEmitters && isArray(modeEmitters.value)) {\n            const minLength = 0;\n            if (modeEmitters.value.length > minLength && modeEmitters.random.enable) {\n                emittersModeOptions = [];\n                const usedIndexes = [];\n                for (let i = 0; i < modeEmitters.random.count; i++) {\n                    const idx = arrayRandomIndex(modeEmitters.value);\n                    if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                        i--;\n                        continue;\n                    }\n                    usedIndexes.push(idx);\n                    emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters.value;\n            }\n        }\n        else {\n            emittersModeOptions = modeEmitters?.value;\n        }\n        const emittersOptions = emittersModeOptions ?? emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n        void executeOnSingleOrMultiple(emittersOptions, async (emitter) => {\n            await this.addEmitter(emitter, ePosition);\n        });\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (!this.emitters) {\n            return;\n        }\n        if (isArray(this.emitters)) {\n            for (const emitterOptions of this.emitters) {\n                await this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            await this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter), minIndex = 0, deleteCount = 1;\n        if (index >= minIndex) {\n            this.array.splice(index, deleteCount);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n", "import { executeOnSingleOrMultiple, isArray, isInArray, } from \"@tsparticles/engine\";\nimport { Emitter } from \"./Options/Classes/Emitter.js\";\nimport { EmitterClickMode } from \"./Enums/EmitterClickMode.js\";\nimport { Emitters } from \"./Emitters.js\";\nexport class EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return Promise.resolve(new Emitters(this._engine, container));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, emitter => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = source?.interactivity?.modes?.emitters;\n        if (interactivityEmitters) {\n            if (isArray(interactivityEmitters)) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map(s => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    const defaultCount = 1;\n                    if (isArray(emitterMode.value)) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? defaultCount,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: emitterMode.value.map(s => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? defaultCount,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((isArray(emitters) && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!options.interactivity?.events?.onClick?.mode &&\n                isInArray(EmitterClickMode.emitter, options.interactivity.events.onClick.mode)));\n    }\n}\n", "const shapeGeneratorss = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShapeGenerator(name, generator) {\n        if (!this.getShapeGenerator(name)) {\n            shapeGeneratorss.set(name, generator);\n        }\n    }\n    getShapeGenerator(name) {\n        return shapeGeneratorss.get(name);\n    }\n    getSupportedShapeGenerators() {\n        return shapeGeneratorss.keys();\n    }\n}\n", "export class EmitterShapeBase {\n    constructor(position, size, fill, options) {\n        this.position = position;\n        this.size = size;\n        this.fill = fill;\n        this.options = options;\n    }\n    resize(position, size) {\n        this.position = position;\n        this.size = size;\n    }\n}\n", "import { EmittersPlugin } from \"./EmittersPlugin.js\";\nimport { ShapeManager } from \"./ShapeManager.js\";\nexport async function loadEmittersPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShapeGenerator) {\n        engine.addEmitterShapeGenerator = (name, generator) => {\n            engine.emitterShapeManager?.addShapeGenerator(name, generator);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n}\nexport * from \"./EmitterContainer.js\";\nexport * from \"./EmitterShapeBase.js\";\nexport * from \"./EmittersEngine.js\";\nexport * from \"./IEmitterShape.js\";\nexport * from \"./IEmitterShapeGenerator.js\";\nexport * from \"./Enums/EmitterClickMode.js\";\nexport * from \"./IRandomPositionData.js\";\n", "import { errorPrefix, isNumber } from \"@tsparticles/engine\";\nconst origin = {\n    x: 0,\n    y: 0,\n}, minWidth = 0;\nexport function getCanvasImageData(ctx, size, offset, clear = true) {\n    const imageData = ctx.getImageData(origin.x, origin.y, size.width, size.height).data;\n    if (clear) {\n        ctx.clearRect(origin.x, origin.y, size.width, size.height);\n    }\n    const pixels = [];\n    for (let i = 0; i < imageData.length; i += offset) {\n        const idx = i / offset, pos = {\n            x: idx % size.width,\n            y: Math.floor(idx / size.width),\n        };\n        if (!pixels[pos.y]) {\n            pixels[pos.y] = [];\n        }\n        const indexesOffset = {\n            r: 0,\n            g: 1,\n            b: 2,\n            a: 3,\n        }, alphaFactor = 255;\n        pixels[pos.y][pos.x] = {\n            r: imageData[i + indexesOffset.r],\n            g: imageData[i + indexesOffset.g],\n            b: imageData[i + indexesOffset.b],\n            a: imageData[i + indexesOffset.a] / alphaFactor,\n        };\n    }\n    return {\n        pixels,\n        width: Math.min(...pixels.map(row => row.length)),\n        height: pixels.length,\n    };\n}\nexport function getImageData(src, offset) {\n    const image = new Image();\n    image.crossOrigin = \"Anonymous\";\n    const p = new Promise((resolve, reject) => {\n        image.onerror = reject;\n        image.onload = () => {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = image.width;\n            canvas.height = image.height;\n            const context = canvas.getContext(\"2d\");\n            if (!context) {\n                return reject(new Error(`${errorPrefix} Could not get canvas context`));\n            }\n            context.drawImage(image, origin.x, origin.y, image.width, image.height, origin.x, origin.y, canvas.width, canvas.height);\n            resolve(getCanvasImageData(context, canvas, offset));\n        };\n    });\n    image.src = src;\n    return p;\n}\nexport function getTextData(textOptions, offset, fill) {\n    const canvas = document.createElement(\"canvas\"), context = canvas.getContext(\"2d\"), { font, text, lines: linesOptions, color } = textOptions;\n    if (!text || !context) {\n        return;\n    }\n    const lines = text.split(linesOptions.separator), fontSize = isNumber(font.size) ? `${font.size}px` : font.size, linesData = [];\n    let maxWidth = 0, totalHeight = 0;\n    for (const line of lines) {\n        context.font = `${font.style || \"\"} ${font.variant || \"\"} ${font.weight || \"\"} ${fontSize} ${font.family}`;\n        const measure = context.measureText(line), lineData = {\n            measure,\n            text: line,\n            height: measure.actualBoundingBoxAscent + measure.actualBoundingBoxDescent,\n            width: measure.width,\n        };\n        maxWidth = Math.max(maxWidth || minWidth, lineData.width);\n        totalHeight += lineData.height + linesOptions.spacing;\n        linesData.push(lineData);\n    }\n    canvas.width = maxWidth;\n    canvas.height = totalHeight;\n    let currentHeight = 0;\n    for (const line of linesData) {\n        context.font = `${font.style || \"\"} ${font.variant || \"\"} ${font.weight || \"\"} ${fontSize} ${font.family}`;\n        if (fill) {\n            context.fillStyle = color;\n            context.fillText(line.text, origin.x, currentHeight + line.measure.actualBoundingBoxAscent);\n        }\n        else {\n            context.strokeStyle = color;\n            context.strokeText(line.text, origin.x, currentHeight + line.measure.actualBoundingBoxAscent);\n        }\n        currentHeight += line.height + linesOptions.spacing;\n    }\n    return getCanvasImageData(context, canvas, offset);\n}\n", "import { EmitterShapeBase } from \"@tsparticles/plugin-emitters\";\nimport { getRandom, isFunction, isNull, isString, } from \"@tsparticles/engine\";\nimport { getCanvasImageData, getImageData, getTextData } from \"./utils.js\";\nconst maxRetries = 100, half = 0.5;\nexport class EmittersCanvasShape extends EmitterShapeBase {\n    constructor(position, size, fill, options) {\n        super(position, size, fill, options);\n        const filter = options.filter, minAlpha = 0;\n        let filterFunc = (pixel) => pixel.a > minAlpha;\n        if (filter !== undefined) {\n            if (isString(filter)) {\n                if (Object.hasOwn(window, filter)) {\n                    const wndFilter = window[filter];\n                    if (isFunction(wndFilter)) {\n                        filterFunc = wndFilter;\n                    }\n                }\n            }\n            else {\n                filterFunc = filter;\n            }\n        }\n        this.filter = filterFunc;\n        this.scale = options.scale;\n        this.pixelData = {\n            pixels: [],\n            height: 0,\n            width: 0,\n        };\n    }\n    async init() {\n        let pixelData;\n        const options = this.options, selector = options.selector, pixels = options.pixels, image = options.image, element = options.element, text = options.text, offset = pixels.offset;\n        if (image) {\n            const url = image.src;\n            if (!url) {\n                return;\n            }\n            pixelData = await getImageData(url, offset);\n        }\n        else if (text) {\n            const data = getTextData(text, offset, this.fill);\n            if (isNull(data)) {\n                return;\n            }\n            pixelData = data;\n        }\n        else if (element ?? selector) {\n            const canvas = element ?? (selector && document.querySelector(selector));\n            if (!canvas) {\n                return;\n            }\n            const context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            pixelData = getCanvasImageData(context, canvas, offset);\n        }\n        if (!pixelData) {\n            return;\n        }\n        this.pixelData = pixelData;\n    }\n    randomPosition() {\n        const { height, width } = this.pixelData, data = this.pixelData, position = this.position, scale = this.scale, positionOffset = {\n            x: position.x - width * scale * half,\n            y: position.y - height * scale * half,\n        };\n        for (let i = 0; i < maxRetries; i++) {\n            const nextIndex = Math.floor(getRandom() * width * height), pixelPos = {\n                x: nextIndex % width,\n                y: Math.floor(nextIndex / width),\n            }, pixel = data.pixels[pixelPos.y][pixelPos.x], shouldCreateParticle = this.filter(pixel);\n            if (!shouldCreateParticle) {\n                continue;\n            }\n            return {\n                position: {\n                    x: pixelPos.x * scale + positionOffset.x,\n                    y: pixelPos.y * scale + positionOffset.y,\n                },\n                color: { ...pixel },\n                opacity: pixel.a,\n            };\n        }\n        return null;\n    }\n    resize(position, size) {\n        super.resize(position, size);\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nexport class PixelsOptions {\n    constructor() {\n        this.offset = 4;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = data.offset;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nexport class TextFontOptions {\n    constructor() {\n        this.family = \"Verdana\";\n        this.size = 32;\n        this.style = \"\";\n        this.variant = \"\";\n        this.weight = \"\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.family !== undefined) {\n            this.family = data.family;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.style !== undefined) {\n            this.style = data.style;\n        }\n        if (data.variant !== undefined) {\n            this.variant = data.variant;\n        }\n        if (data.weight !== undefined) {\n            this.weight = data.weight;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nexport class TextLinesOptions {\n    constructor() {\n        this.separator = \"\\n\";\n        this.spacing = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.separator !== undefined) {\n            this.separator = data.separator;\n        }\n        if (data.spacing !== undefined) {\n            this.spacing = data.spacing;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { TextFontOptions } from \"./TextFontOptions.js\";\nimport { TextLinesOptions } from \"./TextLinesOptions.js\";\nexport class TextOptions {\n    constructor() {\n        this.color = \"#000000\";\n        this.font = new TextFontOptions();\n        this.lines = new TextLinesOptions();\n        this.text = \"\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = data.color;\n        }\n        this.font.load(data.font);\n        this.lines.load(data.lines);\n        if (data.text !== undefined) {\n            this.text = data.text;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { PixelsOptions } from \"./PixelsOptions.js\";\nimport { TextOptions } from \"./TextOptions.js\";\nconst minAlpha = 0;\nexport class EmittersCanvasShapeOptions {\n    constructor() {\n        this.filter = (pixel) => pixel.a > minAlpha;\n        this.pixels = new PixelsOptions();\n        this.scale = 1;\n        this.selector = \"\";\n        this.text = new TextOptions();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.element !== undefined) {\n            this.element = data.element;\n        }\n        if (data.filter !== undefined) {\n            this.filter = data.filter;\n        }\n        this.pixels.load(data.pixels);\n        if (data.scale !== undefined) {\n            this.scale = data.scale;\n        }\n        if (data.selector !== undefined) {\n            this.selector = data.selector;\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        this.text.load(data.text);\n    }\n}\n", "import { EmittersCanvasShape } from \"./EmittersCanvasShape.js\";\nimport { EmittersCanvasShapeOptions } from \"./Options/Classes/EmittersCanvasShapeOptions.js\";\nexport class EmittersCanvasShapeGenerator {\n    generate(position, size, fill, options) {\n        const shapeOptions = new EmittersCanvasShapeOptions();\n        shapeOptions.load(options);\n        return new EmittersCanvasShape(position, size, fill, shapeOptions);\n    }\n}\n", "import { EmittersCanvasShapeGenerator } from \"./EmittersCanvasShapeGenerator.js\";\nexport async function loadEmittersShapeCanvas(engine, refresh = true) {\n    const emittersEngine = engine;\n    emittersEngine.checkVersion(\"3.8.1\");\n    emittersEngine.addEmitterShapeGenerator?.(\"canvas\", new EmittersCanvasShapeGenerator());\n    await emittersEngine.refresh(refresh);\n}\n", "import { getRandom } from \"@tsparticles/engine\";\nconst maxAttempts = 100, half = 0.5;\nexport function generateRandomPointWithinPath(ctx, path, center, size) {\n    let randomPoint = null;\n    for (let attempts = 0; attempts < maxAttempts; attempts++) {\n        const tmpPoint = {\n            x: center.x + getRandom() * size.width - size.width * half,\n            y: center.y + getRandom() * size.height - size.height * half,\n        };\n        if (ctx.isPointInPath(path, tmpPoint.x, tmpPoint.y)) {\n            randomPoint = tmpPoint;\n            break;\n        }\n    }\n    return randomPoint;\n}\nexport function generateRandomPointOnPathPerimeter(ctx, path, center, size) {\n    let randomPoint = null;\n    for (let attempts = 0; attempts < maxAttempts; attempts++) {\n        const tmpPoint = {\n            x: center.x + getRandom() * size.width - size.width * half,\n            y: center.y + getRandom() * size.height - size.height * half,\n        };\n        if (ctx.isPointInStroke(path, tmpPoint.x, tmpPoint.y)) {\n            randomPoint = tmpPoint;\n            break;\n        }\n    }\n    return randomPoint;\n}\n", "import { EmitterShapeBase } from \"@tsparticles/plugin-emitters\";\nimport { errorPrefix, percentDenominator } from \"@tsparticles/engine\";\nimport { generateRandomPointOnPathPerimeter, generateRandomPointWithinPath } from \"./utils.js\";\nconst half = 0.5;\nexport class EmittersPathShape extends EmitterShapeBase {\n    constructor(position, size, fill, options) {\n        super(position, size, fill, options);\n        const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n        if (!ctx) {\n            throw new Error(`${errorPrefix} No 2d context available`);\n        }\n        this.checkContext = ctx;\n        this.points = options.points;\n        const pathData = this.points, path = new Path2D(), offset = {\n            x: position.x - size.width * half,\n            y: position.y - size.height * half,\n        };\n        for (const [index, point] of pathData.entries()) {\n            const coords = {\n                x: offset.x + (point.x * size.width) / percentDenominator,\n                y: offset.y + (point.y * size.height) / percentDenominator,\n            };\n            if (!index) {\n                path.moveTo(coords.x, coords.y);\n            }\n            else {\n                path.lineTo(coords.x, coords.y);\n            }\n        }\n        const firstIndex = 0, firstPathData = pathData[firstIndex];\n        if (firstPathData) {\n            const coords = {\n                x: offset.x + (firstPathData.x * size.width) / percentDenominator,\n                y: offset.y + (firstPathData.y * size.height) / percentDenominator,\n            };\n            path.lineTo(coords.x, coords.y);\n        }\n        this.path = path;\n    }\n    async init() {\n    }\n    randomPosition() {\n        const ctx = this.checkContext, position = this.position, size = this.size, fill = this.fill, path = this.path, res = fill\n            ? generateRandomPointWithinPath(ctx, path, position, size)\n            : generateRandomPointOnPathPerimeter(ctx, path, position, size);\n        return res ? { position: res } : null;\n    }\n    resize(position, size) {\n        super.resize(position, size);\n        const pathData = this.points, path = new Path2D(), offset = {\n            x: position.x - size.width * half,\n            y: position.y - size.height * half,\n        };\n        for (const [index, point] of pathData.entries()) {\n            const coords = {\n                x: offset.x + (point.x * size.width) / percentDenominator,\n                y: offset.y + (point.y * size.height) / percentDenominator,\n            };\n            if (!index) {\n                path.moveTo(coords.x, coords.y);\n            }\n            else {\n                path.lineTo(coords.x, coords.y);\n            }\n        }\n        const firstIndex = 0, firstPathData = pathData[firstIndex];\n        if (firstPathData) {\n            const coords = {\n                x: offset.x + (firstPathData.x * size.width) / percentDenominator,\n                y: offset.y + (firstPathData.y * size.height) / percentDenominator,\n            };\n            path.lineTo(coords.x, coords.y);\n        }\n        this.path = path;\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nconst defaultPosition = { x: 50, y: 50 };\nexport class EmittersPathShapeOptions {\n    constructor() {\n        this.points = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.points !== undefined) {\n            this.points = data.points.map(t => ({ x: t.x ?? defaultPosition.x, y: t.y ?? defaultPosition.y }));\n        }\n    }\n}\n", "import { EmittersPathShape } from \"./EmittersPathShape.js\";\nimport { EmittersPathShapeOptions } from \"./Options/Classes/EmittersPathShapeOptions.js\";\nexport class EmittersPathShapeGenerator {\n    generate(position, size, fill, options) {\n        const shapeOptions = new EmittersPathShapeOptions();\n        shapeOptions.load(options);\n        return new EmittersPathShape(position, size, fill, shapeOptions);\n    }\n}\n", "import { EmittersPathShapeGenerator } from \"./EmittersPathShapeGenerator.js\";\nexport async function loadEmittersShapePath(engine, refresh = true) {\n    const emittersEngine = engine;\n    emittersEngine.checkVersion(\"3.8.1\");\n    emittersEngine.addEmitterShapeGenerator?.(\"path\", new EmittersPathShapeGenerator());\n    await emittersEngine.refresh(refresh);\n}\n", "import { getRandom } from \"@tsparticles/engine\";\nconst double = 2, doublePI = Math.PI * double, defaultRotation = 0, maxAttempts = 100;\nexport function generateRandomPolygon(position, sides, radius, rotationAngle = defaultRotation) {\n    const polygon = [], angle = doublePI / sides;\n    for (let i = 0; i < sides; i++) {\n        const currentAngle = angle * i + rotationAngle;\n        polygon.push({\n            x: position.x + radius * Math.cos(currentAngle),\n            y: position.y + radius * Math.sin(currentAngle),\n        });\n    }\n    return polygon;\n}\nexport function generateRandomPointWithinPolygon(polygon) {\n    const firstIndex = 0, firstPoint = polygon[firstIndex], min = { ...firstPoint }, max = { ...firstPoint };\n    for (const point of polygon) {\n        if (point.x < min.x) {\n            min.x = point.x;\n        }\n        if (point.x > max.x) {\n            max.x = point.x;\n        }\n        if (point.y < min.y) {\n            min.y = point.y;\n        }\n        if (point.y > max.y) {\n            max.y = point.y;\n        }\n    }\n    let randomPoint = null;\n    for (let attempts = 0; attempts < maxAttempts; attempts++) {\n        const tmpPoint = {\n            x: min.x + getRandom() * (max.x - min.x),\n            y: min.y + getRandom() * (max.y - min.y),\n        };\n        if (isPointInPolygon(tmpPoint, polygon)) {\n            randomPoint = tmpPoint;\n            break;\n        }\n    }\n    return randomPoint;\n}\nexport function generateRandomPointOnPolygonPerimeter(polygon) {\n    const sideIndex = Math.floor(getRandom() * polygon.length), startPoint = polygon[sideIndex], offset = 1, endPoint = polygon[(sideIndex + offset) % polygon.length], t = getRandom();\n    return { x: startPoint.x + (endPoint.x - startPoint.x) * t, y: startPoint.y + (endPoint.y - startPoint.y) * t };\n}\nexport function isPointInPolygon(point, polygon) {\n    let inside = false;\n    const offset = 1;\n    for (let i = 0, j = polygon.length - offset; i < polygon.length; j = i++) {\n        const pi = polygon[i], pj = polygon[j];\n        const intersect = pi.y > point.y !== pj.y > point.y && point.x < ((pj.x - pi.x) * (point.y - pi.y)) / (pj.y - pi.y) + pi.x;\n        if (intersect) {\n            inside = !inside;\n        }\n    }\n    return inside;\n}\n", "import { EmitterShapeBase } from \"@tsparticles/plugin-emitters\";\nimport { degToRad } from \"@tsparticles/engine\";\nimport { generateRandomPointOnPolygonPerimeter, generateRandomPointWithinPolygon, generateRandomPolygon, } from \"./utils.js\";\nconst half = 0.5;\nexport class EmittersPolygonShape extends EmitterShapeBase {\n    constructor(position, size, fill, options) {\n        super(position, size, fill, options);\n        this.sides = options.sides;\n        this.angle = degToRad(options.angle);\n        this.polygon = generateRandomPolygon(position, this.sides, size.width * half, this.angle);\n    }\n    async init() {\n    }\n    randomPosition() {\n        const fill = this.fill, polygon = this.polygon, res = fill ? generateRandomPointWithinPolygon(polygon) : generateRandomPointOnPolygonPerimeter(polygon);\n        return res ? { position: res } : null;\n    }\n    resize(position, size) {\n        super.resize(position, size);\n        this.polygon = generateRandomPolygon(position, this.sides, size.width * half, this.angle);\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nexport class EmittersPolygonShapeOptions {\n    constructor() {\n        this.angle = 0;\n        this.sides = 5;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = data.angle;\n        }\n        if (data.sides !== undefined) {\n            this.sides = data.sides;\n        }\n    }\n}\n", "import { EmittersPolygonShape } from \"./EmittersPolygonShape.js\";\nimport { EmittersPolygonShapeOptions } from \"./Options/Classes/EmittersPolygonShapeOptions.js\";\nexport class EmittersPolygonShapeGenerator {\n    generate(position, size, fill, options) {\n        const shapeOptions = new EmittersPolygonShapeOptions();\n        shapeOptions.load(options);\n        return new EmittersPolygonShape(position, size, fill, shapeOptions);\n    }\n}\n", "import { EmittersPolygonShapeGenerator } from \"./EmittersPolygonShapeGenerator.js\";\nexport async function loadEmittersShapePolygon(engine, refresh = true) {\n    const emittersEngine = engine;\n    emittersEngine.checkVersion(\"3.8.1\");\n    emittersEngine.addEmitterShapeGenerator?.(\"polygon\", new EmittersPolygonShapeGenerator());\n    await emittersEngine.refresh(refresh);\n}\n", "export class ExportImageInstance {\n    constructor(container, engine) {\n        this._exportImage = async (data) => {\n            const element = this._container.canvas.element;\n            if (!element) {\n                return;\n            }\n            return new Promise(resolve => {\n                element.toBlob(blob => {\n                    if (!blob) {\n                        resolve(undefined);\n                        return;\n                    }\n                    resolve(blob);\n                }, data.type ?? \"image/png\", data.quality);\n            });\n        };\n        this._container = container;\n        this._engine = engine;\n    }\n    async export(type, data) {\n        const res = {\n            supported: false,\n        };\n        switch (type) {\n            case \"image\":\n                res.supported = true;\n                res.blob = await this._exportImage(data);\n                break;\n        }\n        return res;\n    }\n}\n", "import { ExportImageInstance } from \"./ExportImageInstance.js\";\nexport class ExportImagePlugin {\n    constructor(engine) {\n        this.id = \"export-image\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return Promise.resolve(new ExportImageInstance(container, this._engine));\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n", "import { ExportImagePlugin } from \"./ExportImagePlugin.js\";\nexport async function loadExportImagePlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPlugin(new ExportImagePlugin(engine), refresh);\n}\n", "const indent = 2;\nexport class ExportJSONInstance {\n    constructor(container, engine) {\n        this._exportJSON = async () => {\n            const json = JSON.stringify(this._container.actualOptions, (key, value) => {\n                if (key.startsWith(\"_\")) {\n                    return;\n                }\n                return value;\n            }, indent);\n            return Promise.resolve(new Blob([json], { type: \"application/json\" }));\n        };\n        this._container = container;\n        this._engine = engine;\n    }\n    async export(type) {\n        const res = {\n            supported: false,\n        };\n        switch (type) {\n            case \"json\":\n                res.supported = true;\n                res.blob = await this._exportJSON();\n                break;\n        }\n        return res;\n    }\n}\n", "import { ExportJSONInstance } from \"./ExportJSONInstance.js\";\nexport class ExportJSONPlugin {\n    constructor(engine) {\n        this.id = \"export-json\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return Promise.resolve(new ExportJSONInstance(container, this._engine));\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n", "import { ExportJSONPlugin } from \"./ExportJSONPlugin.js\";\nexport async function loadExportJSONPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPlugin(new ExportJSONPlugin(engine), refresh);\n}\n", "import { millisecondsToSeconds, } from \"@tsparticles/engine\";\nconst videoTypes = [\"webm\", \"ogg\", \"mp4\", \"x-matroska\"], codecs = [\n    \"vp9\",\n    \"vp9.0\",\n    \"vp8\",\n    \"vp8.0\",\n    \"avc1\",\n    \"av1\",\n    \"h265\",\n    \"h.265\",\n    \"h264\",\n    \"h.264\",\n    \"opus\",\n    \"pcm\",\n    \"aac\",\n    \"mpeg\",\n    \"mp4a\",\n];\nfunction getVideoSupportedMimeTypes() {\n    const isSupported = (type) => MediaRecorder.isTypeSupported(type), supported = [];\n    videoTypes.forEach(type => {\n        const mimeType = `video/${type}`;\n        codecs.forEach(codec => [\n            `${mimeType};codecs=${codec}`,\n            `${mimeType};codecs=${codec.toUpperCase()}`,\n        ].forEach(variation => {\n            if (isSupported(variation)) {\n                supported.push(variation);\n            }\n        }));\n        if (isSupported(mimeType)) {\n            supported.push(mimeType);\n        }\n    });\n    return supported;\n}\nexport class ExportVideoInstance {\n    constructor(container, engine) {\n        this._supportedTypes = [];\n        this._exportVideo = async (data) => {\n            const element = this._container.canvas.element;\n            if (!element) {\n                return;\n            }\n            return new Promise(resolve => {\n                const stream = element.captureStream(data.fps ?? this._container.actualOptions.fpsLimit), firstIndex = 0, mimeType = data.mimeType ?? this._supportedTypes[firstIndex], recorder = new MediaRecorder(stream, {\n                    mimeType,\n                }), chunks = [], defaultDuration = 5;\n                recorder.addEventListener(\"dataavailable\", (event) => {\n                    chunks.push(event.data);\n                });\n                recorder.addEventListener(\"stop\", () => {\n                    resolve(new Blob(chunks, { type: mimeType }));\n                });\n                recorder.start();\n                setTimeout(() => {\n                    recorder.stop();\n                }, data.duration ?? defaultDuration * millisecondsToSeconds);\n            });\n        };\n        this._container = container;\n        this._engine = engine;\n        this._supportedTypes = getVideoSupportedMimeTypes();\n    }\n    async export(type, data) {\n        const res = {\n            supported: false,\n        };\n        switch (type) {\n            case \"video\":\n                res.supported = true;\n                res.blob = await this._exportVideo(data);\n                break;\n        }\n        return res;\n    }\n}\n", "import { ExportVideoInstance } from \"./ExportVideoInstance.js\";\nexport class ExportVideoPlugin {\n    constructor(engine) {\n        this.id = \"export-video\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return Promise.resolve(new ExportVideoInstance(container, this._engine));\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n", "import { ExportVideoPlugin } from \"./ExportVideoPlugin.js\";\nexport async function loadExportVideoPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPlugin(new ExportVideoPlugin(engine), refresh);\n}\n", "import { deepExtend, isNull, } from \"@tsparticles/engine\";\nexport class InteractivityParticle {\n    constructor() {\n        this.replaceCursor = false;\n        this.pauseOnStop = false;\n        this.stopDelay = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n        if (data.replaceCursor !== undefined) {\n            this.replaceCursor = data.replaceCursor;\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n        if (data.stopDelay !== undefined) {\n            this.stopDelay = data.stopDelay;\n        }\n    }\n}\n", "import { ExternalInteractorBase, deepExtend, isInArray, } from \"@tsparticles/engine\";\nimport { InteractivityParticle } from \"./Options/Classes/InteractivityParticle.js\";\nconst particleMode = \"particle\";\nexport class InteractivityParticleMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n        const container = this.container, { interactivity } = container, options = container.actualOptions;\n        if (!container.retina.reduceFactor) {\n            return;\n        }\n        const mousePos = interactivity.mouse.position, interactivityParticleOptions = options.interactivity.modes.particle;\n        if (!interactivityParticleOptions) {\n            return;\n        }\n        const mouseStopped = interactivityParticleOptions.pauseOnStop &&\n            (interactivity.mouse.position === this._lastPosition ||\n                (interactivity.mouse.position?.x === this._lastPosition?.x &&\n                    interactivity.mouse.position?.y === this._lastPosition?.y)), clearDelay = interactivityParticleOptions.stopDelay;\n        if (mousePos) {\n            this._lastPosition = { ...mousePos };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (!this._lastPosition) {\n            return;\n        }\n        if (mouseStopped) {\n            if (this._clearTimeout) {\n                return;\n            }\n            this._clearTimeout = setTimeout(() => {\n                if (!this._particle) {\n                    return;\n                }\n                if (interactivityParticleOptions.replaceCursor) {\n                    const element = interactivity.element;\n                    if (element) {\n                        if (element instanceof Window) {\n                            document.body.style.cursor = \"\";\n                        }\n                        else {\n                            element.style.cursor = \"\";\n                        }\n                    }\n                }\n                this.container.particles.remove(this._particle, undefined, true);\n                delete this._particle;\n            }, clearDelay);\n            return;\n        }\n        if (this._clearTimeout) {\n            clearTimeout(this._clearTimeout);\n            delete this._clearTimeout;\n        }\n        if (!this._particle) {\n            const particleOptions = deepExtend(interactivityParticleOptions.options, {\n                move: {\n                    enable: false,\n                },\n            });\n            this._particle = container.particles.addParticle(this._lastPosition, particleOptions);\n            if (interactivityParticleOptions.replaceCursor) {\n                const element = interactivity.element;\n                if (element) {\n                    if (element instanceof Window) {\n                        document.body.style.cursor = \"none\";\n                    }\n                    else {\n                        element.style.cursor = \"none\";\n                    }\n                }\n            }\n        }\n        if (!this._particle) {\n            return;\n        }\n        this._particle.position.x = this._lastPosition.x;\n        this._particle.position.y = this._lastPosition.y;\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(particleMode, events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(particleMode, events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.particle) {\n            options.particle = new InteractivityParticle();\n        }\n        for (const source of sources) {\n            options.particle.load(source?.particle);\n        }\n    }\n    reset() {\n    }\n}\n", "import { InteractivityParticleMaker } from \"./InteractivityParticleMaker.js\";\nexport async function loadExternalParticleInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalParticle\", container => {\n        return Promise.resolve(new InteractivityParticleMaker(container));\n    }, refresh);\n}\n", "import { ExternalInteractorBase } from \"@tsparticles/engine\";\nconst popMode = \"pop\";\nexport class Popper extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container;\n            if (mode !== popMode) {\n                return;\n            }\n            const clickPos = container.interactivity.mouse.clickPosition;\n            if (!clickPos) {\n                return;\n            }\n            const poppedParticles = container.particles.quadTree.queryCircle(clickPos, container.retina.pixelRatio);\n            if (!poppedParticles.length) {\n                return;\n            }\n            for (const particle of poppedParticles) {\n                container.particles.remove(particle);\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n", "import { Popper } from \"./Popper.js\";\nexport async function loadExternalPopInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalPop\", container => {\n        return Promise.resolve(new Popper(container));\n    }, refresh);\n}\n", "import { isNull } from \"@tsparticles/engine\";\nexport class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { ValueWithRandom, isNull, isNumber } from \"@tsparticles/engine\";\nimport { AbsorberSizeLimit } from \"./AbsorberSizeLimit.js\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (isNumber(data.limit)) {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n", "import { OptionsColor, isNull, setRangeValue, } from \"@tsparticles/engine\";\nimport { AbsorberSize } from \"./AbsorberSize.js\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n", "export var AbsorberClickMode;\n(function (AbsorberClickMode) {\n    AbsorberClickMode[\"absorber\"] = \"absorber\";\n})(AbsorberClickMode || (AbsorberClickMode = {}));\n", "import { RotateDirection, Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, originPoint, percentDenominator, rangeColorToRgb, } from \"@tsparticles/engine\";\nimport { Absorber } from \"./Options/Classes/Absorber.js\";\nconst squareExp = 2, absorbFactor = 0.033, minOrbitLength = 0, minRadius = 0, minMass = 0, minAngle = 0, double = 2, maxAngle = Math.PI * double, minVelocity = 0;\nexport class AbsorberInstance {\n    constructor(absorbers, container, engine, options, position) {\n        this._calcPosition = () => {\n            const exactPosition = calcPositionOrRandomFromSizeRanged({\n                size: this._container.canvas.size,\n                position: this.options.position,\n            });\n            return Vector.create(exactPosition.x, exactPosition.y);\n        };\n        this._updateParticlePosition = (particle, v) => {\n            if (particle.destroyed) {\n                return;\n            }\n            const container = this._container, canvasSize = container.canvas.size;\n            if (particle.needsNewPosition) {\n                const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n                particle.position.setTo(newPosition);\n                particle.velocity.setTo(particle.initialVelocity);\n                particle.absorberOrbit = undefined;\n                particle.needsNewPosition = false;\n            }\n            if (this.options.orbits) {\n                if (particle.absorberOrbit === undefined) {\n                    particle.absorberOrbit = Vector.origin;\n                    particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                    particle.absorberOrbit.angle = getRandom() * maxAngle;\n                }\n                if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                    const minSize = Math.min(canvasSize.width, canvasSize.height), offset = 1, randomOffset = 0.1, randomFactor = 0.2;\n                    particle.absorberOrbit.length = minSize * (offset + (getRandom() * randomFactor - randomOffset));\n                }\n                if (particle.absorberOrbitDirection === undefined) {\n                    particle.absorberOrbitDirection =\n                        particle.velocity.x >= minVelocity ? RotateDirection.clockwise : RotateDirection.counterClockwise;\n                }\n                const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n                particle.velocity.setTo(Vector.origin);\n                const updateFunc = {\n                    x: orbitDirection === RotateDirection.clockwise ? Math.cos : Math.sin,\n                    y: orbitDirection === RotateDirection.clockwise ? Math.sin : Math.cos,\n                };\n                particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n                particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n                particle.absorberOrbit.length -= v.length;\n                particle.absorberOrbit.angle +=\n                    (((particle.retina.moveSpeed ?? minVelocity) * container.retina.pixelRatio) / percentDenominator) *\n                        container.retina.reduceFactor;\n            }\n            else {\n                const addV = Vector.origin;\n                addV.length = v.length;\n                addV.angle = v.angle;\n                particle.velocity.addTo(addV);\n            }\n        };\n        this._absorbers = absorbers;\n        this._container = container;\n        this._engine = engine;\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = rangeColorToRgb(this._engine, this.options.color) ?? {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = this.initialPosition?.copy() ?? this._calcPosition();\n    }\n    attract(particle) {\n        const container = this._container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, squareExp)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * absorbFactor * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < minOrbitLength)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this._updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this._updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= minRadius || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= minMass || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this._updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(originPoint.x, originPoint.y, this.size, minAngle, maxAngle, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this._container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n    }\n}\n", "import { executeOnSingleOrMultiple, isNumber, itemFromSingleOrMultiple, } from \"@tsparticles/engine\";\nimport { AbsorberClickMode } from \"./Enums/AbsorberClickMode.js\";\nimport { AbsorberInstance } from \"./AbsorberInstance.js\";\nconst defaultIndex = 0;\nexport class Absorbers {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName ?? defaultIndex]\n            : this.array.find(t => t.name === idxOrName);\n        container.addAbsorber = async (options, position) => this.addAbsorber(options, position);\n    }\n    async addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this._container, this._engine, options, position);\n        this.array.push(absorber);\n        return Promise.resolve(absorber);\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === AbsorberClickMode.absorber) {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions ?? itemFromSingleOrMultiple(absorberOptions), aPosition = this._container.interactivity.mouse.clickPosition;\n            void this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this._container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this._container.actualOptions.interactivity.modes.absorbers;\n        const promises = executeOnSingleOrMultiple(this.absorbers, async (absorber) => {\n            await this.addAbsorber(absorber);\n        });\n        if (promises instanceof Array) {\n            await Promise.all(promises);\n        }\n        else {\n            await promises;\n        }\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber), deleteCount = 1;\n        if (index >= defaultIndex) {\n            this.array.splice(index, deleteCount);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n", "import { executeOnSingleOrMultiple, isArray, isInArray, } from \"@tsparticles/engine\";\nimport { Absorber } from \"./Options/Classes/Absorber.js\";\nimport { AbsorberClickMode } from \"./Enums/AbsorberClickMode.js\";\nimport { Absorbers } from \"./Absorbers.js\";\nexport class AbsorbersPlugin {\n    constructor(engine) {\n        this.id = \"absorbers\";\n        this._engine = engine;\n    }\n    async getPlugin(container) {\n        return Promise.resolve(new Absorbers(container, this._engine));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, absorber => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple(source?.interactivity?.modes?.absorbers, absorber => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (isArray(absorbers)) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (options.interactivity?.events?.onClick?.mode &&\n            isInArray(AbsorberClickMode.absorber, options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\n", "import { AbsorbersPlugin } from \"./AbsorbersPlugin.js\";\nexport async function loadAbsorbersPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPlugin(new AbsorbersPlugin(engine), refresh);\n}\nexport * from \"./AbsorberContainer.js\";\nexport * from \"./Enums/AbsorberClickMode.js\";\n", "import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n", "export var DestroyMode;\n(function (DestroyMode) {\n    DestroyMode[\"none\"] = \"none\";\n    DestroyMode[\"split\"] = \"split\";\n})(DestroyMode || (DestroyMode = {}));\n", "import { ValueWithRandom } from \"@tsparticles/engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n", "import { ValueWithRandom } from \"@tsparticles/engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n", "import { OptionsColor, deepExtend, executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { SplitFactor } from \"./SplitFactor.js\";\nimport { SplitRate } from \"./SplitRate.js\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, particles => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n        if (data.colorOffset) {\n            this.colorOffset = this.colorOffset ?? {};\n            if (data.colorOffset.h !== undefined) {\n                this.colorOffset.h = data.colorOffset.h;\n            }\n            if (data.colorOffset.s !== undefined) {\n                this.colorOffset.s = data.colorOffset.s;\n            }\n            if (data.colorOffset.l !== undefined) {\n                this.colorOffset.l = data.colorOffset.l;\n            }\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { DestroyBounds } from \"./DestroyBounds.js\";\nimport { DestroyMode } from \"../../Enums/DestroyMode.js\";\nimport { Split } from \"./Split.js\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = DestroyMode.none;\n        this.split = new Split();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n", "import { PixelMode, getRangeValue, isNumber, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"@tsparticles/engine\";\nconst defaultOffset = 0, minDestroySize = 0.5, defaultSplitCount = 0, increment = 1, unbreakableTime = 500, minSplitCount = 0;\nfunction addSplitParticle(engine, container, parent, splitParticlesOptions) {\n    const destroyOptions = parent.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split, options = loadParticlesOptions(engine, container, parent.options), factor = getRangeValue(splitOptions.factor.value), parentColor = parent.getFillColor();\n    if (splitOptions.color) {\n        options.color.load(splitOptions.color);\n    }\n    else if (splitOptions.colorOffset && parentColor) {\n        options.color.load({\n            value: {\n                hsl: {\n                    h: parentColor.h + getRangeValue(splitOptions.colorOffset.h ?? defaultOffset),\n                    s: parentColor.s + getRangeValue(splitOptions.colorOffset.s ?? defaultOffset),\n                    l: parentColor.l + getRangeValue(splitOptions.colorOffset.l ?? defaultOffset),\n                },\n            },\n        });\n    }\n    else {\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n    }\n    options.move.load({\n        center: {\n            x: parent.position.x,\n            y: parent.position.y,\n            mode: PixelMode.precise,\n        },\n    });\n    if (isNumber(options.size.value)) {\n        options.size.value /= factor;\n    }\n    else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n    }\n    options.load(splitParticlesOptions);\n    const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : defaultOffset, position = {\n        x: parent.position.x + randomInRange(offset),\n        y: parent.position.y + randomInRange(offset),\n    };\n    return container.particles.addParticle(position, options, parent.group, (particle) => {\n        if (particle.size.value < minDestroySize) {\n            return false;\n        }\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = (parent.splitCount ?? defaultSplitCount) + increment;\n        particle.unbreakable = true;\n        setTimeout(() => {\n            particle.unbreakable = false;\n        }, unbreakableTime);\n        return true;\n    });\n}\nexport function split(engine, container, particle) {\n    const destroyOptions = particle.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split;\n    if (splitOptions.count >= minSplitCount &&\n        (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n        return;\n    }\n    const rate = getRangeValue(splitOptions.rate.value), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n    for (let i = 0; i < rate; i++) {\n        addSplitParticle(engine, container, particle, particlesSplitOptions);\n    }\n}\n", "import { getRangeValue, percentDenominator, } from \"@tsparticles/engine\";\nimport { Destroy } from \"./Options/Classes/Destroy.js\";\nimport { DestroyMode } from \"./Enums/DestroyMode.js\";\nimport { split } from \"./Utils.js\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.container = container;\n        this.engine = engine;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBoundsOptions = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        const { bottom, left, right, top } = destroyBoundsOptions, { destroyBounds } = particle, canvasSize = container.canvas.size;\n        if (bottom) {\n            destroyBounds.bottom = (getRangeValue(bottom) * canvasSize.height) / percentDenominator;\n        }\n        if (left) {\n            destroyBounds.left = (getRangeValue(left) * canvasSize.width) / percentDenominator;\n        }\n        if (right) {\n            destroyBounds.right = (getRangeValue(right) * canvasSize.width) / percentDenominator;\n        }\n        if (top) {\n            destroyBounds.top = (getRangeValue(top) * canvasSize.height) / percentDenominator;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source?.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === DestroyMode.split) {\n            split(this.engine, this.container, particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n}\n", "import { DestroyUpdater } from \"./DestroyUpdater.js\";\nexport async function loadDestroyUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"destroy\", container => {\n        return Promise.resolve(new DestroyUpdater(engine, container));\n    }, refresh);\n}\n", "import { EmitterShapeBase } from \"@tsparticles/plugin-emitters\";\nimport { getRandom } from \"@tsparticles/engine\";\nconst quarter = 0.25, double = 2, doublePI = Math.PI * double, squareExp = 2, half = 0.5;\nexport class EmittersCircleShape extends EmitterShapeBase {\n    constructor(position, size, fill, options) {\n        super(position, size, fill, options);\n    }\n    async init() {\n    }\n    randomPosition() {\n        const size = this.size, fill = this.fill, position = this.position, generateTheta = (x, y) => {\n            const u = getRandom() * quarter, theta = Math.atan((y / x) * Math.tan(doublePI * u)), v = getRandom();\n            if (v < quarter) {\n                return theta;\n            }\n            else if (v < double * quarter) {\n                return Math.PI - theta;\n            }\n            else if (v < double * quarter + quarter) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** squareExp + (x * Math.sin(theta)) ** squareExp), [a, b] = [size.width * half, size.height * half], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            position: {\n                x: position.x + randomRadius * Math.cos(randomTheta),\n                y: position.y + randomRadius * Math.sin(randomTheta),\n            },\n        };\n    }\n}\n", "import { EmittersCircleShape } from \"./EmittersCircleShape.js\";\nexport class EmittersCircleShapeGenerator {\n    generate(position, size, fill, options) {\n        return new EmittersCircleShape(position, size, fill, options);\n    }\n}\n", "import { EmittersCircleShapeGenerator } from \"./EmittersCircleShapeGenerator.js\";\nexport async function loadEmittersShapeCircle(engine, refresh = true) {\n    const emittersEngine = engine;\n    emittersEngine.checkVersion(\"3.8.1\");\n    emittersEngine.addEmitterShapeGenerator?.(\"circle\", new EmittersCircleShapeGenerator());\n    await emittersEngine.refresh(refresh);\n}\n", "import { EmitterShapeBase } from \"@tsparticles/plugin-emitters\";\nimport { double, getRandom, half } from \"@tsparticles/engine\";\nconst sides = 4;\nvar Sides;\n(function (Sides) {\n    Sides[Sides[\"TopLeft\"] = 0] = \"TopLeft\";\n    Sides[Sides[\"TopRight\"] = 1] = \"TopRight\";\n    Sides[Sides[\"BottomRight\"] = 2] = \"BottomRight\";\n    Sides[Sides[\"BottomLeft\"] = 3] = \"BottomLeft\";\n})(Sides || (Sides = {}));\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - half);\n}\nexport class EmittersSquareShape extends EmitterShapeBase {\n    constructor(position, size, fill, options) {\n        super(position, size, fill, options);\n    }\n    async init() {\n    }\n    randomPosition() {\n        const fill = this.fill, position = this.position, size = this.size;\n        if (fill) {\n            return {\n                position: {\n                    x: randomSquareCoordinate(position.x, size.width),\n                    y: randomSquareCoordinate(position.y, size.height),\n                },\n            };\n        }\n        else {\n            const halfW = size.width * half, halfH = size.height * half, side = Math.floor(getRandom() * sides), v = (getRandom() - half) * double;\n            switch (side) {\n                case Sides.TopLeft:\n                    return {\n                        position: {\n                            x: position.x + v * halfW,\n                            y: position.y - halfH,\n                        },\n                    };\n                case Sides.TopRight:\n                    return {\n                        position: {\n                            x: position.x - halfW,\n                            y: position.y + v * halfH,\n                        },\n                    };\n                case Sides.BottomRight:\n                    return {\n                        position: {\n                            x: position.x + v * halfW,\n                            y: position.y + halfH,\n                        },\n                    };\n                case Sides.BottomLeft:\n                default:\n                    return {\n                        position: {\n                            x: position.x + halfW,\n                            y: position.y + v * halfH,\n                        },\n                    };\n            }\n        }\n    }\n}\n", "import { EmittersSquareShape } from \"./EmittersSquareShape.js\";\nexport class EmittersSquareShapeGenerator {\n    generate(position, size, fill, options) {\n        return new EmittersSquareShape(position, size, fill, options);\n    }\n}\n", "import { EmittersSquareShapeGenerator } from \"./EmittersSquareShapeGenerator.js\";\nexport async function loadEmittersShapeSquare(engine, refresh = true) {\n    const emittersEngine = engine;\n    emittersEngine.checkVersion(\"3.8.1\");\n    emittersEngine.addEmitterShapeGenerator?.(\"square\", new EmittersSquareShapeGenerator());\n    await emittersEngine.refresh(refresh);\n}\n", "import { deepExtend, isNull, } from \"@tsparticles/engine\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n", "import { ExternalInteractorBase, isInArray, millisecondsToSeconds, } from \"@tsparticles/engine\";\nimport { Trail } from \"./Options/Classes/Trail.js\";\nconst trailMode = \"trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(delta) {\n        const container = this.container, { interactivity } = container;\n        if (!container.retina.reduceFactor) {\n            return;\n        }\n        const options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * millisecondsToSeconds) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        const canEmit = !(trailOptions.pauseOnStop &&\n            (interactivity.mouse.position === this._lastPosition ||\n                (interactivity.mouse.position?.x === this._lastPosition?.x &&\n                    interactivity.mouse.position?.y === this._lastPosition?.y)));\n        const mousePos = container.interactivity.mouse.position;\n        if (mousePos) {\n            this._lastPosition = { ...mousePos };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(trailMode, events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(trailMode, events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source?.trail);\n        }\n    }\n    reset() {\n    }\n}\n", "import { TrailMaker } from \"./TrailMaker.js\";\nexport async function loadExternalTrailInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalTrail\", container => {\n        return Promise.resolve(new TrailMaker(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Trail.js\";\nexport * from \"./Options/Interfaces/ITrail.js\";\n", "export var RollMode;\n(function (RollMode) {\n    RollMode[\"both\"] = \"both\";\n    RollMode[\"horizontal\"] = \"horizontal\";\n    RollMode[\"vertical\"] = \"vertical\";\n})(RollMode || (RollMode = {}));\n", "import { AlterType, getRandom, getRangeValue, half, rangeColorToHsl, } from \"@tsparticles/engine\";\nimport { RollMode } from \"./RollMode.js\";\nconst double = 2, doublePI = Math.PI * double, maxAngle = 360;\nexport function initParticle(engine, particle) {\n    const rollOpt = particle.options.roll;\n    if (!rollOpt?.enable) {\n        particle.roll = {\n            enable: false,\n            horizontal: false,\n            vertical: false,\n            angle: 0,\n            speed: 0,\n        };\n        return;\n    }\n    particle.roll = {\n        enable: rollOpt.enable,\n        horizontal: rollOpt.mode === RollMode.horizontal || rollOpt.mode === RollMode.both,\n        vertical: rollOpt.mode === RollMode.vertical || rollOpt.mode === RollMode.both,\n        angle: getRandom() * doublePI,\n        speed: getRangeValue(rollOpt.speed) / maxAngle,\n    };\n    if (rollOpt.backColor) {\n        particle.backColor = rangeColorToHsl(engine, rollOpt.backColor);\n    }\n    else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n        const alterType = getRandom() >= half ? AlterType.darken : AlterType.enlighten;\n        particle.roll.alter = {\n            type: alterType,\n            value: getRangeValue(alterType === AlterType.darken ? rollOpt.darken.value : rollOpt.enlighten.value),\n        };\n    }\n    else if (rollOpt.darken.enable) {\n        particle.roll.alter = {\n            type: AlterType.darken,\n            value: getRangeValue(rollOpt.darken.value),\n        };\n    }\n    else if (rollOpt.enlighten.enable) {\n        particle.roll.alter = {\n            type: AlterType.enlighten,\n            value: getRangeValue(rollOpt.enlighten.value),\n        };\n    }\n}\nexport function updateRoll(particle, delta) {\n    const roll = particle.options.roll, data = particle.roll;\n    if (!data || !roll?.enable) {\n        return;\n    }\n    const speed = data.speed * delta.factor, max = doublePI;\n    data.angle += speed;\n    if (data.angle > max) {\n        data.angle -= max;\n    }\n}\n", "import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n", "import { OptionsColor, isNull, setRangeValue, } from \"@tsparticles/engine\";\nimport { RollLight } from \"./RollLight.js\";\nimport { RollMode } from \"../../RollMode.js\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = RollMode.vertical;\n        this.speed = 25;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n", "import { initParticle, updateRoll } from \"./Utils.js\";\nimport { Roll } from \"./Options/Classes/Roll.js\";\nexport class RollUpdater {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    getTransformValues(particle) {\n        const roll = particle.roll?.enable && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        initParticle(this._engine, particle);\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!roll?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source?.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n", "import { RollUpdater } from \"./RollUpdater.js\";\nexport async function loadRollUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"roll\", () => {\n        return Promise.resolve(new RollUpdater(engine));\n    }, refresh);\n}\n", "import { RotateDirection, clamp, getDistance, getDistances, getRandom, getRangeValue, } from \"@tsparticles/engine\";\nconst half = 0.5, double = 2, minVelocity = 0, identity = 1, moveSpeedFactor = 60, minSpinRadius = 0, spinFactor = 0.01, doublePI = Math.PI * double;\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    const hasHDistance = (hDistance && dxFixed >= hDistance) ?? false, hasVDistance = (vDistance && dyFixed >= vDistance) ?? false;\n    if ((hasHDistance || hasVDistance) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y * half - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x * half - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance &&\n            ((pos.x < initialPosition.x && vel.x < minVelocity) || (pos.x > initialPosition.x && vel.x > minVelocity))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance &&\n            ((pos.y < initialPosition.y && vel.y < minVelocity) || (pos.y > initialPosition.y && vel.y > minVelocity))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -identity : identity;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (moveSpeedFactor * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y +=\n            (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (moveSpeedFactor * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > minVelocity &&\n        ((!gravityOptions.inverse && velocity.y >= minVelocity && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= minVelocity && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (identity - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const spinClockwise = particle.spin.direction === RotateDirection.clockwise, updateFunc = {\n        x: spinClockwise ? Math.cos : Math.sin,\n        y: spinClockwise ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height), halfMaxSize = maxCanvasSize * half;\n    if (particle.spin.radius > halfMaxSize) {\n        particle.spin.radius = halfMaxSize;\n        particle.spin.acceleration *= -identity;\n    }\n    else if (particle.spin.radius < minSpinRadius) {\n        particle.spin.radius = minSpinRadius;\n        particle.spin.acceleration *= -identity;\n    }\n    particle.spin.angle += moveSpeed * spinFactor * (identity - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -identity, identity);\n        particle.velocity.y = clamp(particle.velocity.y, -identity, identity);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : identity;\n}\nexport function initSpin(particle) {\n    const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n    if (!spinOptions.enable) {\n        return;\n    }\n    const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinFactor = 0.01, spinCenter = {\n        x: spinPos.x * spinFactor * container.canvas.size.width,\n        y: spinPos.y * spinFactor * container.canvas.size.height,\n    }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n    particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n    particle.spin = {\n        center: spinCenter,\n        direction: particle.velocity.x >= minVelocity ? RotateDirection.clockwise : RotateDirection.counterClockwise,\n        angle: getRandom() * doublePI,\n        radius: distance,\n        acceleration: particle.retina.spinAcceleration,\n    };\n}\n", "import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nimport { applyDistance, getProximitySpeedFactor, initSpin, move, spin } from \"./Utils.js\";\nconst diffFactor = 2, defaultSizeFactor = 1, defaultDeltaFactor = 1;\nexport class BaseMover {\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio;\n        particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio;\n        particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio;\n        const slowFactor = getProximitySpeedFactor(particle), baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor, moveDrift = particle.retina.moveDrift, maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor, deltaFactor = delta.factor || defaultDeltaFactor, moveSpeed = (baseSpeed * sizeFactor * slowFactor * deltaFactor) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n", "import { BaseMover } from \"./BaseMover.js\";\nexport async function loadBaseMover(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addMover(\"base\", () => {\n        return Promise.resolve(new BaseMover());\n    }, refresh);\n}\n", "const double = 2, doublePI = Math.PI * double, minAngle = 0, origin = { x: 0, y: 0 };\nexport function drawCircle(data) {\n    const { context, particle, radius } = data;\n    if (!particle.circleRange) {\n        particle.circleRange = { min: minAngle, max: doublePI };\n    }\n    const circleRange = particle.circleRange;\n    context.arc(origin.x, origin.y, radius, circleRange.min, circleRange.max, false);\n}\n", "import { degToRad, isObject } from \"@tsparticles/engine\";\nimport { drawCircle } from \"./Utils.js\";\nconst sides = 12, maxAngle = 360, minAngle = 0;\nexport class CircleDrawer {\n    constructor() {\n        this.validTypes = [\"circle\"];\n    }\n    draw(data) {\n        drawCircle(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: maxAngle,\n            min: minAngle,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: minAngle,\n                max: degToRad(angle),\n            }\n            : { min: degToRad(angle.min), max: degToRad(angle.max) };\n    }\n}\n", "import { CircleDrawer } from \"./CircleDrawer.js\";\nexport async function loadCircleShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new CircleDrawer(), refresh);\n}\n", "import { getHslAnimationFromHsl, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nexport class ColorUpdater {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(this._engine, particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this._container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle.color, delta);\n    }\n}\n", "import { ColorUpdater } from \"./ColorUpdater.js\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"color\", container => {\n        return Promise.resolve(new ColorUpdater(container, engine));\n    }, refresh);\n}\n", "var RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 4] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nconst shorthandHexRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, hexRadix = 16, defaultAlpha = 1, alphaFactor = 0xff;\nexport class HexColorManager {\n    constructor() {\n        this.key = \"hex\";\n        this.stringPrefix = \"#\";\n    }\n    handleColor(color) {\n        return this._parseString(color.value);\n    }\n    handleRangeColor(color) {\n        return this._parseString(color.value);\n    }\n    parseString(input) {\n        return this._parseString(input);\n    }\n    _parseString(hexColor) {\n        if (typeof hexColor !== \"string\") {\n            return;\n        }\n        if (!hexColor?.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const hexFixed = hexColor.replace(shorthandHexRegex, (_, r, g, b, a) => {\n            return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n        }), result = hexRegex.exec(hexFixed);\n        return result\n            ? {\n                a: result[RgbIndexes.a] !== undefined\n                    ? parseInt(result[RgbIndexes.a], hexRadix) / alphaFactor\n                    : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], hexRadix),\n                g: parseInt(result[RgbIndexes.g], hexRadix),\n                r: parseInt(result[RgbIndexes.r], hexRadix),\n            }\n            : undefined;\n    }\n}\n", "import { HexColorManager } from \"./HexColorManager.js\";\nexport async function loadHexColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new HexColorManager(), refresh);\n}\n", "import { getRangeValue, hslToRgb, hslaToRgba, parseAlpha, } from \"@tsparticles/engine\";\nvar HslIndexes;\n(function (HslIndexes) {\n    HslIndexes[HslIndexes[\"h\"] = 1] = \"h\";\n    HslIndexes[HslIndexes[\"s\"] = 2] = \"s\";\n    HslIndexes[HslIndexes[\"l\"] = 3] = \"l\";\n    HslIndexes[HslIndexes[\"a\"] = 5] = \"a\";\n})(HslIndexes || (HslIndexes = {}));\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*[\\s,]\\s*(\\d+)%\\s*[\\s,]\\s*(\\d+)%\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), minLength = 4, defaultAlpha = 1, radix = 10;\n        return result\n            ? hslaToRgba({\n                a: result.length > minLength ? parseAlpha(result[HslIndexes.a]) : defaultAlpha,\n                h: parseInt(result[HslIndexes.h], radix),\n                l: parseInt(result[HslIndexes.l], radix),\n                s: parseInt(result[HslIndexes.s], radix),\n            })\n            : undefined;\n    }\n}\n", "import { HslColorManager } from \"./HslColorManager.js\";\nexport async function loadHslColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new HslColorManager(), refresh);\n}\n", "import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity, pxRatio = 1;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / percentDenominator) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const none = 0;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? none) <= none ||\n                ((particle.opacity.maxLoops ?? none) > none &&\n                    (particle.opacity.loops ?? none) < (particle.opacity.maxLoops ?? none))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.opacity) {\n            return;\n        }\n        updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n    }\n}\n", "import { OpacityUpdater } from \"./OpacityUpdater.js\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"opacity\", container => {\n        return Promise.resolve(new OpacityUpdater(container));\n    }, refresh);\n}\n", "import { OutMode, OutModeDirection, getRangeValue } from \"@tsparticles/engine\";\nconst minVelocity = 0, boundsMin = 0;\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.left && data.direction !== OutModeDirection.right)) {\n        return;\n    }\n    if (data.bounds.right < boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.right &&\n        data.bounds.right >= data.canvasSize.width &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.left && data.bounds.left <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.horizontal.value);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.bottom && data.direction !== OutModeDirection.top)) {\n        return;\n    }\n    if (data.bounds.bottom < boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.bottom &&\n        data.bounds.bottom >= data.canvasSize.height &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.top && data.bounds.top <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.vertical.value);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\n", "import { OutMode, calculateBounds, } from \"@tsparticles/engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils.js\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            OutMode.bounce,\n            OutMode.split,\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n", "import { OutMode, ParticleOutType, Vector, getDistances, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.destroy];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.normal:\n            case ParticleOutType.outside:\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case ParticleOutType.inside: {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter), { x: vx, y: vy } = particle.velocity;\n                if ((vx < minVelocity && dx > particle.moveCenter.radius) ||\n                    (vy < minVelocity && dy > particle.moveCenter.radius) ||\n                    (vx >= minVelocity && dx < -particle.moveCenter.radius) ||\n                    (vy >= minVelocity && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, particle.group, true);\n    }\n}\n", "import { OutMode, OutModeDirection, Vector, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.none];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === OutModeDirection.left || direction === OutModeDirection.right)) ??\n            (particle.options.move.distance.vertical &&\n                (direction === OutModeDirection.top || direction === OutModeDirection.bottom))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container, canvasSize = container.canvas.size, pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > minVelocity && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < minVelocity && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > minVelocity && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < minVelocity && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === OutModeDirection.bottom) ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === OutModeDirection.top)) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n", "import { OutMode, OutModeDirection, ParticleOutType, Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"@tsparticles/engine\";\nconst minVelocity = 0, minDistance = 0;\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.out];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.inside: {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= minVelocity && dx >= minDistance) ||\n                    (vy <= minVelocity && dy >= minDistance) ||\n                    (vx >= minVelocity && dx <= minDistance) ||\n                    (vy >= minVelocity && dy <= minDistance)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case ParticleOutType.outside: {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case ParticleOutType.normal: {\n                        const warp = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === OutModeDirection.right &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === OutModeDirection.left && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === OutModeDirection.bottom &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === OutModeDirection.top && nextBounds.bottom < -particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n", "import { OutMode, OutModeDirection, } from \"@tsparticles/engine\";\nimport { BounceOutMode } from \"./BounceOutMode.js\";\nimport { DestroyOutMode } from \"./DestroyOutMode.js\";\nimport { NoneOutMode } from \"./NoneOutMode.js\";\nimport { OutOutMode } from \"./OutOutMode.js\";\nconst checkOutMode = (outModes, outMode) => {\n    return (outModes.default === outMode ||\n        outModes.bottom === outMode ||\n        outModes.left === outMode ||\n        outModes.right === outMode ||\n        outModes.top === outMode);\n};\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this._addUpdaterIfMissing = (particle, outMode, getUpdater) => {\n            const outModes = particle.options.move.outModes;\n            if (!this.updaters.has(outMode) && checkOutMode(outModes, outMode)) {\n                this.updaters.set(outMode, getUpdater(this.container));\n            }\n        };\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters.values()) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.container = container;\n        this.updaters = new Map();\n    }\n    init(particle) {\n        this._addUpdaterIfMissing(particle, OutMode.bounce, container => new BounceOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.out, container => new OutOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.destroy, container => new DestroyOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.none, container => new NoneOutMode(container));\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, OutModeDirection.bottom);\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, OutModeDirection.left);\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, OutModeDirection.right);\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, OutModeDirection.top);\n    }\n}\n", "import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater.js\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"outModes\", container => {\n        return Promise.resolve(new OutOfCanvasUpdater(container));\n    }, refresh);\n}\n", "import { getRangeValue, parseAlpha, } from \"@tsparticles/engine\";\nvar RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 5] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), radix = 10, minLength = 4, defaultAlpha = 1;\n        return result\n            ? {\n                a: result.length > minLength ? parseAlpha(result[RgbIndexes.a]) : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], radix),\n                g: parseInt(result[RgbIndexes.g], radix),\n                r: parseInt(result[RgbIndexes.r], radix),\n            }\n            : undefined;\n    }\n}\n", "import { RgbColorManager } from \"./RgbColorManager.js\";\nexport async function loadRgbColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new RgbColorManager(), refresh);\n}\n", "import { getRandom, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? minLoops) <= minLoops ||\n                ((particle.size.maxLoops ?? minLoops) > minLoops &&\n                    (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops))));\n    }\n    reset(particle) {\n        particle.size.loops = minLoops;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n    }\n}\n", "import { SizeUpdater } from \"./SizeUpdater.js\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"size\", () => {\n        return Promise.resolve(new SizeUpdater());\n    }, refresh);\n}\n", "import { loadBaseMover } from \"@tsparticles/move-base\";\nimport { loadCircleShape } from \"@tsparticles/shape-circle\";\nimport { loadColorUpdater } from \"@tsparticles/updater-color\";\nimport { loadHexColorPlugin } from \"@tsparticles/plugin-hex-color\";\nimport { loadHslColorPlugin } from \"@tsparticles/plugin-hsl-color\";\nimport { loadOpacityUpdater } from \"@tsparticles/updater-opacity\";\nimport { loadOutModesUpdater } from \"@tsparticles/updater-out-modes\";\nimport { loadRgbColorPlugin } from \"@tsparticles/plugin-rgb-color\";\nimport { loadSizeUpdater } from \"@tsparticles/updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadHexColorPlugin(engine, false);\n    await loadHslColorPlugin(engine, false);\n    await loadRgbColorPlugin(engine, false);\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n", "import { EasingType } from \"@tsparticles/engine\";\nexport async function loadEasingQuadPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEasing(EasingType.easeInQuad, value => value ** 2, false);\n    await engine.addEasing(EasingType.easeOutQuad, value => 1 - (1 - value) ** 2, false);\n    await engine.addEasing(EasingType.easeInOutQuad, value => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2), false);\n    await engine.refresh(refresh);\n}\n", "export function drawEmoji(data, image) {\n    const { context, opacity } = data, half = 0.5, previousAlpha = context.globalAlpha;\n    if (!image) {\n        return;\n    }\n    const diameter = image.width, radius = diameter * half;\n    context.globalAlpha = opacity;\n    context.drawImage(image, -radius, -radius, diameter, diameter);\n    context.globalAlpha = previousAlpha;\n}\n", "import { executeOnSingleOrMultiple, getRangeMax, isInArray, itemFromSingleOrMultiple, loadFont, } from \"@tsparticles/engine\";\nimport { drawEmoji } from \"./Utils.js\";\nconst defaultFont = '\"Twemoji Mozilla\", Apple Color Emoji, \"Segoe UI Emoji\", \"Noto Color Emoji\", \"EmojiOne Color\"', noPadding = 0;\nexport class EmojiDrawer {\n    constructor() {\n        this.validTypes = [\"emoji\"];\n        this._emojiShapeDict = new Map();\n    }\n    destroy() {\n        for (const [key, data] of this._emojiShapeDict) {\n            if (data instanceof ImageBitmap) {\n                data?.close();\n            }\n            this._emojiShapeDict.delete(key);\n        }\n    }\n    draw(data) {\n        const key = data.particle.emojiDataKey;\n        if (!key) {\n            return;\n        }\n        const image = this._emojiShapeDict.get(key);\n        if (!image) {\n            return;\n        }\n        drawEmoji(data, image);\n    }\n    async init(container) {\n        const options = container.actualOptions, { validTypes } = this;\n        if (!validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n            return;\n        }\n        const promises = [loadFont(defaultFont)], shapeOptions = validTypes\n            .map(t => options.particles.shape.options[t])\n            .find(t => !!t);\n        if (shapeOptions) {\n            executeOnSingleOrMultiple(shapeOptions, shape => {\n                if (shape.font) {\n                    promises.push(loadFont(shape.font));\n                }\n            });\n        }\n        await Promise.all(promises);\n    }\n    particleDestroy(particle) {\n        particle.emojiDataKey = undefined;\n    }\n    particleInit(_container, particle) {\n        const double = 2, shapeData = particle.shapeData;\n        if (!shapeData?.value) {\n            return;\n        }\n        const emoji = itemFromSingleOrMultiple(shapeData.value, particle.randomIndexData);\n        if (!emoji) {\n            return;\n        }\n        const emojiOptions = typeof emoji === \"string\"\n            ? {\n                font: shapeData.font ?? defaultFont,\n                padding: shapeData.padding ?? noPadding,\n                value: emoji,\n            }\n            : {\n                font: defaultFont,\n                padding: noPadding,\n                ...shapeData,\n                ...emoji,\n            }, font = emojiOptions.font, value = emojiOptions.value;\n        const key = `${value}_${font}`;\n        if (this._emojiShapeDict.has(key)) {\n            particle.emojiDataKey = key;\n            return;\n        }\n        const padding = emojiOptions.padding * double, maxSize = getRangeMax(particle.size.value), fullSize = maxSize + padding, canvasSize = fullSize * double;\n        let image;\n        if (typeof OffscreenCanvas !== \"undefined\") {\n            const canvas = new OffscreenCanvas(canvasSize, canvasSize), context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(value, fullSize, fullSize);\n            image = canvas.transferToImageBitmap();\n        }\n        else {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = canvasSize;\n            canvas.height = canvasSize;\n            const context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(value, fullSize, fullSize);\n            image = canvas;\n        }\n        this._emojiShapeDict.set(key, image);\n        particle.emojiDataKey = key;\n    }\n}\n", "import { EmojiDrawer } from \"./EmojiDrawer.js\";\nexport async function loadEmojiShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new EmojiDrawer(), refresh);\n}\n", "import { Circle, Vector, clamp, getDistances, } from \"@tsparticles/engine\";\nconst minFactor = 1, identity = 1, minRadius = 0;\nfunction processAttract(engine, container, position, attractRadius, area, queryCb) {\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    if (!attractOptions) {\n        return;\n    }\n    const query = container.particles.quadTree.query(area, queryCb);\n    for (const particle of query) {\n        const { dx, dy, distance } = getDistances(particle.position, position), velocity = attractOptions.speed * attractOptions.factor, attractFactor = clamp(engine.getEasing(attractOptions.easing)(identity - distance / attractRadius) * velocity, minFactor, attractOptions.maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * attractFactor, !distance ? velocity : (dy / distance) * attractFactor);\n        particle.position.subFrom(normVec);\n    }\n}\nexport function clickAttract(engine, container, enabledCb) {\n    if (!container.attract) {\n        container.attract = { particles: [] };\n    }\n    const { attract } = container;\n    if (!attract.finish) {\n        if (!attract.count) {\n            attract.count = 0;\n        }\n        attract.count++;\n        if (attract.count === container.particles.count) {\n            attract.finish = true;\n        }\n    }\n    if (attract.clicking) {\n        const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < minRadius || !mousePos) {\n            return;\n        }\n        processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n    }\n    else if (attract.clicking === false) {\n        attract.particles = [];\n    }\n}\nexport function hoverAttract(engine, container, enabledCb) {\n    const mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n    if (!attractRadius || attractRadius < minRadius || !mousePos) {\n        return;\n    }\n    processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n}\n", "import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = EasingType.easeOutQuad;\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n", "import { ExternalInteractorBase, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { clickAttract, hoverAttract } from \"./Utils.js\";\nimport { Attract } from \"./Options/Classes/Attract.js\";\nconst attractMode = \"attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== attractMode) {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, { enable: hoverEnabled, mode: hoverMode } = events.onHover, { enable: clickEnabled, mode: clickMode } = events.onClick;\n        if (mouseMoveStatus && hoverEnabled && isInArray(attractMode, hoverMode)) {\n            hoverAttract(this._engine, this.container, p => this.isEnabled(p));\n        }\n        else if (clickEnabled && isInArray(attractMode, clickMode)) {\n            clickAttract(this._engine, this.container, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(attractMode, hoverMode) || isInArray(attractMode, clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n", "import { Attractor } from \"./Attractor.js\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalAttract\", container => {\n        return Promise.resolve(new Attractor(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Attract.js\";\nexport * from \"./Options/Interfaces/IAttract.js\";\n", "import { Circle, DivType, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, rectBounce, } from \"@tsparticles/engine\";\nconst squareExp = 2, half = 0.5, halfPI = Math.PI * half, double = 2, toleranceFactor = 10, minRadius = 0;\nfunction processBounce(container, position, radius, area, enabledCb) {\n    const query = container.particles.quadTree.query(area, enabledCb);\n    for (const particle of query) {\n        if (area instanceof Circle) {\n            circleBounce(circleBounceDataFromParticle(particle), {\n                position,\n                radius,\n                mass: radius ** squareExp * halfPI,\n                velocity: Vector.origin,\n                factor: Vector.origin,\n            });\n        }\n        else if (area instanceof Rectangle) {\n            rectBounce(particle, calculateBounds(position, radius));\n        }\n    }\n}\nfunction singleSelectorBounce(container, selector, div, bounceCb) {\n    const query = document.querySelectorAll(selector);\n    if (!query.length) {\n        return;\n    }\n    query.forEach(item => {\n        const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n            x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n        }, radius = elem.offsetWidth * half * pxRatio, tolerance = toleranceFactor * pxRatio, area = div.type === DivType.circle\n            ? new Circle(pos.x, pos.y, radius + tolerance)\n            : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * double, elem.offsetHeight * pxRatio + tolerance * double);\n        bounceCb(pos, radius, area);\n    });\n}\nexport function divBounce(container, divs, bounceMode, enabledCb) {\n    divModeExecute(bounceMode, divs, (selector, div) => singleSelectorBounce(container, selector, div, (pos, radius, area) => processBounce(container, pos, radius, area, enabledCb)));\n}\nexport function mouseBounce(container, enabledCb) {\n    const pxRatio = container.retina.pixelRatio, tolerance = toleranceFactor * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n    if (!radius || radius < minRadius || !mousePos) {\n        return;\n    }\n    processBounce(container, mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance), enabledCb);\n}\n", "import { isNull } from \"@tsparticles/engine\";\nexport class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n", "import { ExternalInteractorBase, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { divBounce, mouseBounce } from \"./Utils.js\";\nimport { Bounce } from \"./Options/Classes/Bounce.js\";\nconst bounceMode = \"bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(bounceMode, hoverMode)) {\n            mouseBounce(this.container, p => this.isEnabled(p));\n        }\n        else {\n            divBounce(this.container, divs, bounceMode, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((!!mouse.position && events.onHover.enable && isInArray(bounceMode, events.onHover.mode)) ||\n            isDivModeEnabled(bounceMode, divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n", "import { Bouncer } from \"./Bouncer.js\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalBounce\", container => {\n        return Promise.resolve(new Bouncer(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Bounce.js\";\nexport * from \"./Options/Interfaces/IBounce.js\";\n", "import { OptionsColor, executeOnSingleOrMultiple, isArray, isNull, } from \"@tsparticles/engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, color => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n", "import { executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nimport { BubbleDiv } from \"./BubbleDiv.js\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n", "export var ProcessBubbleType;\n(function (ProcessBubbleType) {\n    ProcessBubbleType[\"color\"] = \"color\";\n    ProcessBubbleType[\"opacity\"] = \"opacity\";\n    ProcessBubbleType[\"size\"] = \"size\";\n})(ProcessBubbleType || (ProcessBubbleType = {}));\n", "import { clamp } from \"@tsparticles/engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n", "import { Circle, DivType, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, millisecondsToSeconds, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"@tsparticles/engine\";\nimport { Bubble } from \"./Options/Classes/Bubble.js\";\nimport { ProcessBubbleType } from \"./Enums.js\";\nimport { calculateBubbleValue } from \"./Utils.js\";\nconst bubbleMode = \"bubble\", minDistance = 0, defaultClickTime = 0, double = 2, defaultOpacity = 1, ratioOffset = 1, defaultBubbleValue = 0, minRatio = 0, half = 0.5, defaultRatio = 1;\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, p => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime ?? defaultClickTime)) /\n                    millisecondsToSeconds;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * double) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: ProcessBubbleType.size,\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? defaultOpacity,\n                    },\n                    type: ProcessBubbleType.opacity,\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance || !mousePos) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = ratioOffset - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= minRatio && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(this._engine, bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, ratioOffset - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? defaultOpacity, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value ?? defaultBubbleValue, type = data.type;\n            if (!bubbleDistance || bubbleDistance < minDistance || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === ProcessBubbleType.size) {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === ProcessBubbleType.opacity) {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, p => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, defaultRatio, divBubble);\n                    this._hoverBubbleOpacity(particle, defaultRatio, divBubble);\n                    this._hoverBubbleColor(particle, defaultRatio, divBubble);\n                }\n            });\n        };\n        this._engine = engine;\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== bubbleMode) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(bubbleMode, hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(bubbleMode, clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(bubbleMode, divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(bubbleMode, onDiv);\n        if (!(divBubble || (onHover.enable && !!mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(bubbleMode, onHover.mode) || isInArray(bubbleMode, onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n", "import { Bubbler } from \"./Bubbler.js\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalBubble\", container => {\n        return Promise.resolve(new Bubbler(container, engine));\n    }, refresh);\n}\nexport * from \"./Options/Classes/BubbleBase.js\";\nexport * from \"./Options/Classes/BubbleDiv.js\";\nexport * from \"./Options/Classes/Bubble.js\";\nexport * from \"./Options/Interfaces/IBubbleBase.js\";\nexport * from \"./Options/Interfaces/IBubbleDiv.js\";\nexport * from \"./Options/Interfaces/IBubble.js\";\n", "import { isNull } from \"@tsparticles/engine\";\nexport class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { ConnectLinks } from \"./ConnectLinks.js\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { clamp, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"@tsparticles/engine\";\nconst gradientMin = 0, gradientMax = 1, defaultLinksWidth = 0;\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(gradientMin, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(clamp(gradStop, gradientMin, gradientMax), getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(gradientMax, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw(ctx => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? defaultLinksWidth, ls, pos1, pos2);\n    });\n}\n", "import { ExternalInteractorBase, isInArray, } from \"@tsparticles/engine\";\nimport { Connect } from \"./Options/Classes/Connect.js\";\nimport { drawConnection } from \"./Utils.js\";\nconst connectMode = \"connect\", minDistance = 0;\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position, { connectModeDistance, connectModeRadius } = container.retina;\n            if (!connectModeDistance ||\n                connectModeDistance < minDistance ||\n                !connectModeRadius ||\n                connectModeRadius < minDistance ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            query.forEach((p1, i) => {\n                const pos1 = p1.getPosition(), indexOffset = 1;\n                for (const p2 of query.slice(i + indexOffset)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n            });\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(connectMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n", "import { Connector } from \"./Connector.js\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalConnect\", container => {\n        return Promise.resolve(new Connector(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Connect.js\";\nexport * from \"./Options/Classes/ConnectLinks.js\";\nexport * from \"./Options/Interfaces/IConnect.js\";\nexport * from \"./Options/Interfaces/IConnectLinks.js\";\n", "import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { GrabLinks } from \"./GrabLinks.js\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n    }\n}\n", "import { drawLine, getStyleFromRgb } from \"@tsparticles/engine\";\nconst defaultWidth = 0;\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw(ctx => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? defaultWidth, beginPos, mousePos, lineColor, opacity);\n    });\n}\n", "import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Grab } from \"./Options/Classes/Grab.js\";\nimport { drawGrab } from \"./Utils.js\";\nconst grabMode = \"grab\", minDistance = 0, minOpacity = 0;\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < minDistance) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= minOpacity) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(grabMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n", "import { Grabber } from \"./Grabber.js\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalGrab\", container => {\n        return Promise.resolve(new Grabber(container, engine));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Grab.js\";\nexport * from \"./Options/Classes/GrabLinks.js\";\nexport * from \"./Options/Interfaces/IGrab.js\";\nexport * from \"./Options/Interfaces/IGrabLinks.js\";\n", "import { ExternalInteractorBase } from \"@tsparticles/engine\";\nconst pauseMode = \"pause\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pauseMode) {\n                return;\n            }\n            const container = this.container;\n            if (container.animationStatus) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n", "import { Pauser } from \"./Pauser.js\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalPause\", container => {\n        return Promise.resolve(new Pauser(container));\n    }, refresh);\n}\n", "import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map(t => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n", "import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"@tsparticles/engine\";\nimport { Push } from \"./Options/Classes/Push.js\";\nconst pushMode = \"push\", minQuantity = 0;\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pushMode) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= minQuantity) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            void container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n", "import { Pusher } from \"./Pusher.js\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalPush\", container => {\n        return Promise.resolve(new Pusher(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Push.js\";\nexport * from \"./Options/Interfaces/IPush.js\";\n", "import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n", "import { ExternalInteractorBase, getRangeValue, } from \"@tsparticles/engine\";\nimport { Remove } from \"./Options/Classes/Remove.js\";\nconst removeMode = \"remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== removeMode) {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n", "import { Remover } from \"./Remover.js\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalRemove\", container => {\n        return Promise.resolve(new Remover(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Remove.js\";\nexport * from \"./Options/Interfaces/IRemove.js\";\n", "import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = EasingType.easeOutQuad;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n", "import { executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nimport { RepulseDiv } from \"./RepulseDiv.js\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n", "import { Circle, DivType, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, isDivModeEnabled, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Repulse } from \"./Options/Classes/Repulse.js\";\nconst repulseMode = \"repulse\", minDistance = 0, repulseRadiusFactor = 6, repulseRadiusPower = 3, squarePower = 2, minRadius = 0, minSpeed = 0, easingOffset = 1, half = 0.5;\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse ?? { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < minDistance) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / repulseRadiusFactor, repulseRadiusPower), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, p => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** squarePower, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < minRadius || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, p => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const { easing, speed, factor, maxSpeed } = repulseOptions, easingFunc = this._engine.getEasing(easing), velocity = (divRepulse?.speed ?? speed) * factor;\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), repulseFactor = clamp(easingFunc(easingOffset - distance / repulseRadius) * velocity, minSpeed, maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * repulseFactor, !distance ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== repulseMode) {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(repulseMode, hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(repulseMode, clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(repulseMode, divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(repulseMode, divs);\n        if (!(divRepulse || (hover.enable && !!mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(repulseMode, hoverMode) || isInArray(repulseMode, clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n", "import { Repulser } from \"./Repulser.js\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalRepulse\", container => {\n        return Promise.resolve(new Repulser(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/RepulseBase.js\";\nexport * from \"./Options/Classes/RepulseDiv.js\";\nexport * from \"./Options/Classes/Repulse.js\";\nexport * from \"./Options/Interfaces/IRepulseBase.js\";\nexport * from \"./Options/Interfaces/IRepulseDiv.js\";\nexport * from \"./Options/Interfaces/IRepulse.js\";\n", "import { isNull } from \"@tsparticles/engine\";\nexport class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { ExternalInteractorBase, getDistance, isInArray, } from \"@tsparticles/engine\";\nimport { Slow } from \"./Options/Classes/Slow.js\";\nconst slowMode = \"slow\", minRadius = 0;\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(slowMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < minRadius || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n", "import { Slower } from \"./Slower.js\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalSlow\", container => {\n        return Promise.resolve(new Slower(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Slow.js\";\nexport * from \"./Options/Interfaces/ISlow.js\";\n", "import { errorPrefix, getLogger, getStyleFromHsl } from \"@tsparticles/engine\";\nconst stringStart = 0, defaultOpacity = 1;\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(stringStart, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? defaultOpacity), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor,\n        source: imageData.src,\n    };\n    return new Promise(resolve => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        const errorHandler = async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        };\n        img.addEventListener(\"error\", () => void errorHandler());\n        img.src = url;\n    });\n}\n", "export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n", "export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        const increment = 2, previous = 1, shift = 8;\n        this.pos += increment;\n        return this.data[this.pos - increment] + (this.data[this.pos - previous] << shift);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        const minCount = 0, emptySize = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= minCount; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== emptySize);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = this.data[this.pos], len = 0;\n        const emptySize = 0, increment = 1;\n        for (let offset = 0; size !== emptySize; offset += size + increment, size = this.data[this.pos + offset]) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        size = this.data[this.pos++];\n        for (let i = 0; size !== emptySize; size = this.data[this.pos++]) {\n            for (let count = size; --count >= emptySize; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (const increment = 1, noData = 0; this.data[this.pos] !== noData; this.pos += this.data[this.pos] + increment) {\n        }\n        this.pos++;\n    }\n}\n", "export var DisposalMethod;\n(function (DisposalMethod) {\n    DisposalMethod[DisposalMethod[\"Replace\"] = 0] = \"Replace\";\n    DisposalMethod[DisposalMethod[\"Combine\"] = 1] = \"Combine\";\n    DisposalMethod[DisposalMethod[\"RestoreBackground\"] = 2] = \"RestoreBackground\";\n    DisposalMethod[DisposalMethod[\"RestorePrevious\"] = 3] = \"RestorePrevious\";\n    DisposalMethod[DisposalMethod[\"UndefinedA\"] = 4] = \"UndefinedA\";\n    DisposalMethod[DisposalMethod[\"UndefinedB\"] = 5] = \"UndefinedB\";\n    DisposalMethod[DisposalMethod[\"UndefinedC\"] = 6] = \"UndefinedC\";\n    DisposalMethod[DisposalMethod[\"UndefinedD\"] = 7] = \"UndefinedD\";\n})(DisposalMethod || (DisposalMethod = {}));\n", "export var GIFDataHeaders;\n(function (GIFDataHeaders) {\n    GIFDataHeaders[GIFDataHeaders[\"Extension\"] = 33] = \"Extension\";\n    GIFDataHeaders[GIFDataHeaders[\"ApplicationExtension\"] = 255] = \"ApplicationExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"GraphicsControlExtension\"] = 249] = \"GraphicsControlExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"PlainTextExtension\"] = 1] = \"PlainTextExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"CommentExtension\"] = 254] = \"CommentExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"Image\"] = 44] = \"Image\";\n    GIFDataHeaders[GIFDataHeaders[\"EndOfFile\"] = 59] = \"EndOfFile\";\n})(GIFDataHeaders || (GIFDataHeaders = {}));\n", "import { loadImage } from \"../Utils.js\";\nimport { InterlaceOffsets, InterlaceSteps } from \"./Constants.js\";\nimport { ByteStream } from \"./ByteStream.js\";\nimport { DisposalMethod } from \"./Enums/DisposalMethod.js\";\nimport { GIFDataHeaders } from \"./Types/GIFDataHeaders.js\";\nconst origin = {\n    x: 0,\n    y: 0,\n}, defaultFrame = 0, half = 0.5, initialTime = 0, firstIndex = 0, defaultLoopCount = 0;\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nfunction parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.GraphicsControlExtension: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case GIFDataHeaders.ApplicationExtension: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case GIFDataHeaders.CommentExtension: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case GIFDataHeaders.PlainTextExtension: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        if (index !== getTransparencyIndex(null)) {\n            return { r, g, b, a: 255 };\n        }\n        return { r, g, b, a: avgAlpha ? ~~((r + g + b) / 3) : 0 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                let pixelPos = 0, lineIndex = 0, exit = false;\n                while (!exit) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (const item of dic[code]) {\n                            const { r, g, b, a } = getColor(item);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            exit = true;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        let code = 0, size = minCodeSize + 1, pos = 0, pixelPos = -4, exit = false;\n        const dic = [[0]];\n        while (!exit) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    exit = true;\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (const item of dic[code]) {\n                    const { r, g, b, a } = getColor(item);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.EndOfFile:\n            return true;\n        case GIFDataHeaders.Image:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case GIFDataHeaders.Extension:\n            parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: DisposalMethod.Replace,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\nexport function drawGif(data) {\n    const { context, radius, particle, delta } = data, image = particle.image;\n    if (!image?.gifData || !image.gif) {\n        return;\n    }\n    const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n    if (!offscreenContext) {\n        throw new Error(\"could not create offscreen canvas context\");\n    }\n    offscreenContext.imageSmoothingQuality = \"low\";\n    offscreenContext.imageSmoothingEnabled = false;\n    offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n    if (particle.gifLoopCount === undefined) {\n        particle.gifLoopCount = image.gifLoopCount ?? defaultLoopCount;\n    }\n    let frameIndex = particle.gifFrame ?? defaultFrame;\n    const pos = { x: -image.gifData.width * half, y: -image.gifData.height * half }, frame = image.gifData.frames[frameIndex];\n    if (particle.gifTime === undefined) {\n        particle.gifTime = initialTime;\n    }\n    if (!frame.bitmap) {\n        return;\n    }\n    context.scale(radius / image.gifData.width, radius / image.gifData.height);\n    switch (frame.disposalMethod) {\n        case DisposalMethod.UndefinedA:\n        case DisposalMethod.UndefinedB:\n        case DisposalMethod.UndefinedC:\n        case DisposalMethod.UndefinedD:\n        case DisposalMethod.Replace:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            break;\n        case DisposalMethod.Combine:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            break;\n        case DisposalMethod.RestoreBackground:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            if (!image.gifData.globalColorTable.length) {\n                offscreenContext.putImageData(image.gifData.frames[firstIndex].image, pos.x + frame.left, pos.y + frame.top);\n            }\n            else {\n                offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n            }\n            break;\n        case DisposalMethod.RestorePrevious:\n            {\n                const previousImageData = offscreenContext.getImageData(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                context.drawImage(offscreenCanvas, pos.x, pos.y);\n                offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.putImageData(previousImageData, origin.x, origin.y);\n            }\n            break;\n    }\n    particle.gifTime += delta.value;\n    if (particle.gifTime > frame.delayTime) {\n        particle.gifTime -= frame.delayTime;\n        if (++frameIndex >= image.gifData.frames.length) {\n            if (--particle.gifLoopCount <= defaultLoopCount) {\n                return;\n            }\n            frameIndex = firstIndex;\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n        }\n        particle.gifFrame = frameIndex;\n    }\n    context.scale(image.gifData.width / radius, image.gifData.height / radius);\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? defaultLoopCount;\n        if (!image.gifLoopCount) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\n", "import { errorPrefix } from \"@tsparticles/engine\";\nimport { replaceImageColor } from \"./Utils.js\";\nimport { drawGif } from \"./GifUtils/Utils.js\";\nconst double = 2, defaultAlpha = 1, sides = 12, defaultRatio = 1;\nexport class ImageDrawer {\n    constructor(engine) {\n        this.validTypes = [\"image\", \"images\"];\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(data) {\n        const { context, radius, particle, opacity } = data, image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            drawGif(data);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            }, diameter = radius * double;\n            context.drawImage(element, pos.x, pos.y, diameter, diameter / ratio);\n        }\n        context.globalAlpha = defaultAlpha;\n    }\n    getSidesCount() {\n        return sides;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            void this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        void (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height\n                        ? imageData.width / imageData.height\n                        : (image.ratio ?? defaultRatio),\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.shapeFill, close = imageData.close ?? particle.shapeClose, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.shapeFill = imageShape.fill;\n            particle.shapeClose = imageShape.close;\n        })();\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nexport class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n", "import { Preload } from \"./Options/Classes/Preload.js\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    async getPlugin() {\n        await Promise.resolve();\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source?.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find(t => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n", "import { downloadSvgImage, loadImage } from \"./Utils.js\";\nimport { ImageDrawer } from \"./ImageDrawer.js\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader.js\";\nimport { errorPrefix } from \"@tsparticles/engine\";\nimport { loadGifImage } from \"./GifUtils/Utils.js\";\nconst extLength = 3;\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - extLength),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            let imageFunc;\n            if (data.gif) {\n                imageFunc = loadGifImage;\n            }\n            else {\n                imageFunc = data.replaceColor ? downloadSvgImage : loadImage;\n            }\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape(new ImageDrawer(engine), refresh);\n}\n", "import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { LifeDelay } from \"./LifeDelay.js\";\nimport { LifeDuration } from \"./LifeDuration.js\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n", "import { getRangeValue, millisecondsToSeconds, randomInRange, setRangeValue, } from \"@tsparticles/engine\";\nconst noTime = 0, infiniteValue = -1, noLife = 0, minCanvasSize = 0;\nexport function updateLife(particle, delta, canvasSize) {\n    if (!particle.life) {\n        return;\n    }\n    const life = particle.life;\n    let justSpawned = false;\n    if (particle.spawning) {\n        life.delayTime += delta.value;\n        if (life.delayTime >= particle.life.delay) {\n            justSpawned = true;\n            particle.spawning = false;\n            life.delayTime = noTime;\n            life.time = noTime;\n        }\n        else {\n            return;\n        }\n    }\n    if (life.duration === infiniteValue) {\n        return;\n    }\n    if (particle.spawning) {\n        return;\n    }\n    if (justSpawned) {\n        life.time = noTime;\n    }\n    else {\n        life.time += delta.value;\n    }\n    if (life.time < life.duration) {\n        return;\n    }\n    life.time = noTime;\n    if (particle.life.count > noLife) {\n        particle.life.count--;\n    }\n    if (particle.life.count === noLife) {\n        particle.destroy();\n        return;\n    }\n    const widthRange = setRangeValue(minCanvasSize, canvasSize.width), heightRange = setRangeValue(minCanvasSize, canvasSize.width);\n    particle.position.x = randomInRange(widthRange);\n    particle.position.y = randomInRange(heightRange);\n    particle.spawning = true;\n    life.delayTime = noTime;\n    life.time = noTime;\n    particle.reset();\n    const lifeOptions = particle.options.life;\n    if (lifeOptions) {\n        life.delay = getRangeValue(lifeOptions.delay.value) * millisecondsToSeconds;\n        life.duration = getRangeValue(lifeOptions.duration.value) * millisecondsToSeconds;\n    }\n}\n", "import { getRandom, getRangeValue, millisecondsToSeconds, } from \"@tsparticles/engine\";\nimport { Life } from \"./Options/Classes/Life.js\";\nimport { updateLife } from \"./Utils.js\";\nconst noTime = 0, identity = 1, infiniteValue = -1;\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            delayTime: noTime,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            time: noTime,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= noTime) {\n            particle.life.duration = infiniteValue;\n        }\n        if (particle.life.count <= noTime) {\n            particle.life.count = infiniteValue;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > noTime;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        updateLife(particle, delta, this.container.canvas.size);\n    }\n}\n", "import { LifeUpdater } from \"./LifeUpdater.js\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"life\", async (container) => {\n        return Promise.resolve(new LifeUpdater(container));\n    }, refresh);\n}\n", "export function drawLine(data) {\n    const { context, particle, radius } = data, shapeData = particle.shapeData, centerY = 0;\n    context.moveTo(-radius, centerY);\n    context.lineTo(radius, centerY);\n    context.lineCap = shapeData?.cap ?? \"butt\";\n}\n", "import { drawLine } from \"./Utils.js\";\nconst sides = 1;\nexport class LineDrawer {\n    constructor() {\n        this.validTypes = [\"line\"];\n    }\n    draw(data) {\n        drawLine(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n", "import { LineDrawer } from \"./LineDrawer.js\";\nexport async function loadLineShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new LineDrawer(), refresh);\n}\n", "import { isSsr } from \"@tsparticles/engine\";\nconst half = 0.5;\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width * half,\n            y: canvasSize.height * half,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n", "import { ParallaxMover } from \"./ParallaxMover.js\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addMover(\"parallax\", () => {\n        return Promise.resolve(new ParallaxMover());\n    }, refresh);\n}\n", "import { ParticlesInteractorBase, getDistances, getRangeValue, } from \"@tsparticles/engine\";\nconst attractFactor = 1000, identity = 1;\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1) {\n        const container = this.container;\n        if (p1.attractDistance === undefined) {\n            p1.attractDistance = getRangeValue(p1.options.move.attract.distance) * container.retina.pixelRatio;\n        }\n        const distance = p1.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * attractFactor), ay = dy / (rotate.y * attractFactor), p1Factor = p2.size.value / p1.size.value, p2Factor = identity / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n", "import { Attractor } from \"./Attractor.js\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"particlesAttract\", container => {\n        return Promise.resolve(new Attractor(container));\n    }, refresh);\n}\n", "import { clamp } from \"@tsparticles/engine\";\nconst half = 0.5, absorbFactor = 10, minAbsorbFactor = 0;\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / absorbFactor, minAbsorbFactor, r2);\n    p1.size.value += factor * half;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n", "import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"@tsparticles/engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n", "import { bounce } from \"./Bounce.js\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n", "import { CollisionMode } from \"@tsparticles/engine\";\nimport { absorb } from \"./Absorb.js\";\nimport { bounce } from \"./Bounce.js\";\nimport { destroy } from \"./Destroy.js\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case CollisionMode.absorb: {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case CollisionMode.bounce: {\n            bounce(p1, p2);\n            break;\n        }\n        case CollisionMode.destroy: {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n", "import { ParticlesInteractorBase, getDistance } from \"@tsparticles/engine\";\nimport { resolveCollision } from \"./ResolveCollision.js\";\nconst double = 2;\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * double);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n", "import { Collider } from \"./Collider.js\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"particlesCollisions\", container => {\n        return Promise.resolve(new Collider(container));\n    }, refresh);\n}\n", "import { Circle, Rectangle } from \"@tsparticles/engine\";\nconst double = 2;\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize, { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * double);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * double, rect.size.height * double);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n", "import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n", "import { OptionsColor, isNull } from \"@tsparticles/engine\";\nimport { LinksShadow } from \"./LinksShadow.js\";\nimport { LinksTriangle } from \"./LinksTriangle.js\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n", "import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"@tsparticles/engine\";\nimport { CircleWarp } from \"./CircleWarp.js\";\nimport { Links } from \"./Options/Classes/Links.js\";\nconst squarePower = 2, opacityOffset = 1, origin = {\n    x: 0,\n    y: 0,\n}, minDistance = 0;\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** squarePower + warpDistances.y ** squarePower);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._setColor = p1 => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this._linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this._linkContainer = container;\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n        this._linkContainer.particles.linksColor = undefined;\n        this._linkContainer.particles.linksColors = new Map();\n    }\n    interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < origin.x || pos1.y < origin.y || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? minDistance, warp = linkOpt1.warp;\n        let range;\n        if (warp) {\n            range = new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize);\n        }\n        else {\n            range = new Circle(pos1.x, pos1.y, optDistance);\n        }\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some(t => t.destination === p2) ||\n                p2.links.some(t => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < origin.x || pos2.y < origin.y || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (opacityOffset - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links);\n        }\n    }\n    reset() {\n    }\n}\n", "import { Linker } from \"./Linker.js\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", async (container) => {\n        return Promise.resolve(new Linker(container, engine));\n    }, refresh);\n}\n", "import { drawLine, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"@tsparticles/engine\";\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, engine, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(engine, shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map(t => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n", "import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"@tsparticles/engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils.js\";\nconst minOpacity = 0, minWidth = 0, minDistance = 0, half = 0.5, maxFrequency = 1;\nexport class LinkInstance {\n    constructor(container, engine) {\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this._container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw(ctx => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(this._engine, twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? minWidth, maxDistance = p1.retina.linksDistance ?? minDistance, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    engine: this._engine,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this._container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) * half;\n            if (opacityTriangle <= minOpacity) {\n                return;\n            }\n            container.canvas.draw(ctx => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? minDistance;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(this._engine, triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter(t => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination), minCount = 0;\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex(l => l.destination === t.destination) >= minCount);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._container = container;\n        this._engine = engine;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links?.length) {\n            return;\n        }\n        const p1Links = links.filter(l => options.links &&\n            (options.links.frequency >= maxFrequency ||\n                this._getLinkFrequency(particle, l.destination) <= options.links.frequency));\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > minOpacity && (particle.retina.linksWidth ?? minWidth) > minWidth) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n        await Promise.resolve();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this._container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n", "import { LinkInstance } from \"./LinkInstance.js\";\nexport class LinksPlugin {\n    constructor(engine) {\n        this.id = \"links\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return Promise.resolve(new LinkInstance(container, this._engine));\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n", "import { LinksPlugin } from \"./LinksPlugin.js\";\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n}\n", "import { loadLinksInteraction } from \"./interaction.js\";\nimport { loadLinksPlugin } from \"./plugin.js\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links.js\";\nexport * from \"./Options/Classes/LinksShadow.js\";\nexport * from \"./Options/Classes/LinksTriangle.js\";\nexport * from \"./Options/Interfaces/ILinks.js\";\nexport * from \"./Options/Interfaces/ILinksShadow.js\";\nexport * from \"./Options/Interfaces/ILinksTriangle.js\";\n", "import { degToRad } from \"@tsparticles/engine\";\nconst piDeg = 180, origin = { x: 0, y: 0 }, sidesOffset = 2;\nexport function drawPolygon(data, start, side) {\n    const { context } = data, sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (piDeg * (decimalSides - sidesOffset)) / decimalSides, interiorAngle = Math.PI - degToRad(interiorAngleDegrees);\n    if (!context) {\n        return;\n    }\n    context.beginPath();\n    context.translate(start.x, start.y);\n    context.moveTo(origin.x, origin.y);\n    for (let i = 0; i < sideCount; i++) {\n        context.lineTo(side.length, origin.y);\n        context.translate(side.length, origin.y);\n        context.rotate(interiorAngle);\n    }\n}\n", "import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawPolygon } from \"./Utils.js\";\nconst defaultSides = 5;\nexport class PolygonDrawerBase {\n    draw(data) {\n        const { particle, radius } = data, start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius);\n        drawPolygon(data, start, side);\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? defaultSides));\n    }\n}\n", "import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst sidesCenterFactor = 3.5, yFactor = 2.66, sidesFactor = 3;\nexport class PolygonDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"polygon\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / sidesCenterFactor),\n            y: -radius / (yFactor / sidesCenterFactor),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * yFactor) / (sides / sidesFactor),\n        };\n    }\n}\n", "import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst yFactor = 1.66, sides = 3, double = 2;\nexport class TriangleDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"triangle\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / yFactor,\n        };\n    }\n    getSidesCount() {\n        return sides;\n    }\n    getSidesData(particle, radius) {\n        const diameter = radius * double;\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: diameter,\n        };\n    }\n}\n", "import { PolygonDrawer } from \"./PolygonDrawer.js\";\nimport { TriangleDrawer } from \"./TriangleDrawer.js\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n", "import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { RotateDirection, ValueWithRandom, isNull, } from \"@tsparticles/engine\";\nimport { RotateAnimation } from \"./RotateAnimation.js\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = RotateDirection.clockwise;\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n", "import { AnimationStatus, DestroyType, RotateDirection, degToRad, getRandom, getRangeValue, updateAnimation, } from \"@tsparticles/engine\";\nimport { Rotate } from \"./Options/Classes/Rotate.js\";\nconst double = 2, doublePI = Math.PI * double, identity = 1, doublePIDeg = 360;\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: degToRad(getRangeValue(rotateOptions.value)),\n            min: 0,\n            max: doublePI,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === RotateDirection.random) {\n            const index = Math.floor(getRandom() * double), minIndex = 0;\n            rotateDirection = index > minIndex ? RotateDirection.counterClockwise : RotateDirection.clockwise;\n        }\n        switch (rotateDirection) {\n            case RotateDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.rotate.status = AnimationStatus.decreasing;\n                break;\n            case RotateDirection.clockwise:\n                particle.rotate.status = AnimationStatus.increasing;\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = identity - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / doublePIDeg) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && (!!rotate.value || rotate.animation.enable || rotate.path);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        particle.isRotating = !!particle.rotate;\n        if (!particle.rotate) {\n            return;\n        }\n        updateAnimation(particle, particle.rotate, false, DestroyType.none, delta);\n        particle.rotation = particle.rotate.value;\n    }\n}\n", "import { RotateUpdater } from \"./RotateUpdater.js\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"rotate\", container => {\n        return Promise.resolve(new RotateUpdater(container));\n    }, refresh);\n}\n", "const fixFactorSquared = 2, fixFactor = Math.sqrt(fixFactorSquared), double = 2;\nexport function drawSquare(data) {\n    const { context, radius } = data, fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * double;\n    context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n}\n", "import { drawSquare } from \"./Utils.js\";\nconst sides = 4;\nexport class SquareDrawer {\n    constructor() {\n        this.validTypes = [\"edge\", \"square\"];\n    }\n    draw(data) {\n        drawSquare(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n", "import { SquareDrawer } from \"./SquareDrawer.js\";\nexport async function loadSquareShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new SquareDrawer(), refresh);\n}\n", "const defaultInset = 2, origin = { x: 0, y: 0 };\nexport function drawStar(data) {\n    const { context, particle, radius } = data, sides = particle.sides, inset = particle.starInset ?? defaultInset;\n    context.moveTo(origin.x, origin.y - radius);\n    for (let i = 0; i < sides; i++) {\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius * inset);\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius);\n    }\n}\n", "import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawStar } from \"./Utils.js\";\nconst defaultInset = 2, defaultSides = 5;\nexport class StarDrawer {\n    constructor() {\n        this.validTypes = [\"star\"];\n    }\n    draw(data) {\n        drawStar(data);\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? defaultSides));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData;\n        particle.starInset = getRangeValue(star?.inset ?? defaultInset);\n    }\n}\n", "import { StarDrawer } from \"./StarDrawer.js\";\nexport async function loadStarShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new StarDrawer(), refresh);\n}\n", "import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nconst defaultOpacity = 1;\nexport class StrokeColorUpdater {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n    }\n    init(particle) {\n        const container = this._container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? defaultOpacity);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(this._engine, stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateColor(particle.strokeColor, delta);\n    }\n}\n", "import { StrokeColorUpdater } from \"./StrokeColorUpdater.js\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"strokeColor\", container => {\n        return Promise.resolve(new StrokeColorUpdater(container, engine));\n    }, refresh);\n}\n", "import { loadBasic } from \"@tsparticles/basic\";\nimport { loadEasingQuadPlugin } from \"@tsparticles/plugin-easing-quad\";\nimport { loadEmojiShape } from \"@tsparticles/shape-emoji\";\nimport { loadExternalAttractInteraction } from \"@tsparticles/interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"@tsparticles/interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"@tsparticles/interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"@tsparticles/interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"@tsparticles/interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"@tsparticles/interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"@tsparticles/interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"@tsparticles/interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"@tsparticles/interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"@tsparticles/interaction-external-slow\";\nimport { loadImageShape } from \"@tsparticles/shape-image\";\nimport { loadLifeUpdater } from \"@tsparticles/updater-life\";\nimport { loadLineShape } from \"@tsparticles/shape-line\";\nimport { loadParallaxMover } from \"@tsparticles/move-parallax\";\nimport { loadParticlesAttractInteraction } from \"@tsparticles/interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"@tsparticles/interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"@tsparticles/interaction-particles-links\";\nimport { loadPolygonShape } from \"@tsparticles/shape-polygon\";\nimport { loadRotateUpdater } from \"@tsparticles/updater-rotate\";\nimport { loadSquareShape } from \"@tsparticles/shape-square\";\nimport { loadStarShape } from \"@tsparticles/shape-star\";\nimport { loadStrokeColorUpdater } from \"@tsparticles/updater-stroke-color\";\nexport async function loadSlim(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin(engine, false);\n    await loadEmojiShape(engine, false);\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n", "import { itemFromSingleOrMultiple } from \"@tsparticles/engine\";\nconst double = 2, half = 0.5;\nexport function drawText(data) {\n    const { context, particle, radius, opacity } = data, character = particle.shapeData;\n    if (!character) {\n        return;\n    }\n    const textData = character.value;\n    if (textData === undefined) {\n        return;\n    }\n    if (particle.text === undefined) {\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n    const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * double, font = character.font ?? \"Verdana\", fill = particle.shapeFill;\n    const lines = text?.split(\"\\n\");\n    if (!lines) {\n        return;\n    }\n    context.font = `${style} ${weight} ${size}px \"${font}\"`;\n    context.globalAlpha = opacity;\n    for (let i = 0; i < lines.length; i++) {\n        drawLine(context, lines[i], radius, opacity, i, fill);\n    }\n    context.globalAlpha = 1;\n}\nfunction drawLine(context, line, radius, opacity, index, fill) {\n    const offsetX = line.length * radius * half, pos = {\n        x: -offsetX,\n        y: radius * half,\n    }, diameter = radius * double;\n    if (fill) {\n        context.fillText(line, pos.x, pos.y + diameter * index);\n    }\n    else {\n        context.strokeText(line, pos.x, pos.y + diameter * index);\n    }\n}\n", "import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"@tsparticles/engine\";\nimport { drawText } from \"./Utils.js\";\nexport class TextDrawer {\n    constructor() {\n        this.validTypes = [\"text\", \"character\", \"char\", \"multiline-text\"];\n    }\n    draw(data) {\n        drawText(data);\n    }\n    async init(container) {\n        const options = container.actualOptions, { validTypes } = this;\n        if (validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map(t => options.particles.shape.options[t])\n                .find(t => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, shape => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !this.validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n", "import { TextDrawer } from \"./TextDrawer.js\";\nexport async function loadTextShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new TextDrawer(), refresh);\n}\n", "export var TiltDirection;\n(function (TiltDirection) {\n    TiltDirection[\"clockwise\"] = \"clockwise\";\n    TiltDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    TiltDirection[\"random\"] = \"random\";\n})(TiltDirection || (TiltDirection = {}));\n", "import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nimport { TiltDirection } from \"../../TiltDirection.js\";\nimport { TiltAnimation } from \"./TiltAnimation.js\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = TiltDirection.clockwise;\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n", "import { AnimationStatus, DestroyType, degToRad, getRandom, getRangeValue, half, updateAnimation, } from \"@tsparticles/engine\";\nimport { Tilt } from \"./Options/Classes/Tilt.js\";\nimport { TiltDirection } from \"./TiltDirection.js\";\nconst identity = 1, double = 2, doublePI = Math.PI * double, maxAngle = 360;\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        const tilt = particle.tilt?.enable && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: degToRad(getRangeValue(tiltOptions.value)),\n            sinDirection: getRandom() >= half ? identity : -identity,\n            cosDirection: getRandom() >= half ? identity : -identity,\n            min: 0,\n            max: doublePI,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === TiltDirection.random) {\n            const index = Math.floor(getRandom() * double), minIndex = 0;\n            tiltDirection = index > minIndex ? TiltDirection.counterClockwise : TiltDirection.clockwise;\n        }\n        switch (tiltDirection) {\n            case TiltDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.tilt.status = AnimationStatus.decreasing;\n                break;\n            case TiltDirection.clockwise:\n                particle.tilt.status = AnimationStatus.increasing;\n                break;\n        }\n        const tiltAnimation = particle.options.tilt?.animation;\n        if (tiltAnimation?.enable) {\n            particle.tilt.decay = identity - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity =\n                (getRangeValue(tiltAnimation.speed) / maxAngle) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tiltAnimation = particle.options.tilt?.animation;\n        return !particle.destroyed && !particle.spawning && !!tiltAnimation?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source?.tilt);\n        }\n    }\n    async update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.tilt) {\n            return;\n        }\n        updateAnimation(particle, particle.tilt, false, DestroyType.none, delta);\n        await Promise.resolve();\n    }\n}\n", "import { TiltUpdater } from \"./TiltUpdater.js\";\nexport async function loadTiltUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"tilt\", container => {\n        return Promise.resolve(new TiltUpdater(container));\n    }, refresh);\n}\n", "import { OptionsColor, isNull, setRangeValue, } from \"@tsparticles/engine\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { TwinkleValues } from \"./TwinkleValues.js\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n", "import { getRandom, getRangeValue, getStyleFromHsl, rangeColorToHsl, } from \"@tsparticles/engine\";\nimport { Twinkle } from \"./Options/Classes/Twinkle.js\";\nexport class TwinkleUpdater {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return {};\n        }\n        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && getRandom() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOffset = 1, zOpacityFactor = (zOffset - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = rangeColorToHsl(this._engine, twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    async init() {\n        await Promise.resolve();\n    }\n    isEnabled(particle) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return false;\n        }\n        return twinkleOptions.particles.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.twinkle) {\n            options.twinkle = new Twinkle();\n        }\n        for (const source of sources) {\n            options.twinkle.load(source?.twinkle);\n        }\n    }\n    async update() {\n        await Promise.resolve();\n    }\n}\n", "import { TwinkleUpdater } from \"./TwinkleUpdater.js\";\nexport async function loadTwinkleUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"twinkle\", () => {\n        return Promise.resolve(new TwinkleUpdater(engine));\n    }, refresh);\n}\n", "import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n", "import { isNull, isNumber, setRangeValue, } from \"@tsparticles/engine\";\nimport { WobbleSpeed } from \"./WobbleSpeed.js\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (isNumber(data.speed)) {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n", "import { millisecondsToSeconds } from \"@tsparticles/engine\";\nconst defaultDistance = 0, double = 2, doublePI = Math.PI * double, distanceFactor = 60;\nexport function updateWobble(particle, delta) {\n    const { wobble: wobbleOptions } = particle.options, { wobble } = particle;\n    if (!wobbleOptions?.enable || !wobble) {\n        return;\n    }\n    const angleSpeed = wobble.angleSpeed * delta.factor, moveSpeed = wobble.moveSpeed * delta.factor, distance = (moveSpeed * ((particle.retina.wobbleDistance ?? defaultDistance) * delta.factor)) /\n        (millisecondsToSeconds / distanceFactor), max = doublePI, { position } = particle;\n    wobble.angle += angleSpeed;\n    if (wobble.angle > max) {\n        wobble.angle -= max;\n    }\n    position.x += distance * Math.cos(wobble.angle);\n    position.y += distance * Math.abs(Math.sin(wobble.angle));\n}\n", "import { getRandom, getRangeValue, } from \"@tsparticles/engine\";\nimport { Wobble } from \"./Options/Classes/Wobble.js\";\nimport { updateWobble } from \"./Utils.js\";\nconst double = 2, doublePI = Math.PI * double, maxAngle = 360, moveSpeedFactor = 10, defaultDistance = 0;\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt?.enable) {\n            particle.wobble = {\n                angle: getRandom() * doublePI,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / maxAngle,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / moveSpeedFactor,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance =\n            getRangeValue(wobbleOpt?.distance ?? defaultDistance) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning && !!particle.options.wobble?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source?.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n", "import { WobbleUpdater } from \"./WobbleUpdater.js\";\nexport async function loadWobbleUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"wobble\", container => {\n        return Promise.resolve(new WobbleUpdater(container));\n    }, refresh);\n}\n", "import { loadAbsorbersPlugin } from \"@tsparticles/plugin-absorbers\";\nimport { loadDestroyUpdater } from \"@tsparticles/updater-destroy\";\nimport { loadEmittersPlugin } from \"@tsparticles/plugin-emitters\";\nimport { loadEmittersShapeCircle } from \"@tsparticles/plugin-emitters-shape-circle\";\nimport { loadEmittersShapeSquare } from \"@tsparticles/plugin-emitters-shape-square\";\nimport { loadExternalTrailInteraction } from \"@tsparticles/interaction-external-trail\";\nimport { loadRollUpdater } from \"@tsparticles/updater-roll\";\nimport { loadSlim } from \"@tsparticles/slim\";\nimport { loadTextShape } from \"@tsparticles/shape-text\";\nimport { loadTiltUpdater } from \"@tsparticles/updater-tilt\";\nimport { loadTwinkleUpdater } from \"@tsparticles/updater-twinkle\";\nimport { loadWobbleUpdater } from \"@tsparticles/updater-wobble\";\nexport async function loadFull(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadDestroyUpdater(engine, false);\n    await loadRollUpdater(engine, false);\n    await loadTiltUpdater(engine, false);\n    await loadTwinkleUpdater(engine, false);\n    await loadWobbleUpdater(engine, false);\n    await loadTextShape(engine, false);\n    await loadExternalTrailInteraction(engine, false);\n    await loadAbsorbersPlugin(engine, false);\n    await loadEmittersPlugin(engine, false);\n    await loadEmittersShapeCircle(engine, false);\n    await loadEmittersShapeSquare(engine, false);\n    await loadSlim(engine, refresh);\n}\n", "import { StartValueType, isNull, setRangeValue, } from \"@tsparticles/engine\";\nexport class GradientColorOpacityAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n        this.startValue = StartValueType.random;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n", "import { isNull, setRangeValue, } from \"@tsparticles/engine\";\nimport { GradientColorOpacityAnimation } from \"./GradientColorOpacityAnimation.js\";\nexport class GradientColorOpacity {\n    constructor() {\n        this.value = 0;\n        this.animation = new GradientColorOpacityAnimation();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n", "import { AnimatableColor, isNull, isNumber } from \"@tsparticles/engine\";\nimport { GradientColorOpacity } from \"./GradientColorOpacity.js\";\nexport class AnimatableGradientColor {\n    constructor() {\n        this.stop = 0;\n        this.value = new AnimatableColor();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.stop !== undefined) {\n            this.stop = data.stop;\n        }\n        this.value = AnimatableColor.create(this.value, data.value);\n        if (data.opacity !== undefined) {\n            this.opacity = new GradientColorOpacity();\n            if (isNumber(data.opacity)) {\n                this.opacity.value = data.opacity;\n            }\n            else {\n                this.opacity.load(data.opacity);\n            }\n        }\n    }\n}\n", "import { isNull, setRangeValue, } from \"@tsparticles/engine\";\nexport class GradientAngleAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n", "import { RotateDirection, isNull, setRangeValue, } from \"@tsparticles/engine\";\nimport { GradientAngleAnimation } from \"./GradientAngleAnimation.js\";\nexport class GradientAngle {\n    constructor() {\n        this.value = 0;\n        this.animation = new GradientAngleAnimation();\n        this.direction = RotateDirection.clockwise;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n    }\n}\n", "import { GradientType, isNull } from \"@tsparticles/engine\";\nimport { AnimatableGradientColor } from \"./AnimatableGradientColor.js\";\nimport { GradientAngle } from \"./GradientAngle.js\";\nexport class AnimatableGradient {\n    constructor() {\n        this.angle = new GradientAngle();\n        this.colors = [];\n        this.type = GradientType.random;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.angle.load(data.angle);\n        if (data.colors !== undefined) {\n            this.colors = data.colors.map(s => {\n                const tmp = new AnimatableGradientColor();\n                tmp.load(s);\n                return tmp;\n            });\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "import { DestroyType, updateAnimation, updateColor } from \"@tsparticles/engine\";\nexport function updateGradient(particle, delta) {\n    const { gradient } = particle;\n    if (!gradient) {\n        return;\n    }\n    updateAnimation(particle, gradient.angle, false, DestroyType.none, delta);\n    for (const color of gradient.colors) {\n        updateColor(color.value, delta);\n        if (color.opacity) {\n            updateAnimation(particle, color.opacity, true, DestroyType.none, delta);\n        }\n    }\n}\n", "import { AnimationStatus, GradientType, RotateDirection, StartValueType, executeOnSingleOrMultiple, getHslAnimationFromHsl, getRandom, getRangeMax, getRangeMin, getRangeValue, getStyleFromHsl, half, itemFromSingleOrMultiple, millisecondsToSeconds, percentDenominator, randomInRange, rangeColorToHsl, } from \"@tsparticles/engine\";\nimport { AnimatableGradient } from \"./Options/Classes/AnimatableGradient.js\";\nimport { updateGradient } from \"./Utils.js\";\nconst double = 2, doublePI = Math.PI * double;\nexport class GradientUpdater {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    getColorStyles(particle, context, radius, opacity) {\n        const gradient = particle.gradient;\n        if (!gradient) {\n            return {};\n        }\n        const gradientAngle = gradient.angle.value, origin = { x: 0, y: 0 }, minRadius = 0, fillGradient = gradient.type === GradientType.radial\n            ? context.createRadialGradient(origin.x, origin.y, minRadius, origin.x, origin.y, radius)\n            : context.createLinearGradient(Math.cos(gradientAngle) * -radius, Math.sin(gradientAngle) * -radius, Math.cos(gradientAngle) * radius, Math.sin(gradientAngle) * radius);\n        for (const { stop, value, opacity: cOpacity } of gradient.colors) {\n            fillGradient.addColorStop(stop, getStyleFromHsl({\n                h: value.h.value,\n                s: value.s.value,\n                l: value.l.value,\n            }, cOpacity?.value ?? opacity));\n        }\n        return { fill: fillGradient };\n    }\n    init(particle) {\n        const gradient = itemFromSingleOrMultiple(particle.options.gradient);\n        if (!gradient) {\n            return;\n        }\n        const { angle } = gradient, speedFactor = 360, delayOffset = 1;\n        particle.gradient = {\n            angle: {\n                value: getRangeValue(angle.value),\n                enable: angle.animation.enable,\n                velocity: (getRangeValue(angle.animation.speed) / speedFactor) * particle.container.retina.reduceFactor,\n                decay: delayOffset - getRangeValue(angle.animation.decay),\n                delayTime: getRangeValue(angle.animation.delay) * millisecondsToSeconds,\n                max: doublePI,\n                min: 0,\n                time: 0,\n            },\n            type: gradient.type,\n            colors: [],\n        };\n        let rotateDirection = gradient.angle.direction;\n        if (rotateDirection === RotateDirection.random) {\n            rotateDirection = getRandom() > half ? RotateDirection.counterClockwise : RotateDirection.clockwise;\n        }\n        switch (rotateDirection) {\n            case RotateDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.gradient.angle.status = AnimationStatus.decreasing;\n                break;\n            case RotateDirection.clockwise:\n                particle.gradient.angle.status = AnimationStatus.increasing;\n                break;\n        }\n        const reduceDuplicates = particle.options.reduceDuplicates;\n        for (const grColor of gradient.colors) {\n            const grHslColor = rangeColorToHsl(this._engine, grColor.value, particle.id, reduceDuplicates);\n            if (!grHslColor) {\n                continue;\n            }\n            const grHslAnimation = getHslAnimationFromHsl(grHslColor, grColor.value.animation, particle.container.retina.reduceFactor), addColor = {\n                stop: grColor.stop,\n                value: grHslAnimation,\n                opacity: grColor.opacity\n                    ? {\n                        enable: grColor.opacity.animation.enable,\n                        max: getRangeMax(grColor.opacity.value),\n                        min: getRangeMin(grColor.opacity.value),\n                        status: AnimationStatus.increasing,\n                        value: getRangeValue(grColor.opacity.value),\n                        velocity: (getRangeValue(grColor.opacity.animation.speed) / percentDenominator) *\n                            particle.container.retina.reduceFactor,\n                        decay: delayOffset - getRangeValue(grColor.opacity.animation.decay),\n                        delayTime: getRangeValue(grColor.opacity.animation.delay) * millisecondsToSeconds,\n                        time: 0,\n                    }\n                    : undefined,\n            };\n            const { opacity: addOpacity } = addColor;\n            if (grColor.opacity && addOpacity) {\n                const opacityRange = grColor.opacity.value;\n                addOpacity.min = getRangeMin(opacityRange);\n                addOpacity.max = getRangeMax(opacityRange);\n                const opacityAnimation = grColor.opacity.animation;\n                switch (opacityAnimation.startValue) {\n                    case StartValueType.min:\n                        addOpacity.value = addOpacity.min;\n                        addOpacity.status = AnimationStatus.increasing;\n                        break;\n                    case StartValueType.max:\n                        addOpacity.value = addOpacity.max;\n                        addOpacity.status = AnimationStatus.decreasing;\n                        break;\n                    case StartValueType.random:\n                    default:\n                        addOpacity.value = randomInRange(addOpacity);\n                        addOpacity.status =\n                            getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                        break;\n                }\n            }\n            particle.gradient.colors.push(addColor);\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            (!!particle.gradient?.angle.enable ||\n                (particle.gradient?.colors.some(c => c.value.h.enable || c.value.s.enable || c.value.l.enable) ??\n                    false)));\n    }\n    loadOptions(options, ...sources) {\n        for (const source of sources) {\n            if (!source?.gradient) {\n                continue;\n            }\n            const gradientToLoad = source.gradient;\n            if (!gradientToLoad) {\n                continue;\n            }\n            options.gradient = executeOnSingleOrMultiple(gradientToLoad, gradient => {\n                const tmp = new AnimatableGradient();\n                tmp.load(gradient);\n                return tmp;\n            });\n        }\n    }\n    update(particle, delta) {\n        updateGradient(particle, delta);\n    }\n}\n", "import { GradientUpdater } from \"./GradientUpdater.js\";\nexport async function loadGradientUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"gradient\", () => {\n        return Promise.resolve(new GradientUpdater(engine));\n    }, refresh);\n}\n", "const half = 0.5, double = 2;\nexport function drawHeart(data) {\n    const { context, radius } = data, diameter = radius * double, halfRadius = radius * half, radiusAndHalf = radius + halfRadius, x = -radius, y = -radius;\n    context.moveTo(x, y + halfRadius);\n    context.quadraticCurveTo(x, y, x + halfRadius, y);\n    context.quadraticCurveTo(x + radius, y, x + radius, y + halfRadius);\n    context.quadraticCurveTo(x + radius, y, x + radiusAndHalf, y);\n    context.quadraticCurveTo(x + diameter, y, x + diameter, y + halfRadius);\n    context.quadraticCurveTo(x + diameter, y + radius, x + radiusAndHalf, y + radiusAndHalf);\n    context.lineTo(x + radius, y + diameter);\n    context.lineTo(x + halfRadius, y + radiusAndHalf);\n    context.quadraticCurveTo(x, y + radius, x, y + halfRadius);\n}\n", "import { drawHeart } from \"./Utils.js\";\nexport class HeartDrawer {\n    constructor() {\n        this.validTypes = [\"heart\"];\n    }\n    draw(data) {\n        drawHeart(data);\n    }\n}\n", "import { HeartDrawer } from \"./HeartDrawer.js\";\nexport async function loadHeartShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new HeartDrawer(), refresh);\n}\n", "import { getRangeValue, getStyleFromHsl, parseAlpha, percentDenominator, } from \"@tsparticles/engine\";\nconst rgbFactor = 255, double = 2, half = 0.5;\nexport function rgbToHsv(rgb) {\n    const rgbPercent = {\n        r: rgb.r / rgbFactor,\n        g: rgb.g / rgbFactor,\n        b: rgb.b / rgbFactor,\n    }, xMax = Math.max(rgbPercent.r, rgbPercent.g, rgbPercent.b), xMin = Math.min(rgbPercent.r, rgbPercent.g, rgbPercent.b), v = xMax, c = xMax - xMin;\n    let h = 0;\n    const phaseOffset = {\n        r: 0,\n        g: 2,\n        b: 4,\n    }, phaseValue = 60;\n    if (v === rgbPercent.r) {\n        h = phaseValue * (phaseOffset.r + (rgbPercent.g - rgbPercent.b) / c);\n    }\n    else if (v === rgbPercent.g) {\n        h = phaseValue * (phaseOffset.g + (rgbPercent.b - rgbPercent.r) / c);\n    }\n    else if (v === rgbPercent.b) {\n        h = phaseValue * (phaseOffset.b + (rgbPercent.r - rgbPercent.g) / c);\n    }\n    const defaultSaturation = 0, s = !v ? defaultSaturation : c / v;\n    return {\n        h,\n        s: s * percentDenominator,\n        v: v * percentDenominator,\n    };\n}\nexport function rgbaToHsva(rgba) {\n    return {\n        a: rgba.a,\n        ...rgbToHsv(rgba),\n    };\n}\nexport function getStyleFromHsv(color, opacity) {\n    return getStyleFromHsl(hsvToHsl(color), opacity);\n}\nexport function hslToHsv(hsl) {\n    const l = hsl.l / percentDenominator, sl = hsl.s / percentDenominator, offset = 1, noValue = 0, v = l + sl * Math.min(l, offset - l), sv = !v ? noValue : double * (offset - l / v);\n    return {\n        h: hsl.h,\n        s: sv * percentDenominator,\n        v: v * percentDenominator,\n    };\n}\nexport function hslaToHsva(hsla) {\n    return {\n        a: hsla.a,\n        ...hslToHsv(hsla),\n    };\n}\nexport function hsvToHsl(hsv) {\n    const v = hsv.v / percentDenominator, sv = hsv.s / percentDenominator, offset = 1, noValue = 0, l = v * (offset - sv * half), sl = !l || l === offset ? noValue : (v - l) / Math.min(l, offset - l);\n    return {\n        h: hsv.h,\n        l: l * percentDenominator,\n        s: sl * percentDenominator,\n    };\n}\nexport function hsvaToHsla(hsva) {\n    return {\n        a: hsva.a,\n        ...hsvToHsl(hsva),\n    };\n}\nexport function hsvToRgb(hsv) {\n    const result = { b: 0, g: 0, r: 0 }, phase = 60, hsvPercent = {\n        h: hsv.h / phase,\n        s: hsv.s / percentDenominator,\n        v: hsv.v / percentDenominator,\n    }, offset = 1, hPercentFactor = 2, c = hsvPercent.v * hsvPercent.s, x = c * (offset - Math.abs((hsvPercent.h % hPercentFactor) - offset));\n    let tempRgb;\n    const cxzRange = { min: 0, max: 1 }, xczRange = { min: 1, max: 2 }, zcxRange = { min: 2, max: 3 }, zxcRange = { min: 3, max: 4 }, xzcRange = { min: 4, max: 5 }, czxRange = { min: 5, max: 6 };\n    if (hsvPercent.h >= cxzRange.min && hsvPercent.h <= cxzRange.max) {\n        tempRgb = {\n            r: c,\n            g: x,\n            b: 0,\n        };\n    }\n    else if (hsvPercent.h > xczRange.min && hsvPercent.h <= xczRange.max) {\n        tempRgb = {\n            r: x,\n            g: c,\n            b: 0,\n        };\n    }\n    else if (hsvPercent.h > zcxRange.min && hsvPercent.h <= zcxRange.max) {\n        tempRgb = {\n            r: 0,\n            g: c,\n            b: x,\n        };\n    }\n    else if (hsvPercent.h > zxcRange.min && hsvPercent.h <= zxcRange.max) {\n        tempRgb = {\n            r: 0,\n            g: x,\n            b: c,\n        };\n    }\n    else if (hsvPercent.h > xzcRange.min && hsvPercent.h <= xzcRange.max) {\n        tempRgb = {\n            r: x,\n            g: 0,\n            b: c,\n        };\n    }\n    else if (hsvPercent.h > czxRange.min && hsvPercent.h <= czxRange.max) {\n        tempRgb = {\n            r: c,\n            g: 0,\n            b: x,\n        };\n    }\n    if (tempRgb) {\n        const m = hsvPercent.v - c;\n        result.r = Math.floor((tempRgb.r + m) * rgbFactor);\n        result.g = Math.floor((tempRgb.g + m) * rgbFactor);\n        result.b = Math.floor((tempRgb.b + m) * rgbFactor);\n    }\n    return result;\n}\nexport function hsvaToRgba(hsva) {\n    return {\n        a: hsva.a,\n        ...hsvToRgb(hsva),\n    };\n}\nexport class HsvColorManager {\n    constructor() {\n        this.key = \"hsv\";\n        this.stringPrefix = \"hsv\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hsvColor = colorValue.hsv ?? color.value;\n        if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n            return hsvToRgb(hsvColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hsvColor = colorValue.hsv ?? color.value;\n        if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n            return hsvToRgb({\n                h: getRangeValue(hsvColor.h),\n                s: getRangeValue(hsvColor.s),\n                v: getRangeValue(hsvColor.v),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsv\")) {\n            return;\n        }\n        const regex = /hsva?\\(\\s*(\\d+)°\\s*[\\s,]\\s*(\\d+)%\\s*[\\s,]\\s*(\\d+)%\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), fullLength = 4, indexes = {\n            h: 1,\n            s: 2,\n            v: 3,\n            a: 5,\n        }, defaultAlpha = 1, radix = 10;\n        return result\n            ? hsvaToRgba({\n                a: result.length > fullLength ? parseAlpha(result[indexes.a]) : defaultAlpha,\n                h: parseInt(result[indexes.h], radix),\n                s: parseInt(result[indexes.s], radix),\n                v: parseInt(result[indexes.v], radix),\n            })\n            : undefined;\n    }\n}\n", "import { HsvColorManager } from \"./HsvColorManager.js\";\nexport async function loadHsvColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new HsvColorManager(), refresh);\n}\n", "import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class InfectionStage {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#ff0000\";\n        this.radius = 0;\n        this.rate = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        this.duration = data.duration;\n        this.infectedStage = data.infectedStage;\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n        if (data.rate !== undefined) {\n            this.rate = data.rate;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { InfectionStage } from \"./InfectionStage.js\";\nexport class Infection {\n    constructor() {\n        this.cure = false;\n        this.delay = 0;\n        this.enable = false;\n        this.infections = 0;\n        this.stages = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.cure !== undefined) {\n            this.cure = data.cure;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.infections !== undefined) {\n            this.infections = data.infections;\n        }\n        if (data.stages === undefined) {\n            return;\n        }\n        this.stages = data.stages.map(t => {\n            const s = new InfectionStage();\n            s.load(t);\n            return s;\n        });\n    }\n}\n", "import { millisecondsToSeconds } from \"@tsparticles/engine\";\nconst minStage = 0, minDuration = 0;\nexport class Infecter {\n    constructor(container) {\n        this._nextInfectionStage = particle => {\n            const infectionOptions = this._container.actualOptions.infection, { infection } = particle;\n            if (!infectionOptions || !infection) {\n                return;\n            }\n            const stagesCount = infectionOptions.stages.length;\n            if (stagesCount <= minStage || infection.stage === undefined) {\n                return;\n            }\n            infection.time = 0;\n            if (stagesCount <= ++infection.stage) {\n                if (infectionOptions.cure) {\n                    delete infection.stage;\n                    delete infection.time;\n                }\n                else {\n                    infection.stage = 0;\n                    infection.time = 0;\n                }\n            }\n        };\n        this._container = container;\n    }\n    startInfection(particle, stage) {\n        const infectionOptions = this._container.actualOptions.infection, { infection } = particle;\n        if (!infectionOptions || !infection) {\n            return;\n        }\n        const stages = infectionOptions.stages, stagesCount = stages.length;\n        if (stage > stagesCount || stage < minStage) {\n            return;\n        }\n        infection.delay = 0;\n        infection.delayStage = stage;\n    }\n    updateInfection(particle, delta) {\n        const infectionOptions = this._container.actualOptions.infection, { infection } = particle;\n        if (!infectionOptions || !infection) {\n            return;\n        }\n        const stages = infectionOptions.stages, stagesCount = stages.length;\n        if (infection.delay !== undefined && infection.delayStage !== undefined) {\n            const stage = infection.delayStage;\n            if (stage > stagesCount || stage < minStage) {\n                return;\n            }\n            if (infection.delay >= infectionOptions.delay * millisecondsToSeconds) {\n                infection.stage = stage;\n                infection.time = 0;\n                delete infection.delay;\n                delete infection.delayStage;\n            }\n            else {\n                infection.delay += delta;\n            }\n        }\n        else {\n            delete infection.delay;\n            delete infection.delayStage;\n        }\n        if (infection.stage !== undefined && infection.time !== undefined) {\n            const infectionStage = stages[infection.stage];\n            if (infectionStage.duration !== undefined && infectionStage.duration >= minDuration) {\n                if (infection.time > infectionStage.duration * millisecondsToSeconds) {\n                    this._nextInfectionStage(particle);\n                }\n                else {\n                    infection.time += delta;\n                }\n            }\n            else {\n                infection.time += delta;\n            }\n        }\n        else {\n            delete infection.stage;\n            delete infection.time;\n        }\n    }\n    updateInfectionStage(particle, stage) {\n        const options = this._container.actualOptions, { infection } = particle;\n        if (!options.infection || !infection) {\n            return;\n        }\n        const stagesCount = options.infection.stages.length;\n        if (stage > stagesCount || stage < minStage || (infection.stage !== undefined && infection.stage > stage)) {\n            return;\n        }\n        infection.stage = stage;\n        infection.time = 0;\n    }\n}\n", "import { itemFromArray } from \"@tsparticles/engine\";\nimport { Infecter } from \"./Infecter.js\";\nconst minStage = 0;\nexport class InfectionInstance {\n    constructor(container) {\n        this._container = container;\n        this._container.infecter = new Infecter(this._container);\n    }\n    particleFillColor(particle) {\n        const options = this._container.actualOptions;\n        if (!particle.infection || !options.infection) {\n            return;\n        }\n        const infectionStage = particle.infection.stage, infection = options.infection, infectionStages = infection.stages;\n        return infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n    }\n    particleStrokeColor(particle) {\n        return this.particleFillColor(particle);\n    }\n    particlesSetup() {\n        const options = this._container.actualOptions;\n        if (!options.infection) {\n            return;\n        }\n        for (let i = 0; i < options.infection.infections; i++) {\n            const notInfected = this._container.particles.filter(p => {\n                const infP = p;\n                if (!infP.infection) {\n                    infP.infection = {};\n                }\n                return infP.infection.stage === undefined;\n            });\n            const infected = itemFromArray(notInfected);\n            this._container.infecter?.startInfection(infected, minStage);\n        }\n    }\n}\n", "import { Infection } from \"./Options/Classes/Infection.js\";\nimport { InfectionInstance } from \"./InfectionInstance.js\";\nexport class InfectionPlugin {\n    constructor() {\n        this.id = \"infection\";\n    }\n    getPlugin(container) {\n        return Promise.resolve(new InfectionInstance(container));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        let infectionOptions = options.infection;\n        if (infectionOptions?.load === undefined) {\n            options.infection = infectionOptions = new Infection();\n        }\n        infectionOptions.load(source?.infection);\n    }\n    needsPlugin(options) {\n        return options?.infection?.enable ?? false;\n    }\n}\n", "import { ParticlesInteractorBase, getRandom } from \"@tsparticles/engine\";\nconst minStagesCount = 1, double = 2;\nexport class ParticlesInfecter extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1, delta) {\n        const infecter = this.container.infecter;\n        if (!infecter) {\n            return;\n        }\n        infecter.updateInfection(p1, delta.value);\n        if (p1.infection?.stage === undefined) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, infectionOptions = options.infection;\n        if (!infectionOptions?.enable || infectionOptions.stages.length < minStagesCount) {\n            return;\n        }\n        const infectionStage1 = infectionOptions.stages[p1.infection.stage], pxRatio = container.retina.pixelRatio, radius = p1.getRadius() * double + infectionStage1.radius * pxRatio, pos = p1.getPosition(), infectedStage1 = infectionStage1.infectedStage ?? p1.infection.stage, query = container.particles.quadTree.queryCircle(pos, radius), infections = infectionStage1.rate, neighbors = query.length;\n        for (const p2 of query) {\n            const infP2 = p2;\n            if (infP2 === p1 ||\n                infP2.destroyed ||\n                infP2.spawning ||\n                !(infP2.infection?.stage === undefined || infP2.infection.stage !== p1.infection.stage) ||\n                getRandom() >= infections / neighbors) {\n                continue;\n            }\n            if (infP2.infection?.stage === undefined) {\n                infecter.startInfection(infP2, infectedStage1);\n            }\n            else if (infP2.infection.stage < p1.infection.stage) {\n                infecter.updateInfectionStage(infP2, infectedStage1);\n            }\n            else if (infP2.infection.stage > p1.infection.stage) {\n                const infectionStage2 = infectionOptions.stages[infP2.infection.stage];\n                const infectedStage2 = infectionStage2?.infectedStage ?? infP2.infection.stage;\n                infecter.updateInfectionStage(p1, infectedStage2);\n            }\n        }\n    }\n    isEnabled() {\n        return this.container.actualOptions?.infection?.enable ?? false;\n    }\n    reset() {\n    }\n}\n", "import { InfectionPlugin } from \"./InfectionPlugin.js\";\nimport { ParticlesInfecter } from \"./ParticlesInfecter.js\";\nexport async function loadInfectionPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    const plugin = new InfectionPlugin();\n    await engine.addPlugin(plugin, refresh);\n    await engine.addInteractor(\"particlesInfection\", container => {\n        return Promise.resolve(new ParticlesInfecter(container));\n    }, refresh);\n}\nexport * from \"./Options/Interfaces/IInfection.js\";\nexport * from \"./Options/Interfaces/IInfectionStage.js\";\n", "const origin = {\n    x: 0,\n    y: 0,\n}, loopSizeFactor = 0.55;\nexport function drawInfinity(data) {\n    const { context, radius } = data, loopControl = radius * loopSizeFactor;\n    context.moveTo(origin.x, origin.y);\n    context.bezierCurveTo(loopControl, -radius, loopControl, radius, origin.x, origin.y);\n    context.moveTo(origin.x, origin.y);\n    context.bezierCurveTo(-loopControl, -radius, origin.x - loopControl, radius, origin.x, origin.y);\n}\n", "import { drawInfinity } from \"./Utils.js\";\nexport class InfinityDrawer {\n    constructor() {\n        this.validTypes = [\"infinity\"];\n    }\n    draw(data) {\n        drawInfinity(data);\n    }\n}\n", "import { InfinityDrawer } from \"./InfinityDrawer.js\";\nexport async function loadInfinityShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new InfinityDrawer(), refresh);\n}\n", "import { getStyleFromRgb } from \"@tsparticles/engine\";\nconst gradientPos = {\n    max: 1,\n    min: 0,\n}, half = 0.5, double = 2, halfPI = Math.PI * half, doublePI = Math.PI * double, quarter = 0.25, quarterPI = Math.PI * quarter, arcStart = 0;\nexport const lightMode = \"light\";\nexport function drawLight(container, context, mousePos) {\n    const lightOptions = container.actualOptions.interactivity.modes.light?.area;\n    if (!lightOptions) {\n        return;\n    }\n    context.beginPath();\n    context.arc(mousePos.x, mousePos.y, lightOptions.radius, arcStart, doublePI);\n    const gradientAmbientLight = context.createRadialGradient(mousePos.x, mousePos.y, arcStart, mousePos.x, mousePos.y, lightOptions.radius);\n    const gradientRgb = container.canvas.mouseLight;\n    if (!gradientRgb?.start || !gradientRgb.stop) {\n        return;\n    }\n    gradientAmbientLight.addColorStop(gradientPos.min, getStyleFromRgb(gradientRgb.start));\n    gradientAmbientLight.addColorStop(gradientPos.max, getStyleFromRgb(gradientRgb.stop));\n    context.fillStyle = gradientAmbientLight;\n    context.fill();\n}\nexport function drawParticleShadow(container, context, particle, mousePos) {\n    const pos = particle.getPosition(), shadowOptions = container.actualOptions.interactivity.modes.light?.shadow;\n    if (!shadowOptions) {\n        return;\n    }\n    const shadowRgb = particle.lightShadow;\n    if (!shadowRgb) {\n        return;\n    }\n    const radius = particle.getRadius(), sides = particle.sides, full = doublePI / sides, angle = -particle.rotation + quarterPI, factor = 1, dots = [];\n    for (let i = 0; i < sides; i++) {\n        dots.push({\n            x: pos.x + radius * Math.sin(angle + full * i) * factor,\n            y: pos.y + radius * Math.cos(angle + full * i) * factor,\n        });\n    }\n    const points = [], shadowLength = shadowOptions.length;\n    for (const dot of dots) {\n        const dotAngle = Math.atan2(mousePos.y - dot.y, mousePos.x - dot.x), end = {\n            x: dot.x + shadowLength * Math.sin(-dotAngle - halfPI),\n            y: dot.y + shadowLength * Math.cos(-dotAngle - halfPI),\n        };\n        points.push({\n            end: end,\n            start: dot,\n        });\n    }\n    const shadowColor = getStyleFromRgb(shadowRgb), lastOffset = 1, firstPos = 0, last = points.length - lastOffset;\n    for (let i = last, n = 0; i >= firstPos; n = i--) {\n        context.beginPath();\n        context.moveTo(points[i].start.x, points[i].start.y);\n        context.lineTo(points[n].start.x, points[n].start.y);\n        context.lineTo(points[n].end.x, points[n].end.y);\n        context.lineTo(points[i].end.x, points[i].end.y);\n        context.fillStyle = shadowColor;\n        context.fill();\n    }\n}\n", "import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LightGradient {\n    constructor() {\n        this.start = new OptionsColor();\n        this.stop = new OptionsColor();\n        this.start.value = \"#ffffff\";\n        this.stop.value = \"#000000\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.start = OptionsColor.create(this.start, data.start);\n        this.stop = OptionsColor.create(this.stop, data.stop);\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { LightGradient } from \"./LightGradient.js\";\nexport class LightArea {\n    constructor() {\n        this.gradient = new LightGradient();\n        this.radius = 1000;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.gradient.load(data.gradient);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n", "import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LightShadow {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.length = 2000;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { LightArea } from \"./LightArea.js\";\nimport { LightShadow } from \"./LightShadow.js\";\nexport class Light {\n    constructor() {\n        this.area = new LightArea();\n        this.shadow = new LightShadow();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.area.load(data.area);\n        this.shadow.load(data.shadow);\n    }\n}\n", "import { ExternalInteractorBase, isInArray, rangeColorToRgb, } from \"@tsparticles/engine\";\nimport { drawLight, lightMode } from \"./Utils.js\";\nimport { Light } from \"./Options/Classes/Light.js\";\nexport class ExternalLighter extends ExternalInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, interactivity = container.interactivity;\n        if (!options.interactivity.events.onHover.enable || interactivity.status !== \"pointermove\") {\n            return;\n        }\n        const mousePos = interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        container.canvas.draw(ctx => {\n            drawLight(container, ctx, mousePos);\n        });\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, interactivity = particle?.interactivity ?? container.actualOptions.interactivity, events = interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const res = isInArray(lightMode, events.onHover.mode);\n        if (res && interactivity.modes.light) {\n            const lightGradient = interactivity.modes.light.area.gradient;\n            container.canvas.mouseLight = {\n                start: rangeColorToRgb(this._engine, lightGradient.start),\n                stop: rangeColorToRgb(this._engine, lightGradient.stop),\n            };\n        }\n        return res;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.light) {\n            options.light = new Light();\n        }\n        for (const source of sources) {\n            options.light.load(source?.light);\n        }\n    }\n    reset() {\n    }\n}\n", "import { ParticlesInteractorBase, isInArray, rangeColorToRgb } from \"@tsparticles/engine\";\nimport { drawParticleShadow, lightMode } from \"./Utils.js\";\nexport class ParticlesLighter extends ParticlesInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(particle) {\n        const container = this.container, options = container.actualOptions, interactivity = container.interactivity;\n        if (!options.interactivity.events.onHover.enable || interactivity.status !== \"pointermove\") {\n            return;\n        }\n        const mousePos = interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        container.canvas.draw(ctx => {\n            drawParticleShadow(container, ctx, particle, mousePos);\n        });\n    }\n    isEnabled(particle) {\n        const container = this.container, interactivity = particle.interactivity ?? container.actualOptions.interactivity, mouse = container.interactivity.mouse, events = interactivity.events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        const res = isInArray(lightMode, events.onHover.mode);\n        if (res && interactivity.modes.light) {\n            const shadowOptions = interactivity.modes.light.shadow;\n            particle.lightShadow = rangeColorToRgb(this._engine, shadowOptions.color);\n        }\n        return res;\n    }\n    reset() {\n    }\n}\n", "import { ExternalLighter } from \"./ExternalLighter.js\";\nimport { ParticlesLighter } from \"./ParticlesLighter.js\";\nexport async function loadLightInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalLight\", container => {\n        return Promise.resolve(new ExternalLighter(container, engine));\n    }, refresh);\n    await engine.addInteractor(\"particlesLight\", container => {\n        return Promise.resolve(new ParticlesLighter(container, engine));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Light.js\";\nexport * from \"./Options/Classes/LightArea.js\";\nexport * from \"./Options/Classes/LightGradient.js\";\nexport * from \"./Options/Classes/LightShadow.js\";\nexport * from \"./Options/Interfaces/ILight.js\";\nexport * from \"./Options/Interfaces/ILightArea.js\";\nexport * from \"./Options/Interfaces/ILightGradient.js\";\nexport * from \"./Options/Interfaces/ILightShadow.js\";\n", "import { isNull } from \"@tsparticles/engine\";\nexport class MotionReduce {\n    constructor() {\n        this.factor = 4;\n        this.value = true;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { MotionReduce } from \"./MotionReduce.js\";\nexport class Motion {\n    constructor() {\n        this.disable = false;\n        this.reduce = new MotionReduce();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.disable !== undefined) {\n            this.disable = data.disable;\n        }\n        this.reduce.load(data.reduce);\n    }\n}\n", "import { safeMatchMedia } from \"@tsparticles/engine\";\nconst defaultFactor = 1, defaultReduce = 0, identity = 1;\nexport class MotionInstance {\n    constructor(container, engine) {\n        this._handleMotionChange = mediaQuery => {\n            const container = this._container, motion = container.actualOptions.motion;\n            if (!motion) {\n                return;\n            }\n            if (mediaQuery.matches) {\n                if (motion.disable) {\n                    container.retina.reduceFactor = defaultReduce;\n                }\n                else {\n                    container.retina.reduceFactor = motion.reduce.value ? identity / motion.reduce.factor : defaultFactor;\n                }\n            }\n            else {\n                container.retina.reduceFactor = 1;\n            }\n        };\n        this._container = container;\n        this._engine = engine;\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions.motion;\n        if (!(options && (options.disable || options.reduce.value))) {\n            container.retina.reduceFactor = 1;\n            return;\n        }\n        const mediaQuery = safeMatchMedia(\"(prefers-reduced-motion: reduce)\");\n        if (!mediaQuery) {\n            container.retina.reduceFactor = defaultFactor;\n            return;\n        }\n        this._handleMotionChange(mediaQuery);\n        const handleChange = () => {\n            void (async () => {\n                this._handleMotionChange(mediaQuery);\n                try {\n                    await container.refresh();\n                }\n                catch {\n                }\n            })();\n        };\n        if (mediaQuery.addEventListener !== undefined) {\n            mediaQuery.addEventListener(\"change\", handleChange);\n        }\n        else if (mediaQuery.addListener !== undefined) {\n            mediaQuery.addListener(handleChange);\n        }\n        await Promise.resolve();\n    }\n}\n", "import { Motion } from \"./Options/Classes/Motion.js\";\nimport { MotionInstance } from \"./MotionInstance.js\";\nexport class MotionPlugin {\n    constructor(engine) {\n        this.id = \"motion\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return Promise.resolve(new MotionInstance(container, this._engine));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin()) {\n            return;\n        }\n        let motionOptions = options.motion;\n        if (!motionOptions?.load) {\n            options.motion = motionOptions = new Motion();\n        }\n        motionOptions.load(source?.motion);\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n", "import { MotionPlugin } from \"./MotionPlugin.js\";\nexport async function loadMotionPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPlugin(new MotionPlugin(engine), refresh);\n}\n", "import { getLogger, } from \"@tsparticles/engine\";\nconst namedColors = new Map([\n    [\"aliceblue\", { r: 240, g: 248, b: 255 }],\n    [\"antiquewhite\", { r: 250, g: 235, b: 215 }],\n    [\"aqua\", { r: 0, g: 255, b: 255 }],\n    [\"aquamarine\", { r: 127, g: 255, b: 212 }],\n    [\"azure\", { r: 240, g: 255, b: 255 }],\n    [\"beige\", { r: 245, g: 245, b: 220 }],\n    [\"bisque\", { r: 255, g: 228, b: 196 }],\n    [\"black\", { r: 0, g: 0, b: 0 }],\n    [\"blanchedalmond\", { r: 255, g: 235, b: 205 }],\n    [\"blue\", { r: 0, g: 0, b: 255 }],\n    [\"blueviolet\", { r: 138, g: 43, b: 226 }],\n    [\"brown\", { r: 165, g: 42, b: 42 }],\n    [\"burlywood\", { r: 222, g: 184, b: 135 }],\n    [\"cadetblue\", { r: 95, g: 158, b: 160 }],\n    [\"chartreuse\", { r: 127, g: 255, b: 0 }],\n    [\"chocolate\", { r: 210, g: 105, b: 30 }],\n    [\"coral\", { r: 255, g: 127, b: 80 }],\n    [\"cornflowerblue\", { r: 100, g: 149, b: 237 }],\n    [\"cornsilk\", { r: 255, g: 248, b: 220 }],\n    [\"crimson\", { r: 220, g: 20, b: 60 }],\n    [\"cyan\", { r: 0, g: 255, b: 255 }],\n    [\"darkblue\", { r: 0, g: 0, b: 139 }],\n    [\"darkcyan\", { r: 0, g: 139, b: 139 }],\n    [\"darkgoldenrod\", { r: 184, g: 134, b: 11 }],\n    [\"darkgray\", { r: 169, g: 169, b: 169 }],\n    [\"darkgreen\", { r: 0, g: 100, b: 0 }],\n    [\"darkgrey\", { r: 169, g: 169, b: 169 }],\n    [\"darkkhaki\", { r: 189, g: 183, b: 107 }],\n    [\"darkmagenta\", { r: 139, g: 0, b: 139 }],\n    [\"darkolivegreen\", { r: 85, g: 107, b: 47 }],\n    [\"darkorange\", { r: 255, g: 140, b: 0 }],\n    [\"darkorchid\", { r: 153, g: 50, b: 204 }],\n    [\"darkred\", { r: 139, g: 0, b: 0 }],\n    [\"darksalmon\", { r: 233, g: 150, b: 122 }],\n    [\"darkseagreen\", { r: 143, g: 188, b: 143 }],\n    [\"darkslateblue\", { r: 72, g: 61, b: 139 }],\n    [\"darkslategray\", { r: 47, g: 79, b: 79 }],\n    [\"darkslategrey\", { r: 47, g: 79, b: 79 }],\n    [\"darkturquoise\", { r: 0, g: 206, b: 209 }],\n    [\"darkviolet\", { r: 148, g: 0, b: 211 }],\n    [\"deeppink\", { r: 255, g: 20, b: 147 }],\n    [\"deepskyblue\", { r: 0, g: 191, b: 255 }],\n    [\"dimgray\", { r: 105, g: 105, b: 105 }],\n    [\"dimgrey\", { r: 105, g: 105, b: 105 }],\n    [\"dodgerblue\", { r: 30, g: 144, b: 255 }],\n    [\"firebrick\", { r: 178, g: 34, b: 34 }],\n    [\"floralwhite\", { r: 255, g: 250, b: 240 }],\n    [\"forestgreen\", { r: 34, g: 139, b: 34 }],\n    [\"fuchsia\", { r: 255, g: 0, b: 255 }],\n    [\"gainsboro\", { r: 220, g: 220, b: 220 }],\n    [\"ghostwhite\", { r: 248, g: 248, b: 255 }],\n    [\"gold\", { r: 255, g: 215, b: 0 }],\n    [\"goldenrod\", { r: 218, g: 165, b: 32 }],\n    [\"gray\", { r: 128, g: 128, b: 128 }],\n    [\"green\", { r: 0, g: 128, b: 0 }],\n    [\"greenyellow\", { r: 173, g: 255, b: 47 }],\n    [\"grey\", { r: 128, g: 128, b: 128 }],\n    [\"honeydew\", { r: 240, g: 255, b: 240 }],\n    [\"hotpink\", { r: 255, g: 105, b: 180 }],\n    [\"indianred\", { r: 205, g: 92, b: 92 }],\n    [\"indigo\", { r: 75, g: 0, b: 130 }],\n    [\"ivory\", { r: 255, g: 255, b: 240 }],\n    [\"khaki\", { r: 240, g: 230, b: 140 }],\n    [\"lavender\", { r: 230, g: 230, b: 250 }],\n    [\"lavenderblush\", { r: 255, g: 240, b: 245 }],\n    [\"lawngreen\", { r: 124, g: 252, b: 0 }],\n    [\"lemonchiffon\", { r: 255, g: 250, b: 205 }],\n    [\"lightblue\", { r: 173, g: 216, b: 230 }],\n    [\"lightcoral\", { r: 240, g: 128, b: 128 }],\n    [\"lightcyan\", { r: 224, g: 255, b: 255 }],\n    [\"lightgoldenrodyellow\", { r: 250, g: 250, b: 210 }],\n    [\"lightgray\", { r: 211, g: 211, b: 211 }],\n    [\"lightgreen\", { r: 144, g: 238, b: 144 }],\n    [\"lightgrey\", { r: 211, g: 211, b: 211 }],\n    [\"lightpink\", { r: 255, g: 182, b: 193 }],\n    [\"lightsalmon\", { r: 255, g: 160, b: 122 }],\n    [\"lightseagreen\", { r: 32, g: 178, b: 170 }],\n    [\"lightskyblue\", { r: 135, g: 206, b: 250 }],\n    [\"lightslategray\", { r: 119, g: 136, b: 153 }],\n    [\"lightslategrey\", { r: 119, g: 136, b: 153 }],\n    [\"lightsteelblue\", { r: 176, g: 196, b: 222 }],\n    [\"lightyellow\", { r: 255, g: 255, b: 224 }],\n    [\"lime\", { r: 0, g: 255, b: 0 }],\n    [\"limegreen\", { r: 50, g: 205, b: 50 }],\n    [\"linen\", { r: 250, g: 240, b: 230 }],\n    [\"magenta\", { r: 255, g: 0, b: 255 }],\n    [\"maroon\", { r: 128, g: 0, b: 0 }],\n    [\"mediumaquamarine\", { r: 102, g: 205, b: 170 }],\n    [\"mediumblue\", { r: 0, g: 0, b: 205 }],\n    [\"mediumorchid\", { r: 186, g: 85, b: 211 }],\n    [\"mediumpurple\", { r: 147, g: 112, b: 219 }],\n    [\"mediumseagreen\", { r: 60, g: 179, b: 113 }],\n    [\"mediumslateblue\", { r: 123, g: 104, b: 238 }],\n    [\"mediumspringgreen\", { r: 0, g: 250, b: 154 }],\n    [\"mediumturquoise\", { r: 72, g: 209, b: 204 }],\n    [\"mediumvioletred\", { r: 199, g: 21, b: 133 }],\n    [\"midnightblue\", { r: 25, g: 25, b: 112 }],\n    [\"mintcream\", { r: 245, g: 255, b: 250 }],\n    [\"mistyrose\", { r: 255, g: 228, b: 225 }],\n    [\"moccasin\", { r: 255, g: 228, b: 181 }],\n    [\"navajowhite\", { r: 255, g: 222, b: 173 }],\n    [\"navy\", { r: 0, g: 0, b: 128 }],\n    [\"oldlace\", { r: 253, g: 245, b: 230 }],\n    [\"olive\", { r: 128, g: 128, b: 0 }],\n    [\"olivedrab\", { r: 107, g: 142, b: 35 }],\n    [\"orange\", { r: 255, g: 165, b: 0 }],\n    [\"orangered\", { r: 255, g: 69, b: 0 }],\n    [\"orchid\", { r: 218, g: 112, b: 214 }],\n    [\"palegoldenrod\", { r: 238, g: 232, b: 170 }],\n    [\"palegreen\", { r: 152, g: 251, b: 152 }],\n    [\"paleturquoise\", { r: 175, g: 238, b: 238 }],\n    [\"palevioletred\", { r: 219, g: 112, b: 147 }],\n    [\"papayawhip\", { r: 255, g: 239, b: 213 }],\n    [\"peachpuff\", { r: 255, g: 218, b: 185 }],\n    [\"peru\", { r: 205, g: 133, b: 63 }],\n    [\"pink\", { r: 255, g: 192, b: 203 }],\n    [\"plum\", { r: 221, g: 160, b: 221 }],\n    [\"powderblue\", { r: 176, g: 224, b: 230 }],\n    [\"purple\", { r: 128, g: 0, b: 128 }],\n    [\"rebeccapurple\", { r: 102, g: 51, b: 153 }],\n    [\"red\", { r: 255, g: 0, b: 0 }],\n    [\"rosybrown\", { r: 188, g: 143, b: 143 }],\n    [\"royalblue\", { r: 65, g: 105, b: 225 }],\n    [\"saddlebrown\", { r: 139, g: 69, b: 19 }],\n    [\"salmon\", { r: 250, g: 128, b: 114 }],\n    [\"sandybrown\", { r: 244, g: 164, b: 96 }],\n    [\"seagreen\", { r: 46, g: 139, b: 87 }],\n    [\"seashell\", { r: 255, g: 245, b: 238 }],\n    [\"sienna\", { r: 160, g: 82, b: 45 }],\n    [\"silver\", { r: 192, g: 192, b: 192 }],\n    [\"skyblue\", { r: 135, g: 206, b: 235 }],\n    [\"slateblue\", { r: 106, g: 90, b: 205 }],\n    [\"slategray\", { r: 112, g: 128, b: 144 }],\n    [\"slategrey\", { r: 112, g: 128, b: 144 }],\n    [\"snow\", { r: 255, g: 250, b: 250 }],\n    [\"springgreen\", { r: 0, g: 255, b: 127 }],\n    [\"steelblue\", { r: 70, g: 130, b: 180 }],\n    [\"tan\", { r: 210, g: 180, b: 140 }],\n    [\"teal\", { r: 0, g: 128, b: 128 }],\n    [\"thistle\", { r: 216, g: 191, b: 216 }],\n    [\"tomato\", { r: 255, g: 99, b: 71 }],\n    [\"turquoise\", { r: 64, g: 224, b: 208 }],\n    [\"violet\", { r: 238, g: 130, b: 238 }],\n    [\"wheat\", { r: 245, g: 222, b: 179 }],\n    [\"white\", { r: 255, g: 255, b: 255 }],\n    [\"whitesmoke\", { r: 245, g: 245, b: 245 }],\n    [\"yellow\", { r: 255, g: 255, b: 0 }],\n    [\"yellowgreen\", { r: 154, g: 205, b: 50 }],\n]);\nexport class NamedColorManager {\n    constructor() {\n        this.key = \"named\";\n        this.stringPrefix = \"\";\n    }\n    handleColor(color) {\n        return this._parseString(color.value);\n    }\n    handleRangeColor(color) {\n        return this._parseString(color.value);\n    }\n    parseString(input) {\n        return this._parseString(input);\n    }\n    _parseString(input) {\n        if (!input || typeof input !== \"string\") {\n            return undefined;\n        }\n        const rgbColor = namedColors.get(input.toLowerCase());\n        if (!rgbColor) {\n            getLogger().error(\"Color not found\", input);\n            return undefined;\n        }\n        return { ...rgbColor, a: 255 };\n    }\n}\n", "import { NamedColorManager } from \"./NamedColorManager.js\";\nexport async function loadNamedColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new NamedColorManager(), refresh);\n}\n", "import { percentDenominator, } from \"@tsparticles/engine\";\nconst rgbFactor = 255, fullDegree = 360;\nexport function lchToRgb(lch) {\n    const l = lch.l / percentDenominator, c = lch.c, h = lch.h / fullDegree, result = { r: 0, g: 0, b: 0 };\n    result.r = Math.floor(l * rgbFactor);\n    result.g = Math.floor(c * rgbFactor);\n    result.b = Math.floor(h * rgbFactor);\n    return result;\n}\nexport function lchaToRgba(lcha) {\n    return {\n        a: lcha.a,\n        ...lchToRgb(lcha),\n    };\n}\nexport function oklchToRgb(oklch) {\n    const l = oklch.l / percentDenominator, c = oklch.c / percentDenominator, h = oklch.h / fullDegree, result = { r: 0, g: 0, b: 0 };\n    result.r = Math.floor(l * rgbFactor);\n    result.g = Math.floor(c * rgbFactor);\n    result.b = Math.floor(h * rgbFactor);\n    return result;\n}\nexport function oklchaToRgba(oklcha) {\n    return {\n        a: oklcha.a,\n        ...oklchToRgb(oklcha),\n    };\n}\nexport function getStyleFromOklch(color, opacity) {\n    const { l, c, h } = color, alpha = opacity !== undefined ? `, ${opacity}` : \"\";\n    return `oklch(${l}%, ${c}%, ${h}°${alpha})`;\n}\n", "import { getRangeValue, parseAlpha, } from \"@tsparticles/engine\";\nimport { lchToRgb, lchaToRgba } from \"./utils.js\";\nexport class LchColorManager {\n    constructor() {\n        this.key = \"color\";\n        this.stringPrefix = \"lch\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, lchColor = colorValue.lch ?? color.value;\n        if (lchColor.l !== undefined && lchColor.c !== undefined && lchColor.h !== undefined) {\n            return lchToRgb(lchColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, lchColor = colorValue.lch ?? color.value;\n        if (lchColor.l !== undefined && lchColor.c !== undefined && lchColor.h !== undefined) {\n            return lchToRgb({\n                l: getRangeValue(lchColor.l),\n                c: getRangeValue(lchColor.c),\n                h: getRangeValue(lchColor.h),\n            });\n        }\n    }\n    parseString(input) {\n        const isLch = input.startsWith(\"lch\");\n        if (!isLch) {\n            return;\n        }\n        const regex = /lch\\(\\s*(\\d+(\\.\\d+)?)%\\s+(\\d+(\\.\\d+)?)\\s+(\\d+(\\.\\d+)?)(?:\\s*\\/\\s*(0|1|0?\\.\\d+|\\d{1,3}%))?\\s*\\)/i, result = regex.exec(input), indexes = {\n            l: 1,\n            c: 3,\n            h: 5,\n            a: 7,\n        }, defaultAlpha = 1;\n        return result\n            ? lchaToRgba({\n                a: result[indexes.a] ? parseAlpha(result[indexes.a]) : defaultAlpha,\n                c: parseFloat(result[indexes.c]),\n                h: parseFloat(result[indexes.h]),\n                l: parseFloat(result[indexes.l]),\n            })\n            : undefined;\n    }\n}\n", "import { getRangeValue, parseAlpha, } from \"@tsparticles/engine\";\nimport { oklchToRgb, oklchaToRgba } from \"./utils.js\";\nexport class OklchColorManager {\n    constructor() {\n        this.key = \"color\";\n        this.stringPrefix = \"oklch\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, oklchColor = colorValue.oklch ?? color.value;\n        if (oklchColor.l !== undefined && oklchColor.c !== undefined && oklchColor.h !== undefined) {\n            return oklchToRgb(oklchColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, oklchColor = colorValue.oklch ?? color.value;\n        if (oklchColor.l !== undefined && oklchColor.c !== undefined && oklchColor.h !== undefined) {\n            return oklchToRgb({\n                l: getRangeValue(oklchColor.l),\n                c: getRangeValue(oklchColor.c),\n                h: getRangeValue(oklchColor.h),\n            });\n        }\n    }\n    parseString(input) {\n        const isOklch = input.startsWith(\"oklch\");\n        if (!isOklch) {\n            return;\n        }\n        const regex = /oklch\\(\\s*(\\d+(\\.\\d+)?)%\\s+(\\d+(\\.\\d+)?)\\s+(\\d+(\\.\\d+)?)(°)?(?:\\s*\\/\\s*(0|1|0?\\.\\d+|\\d{1,3}%))?\\s*\\)/i, result = regex.exec(input), indexes = {\n            l: 1,\n            c: 3,\n            h: 5,\n            a: 7,\n        }, defaultAlpha = 1;\n        return result\n            ? oklchaToRgba({\n                a: result[indexes.a] ? parseAlpha(result[indexes.a]) : defaultAlpha,\n                c: parseFloat(result[indexes.c]),\n                h: parseFloat(result[indexes.h]),\n                l: parseFloat(result[indexes.l]),\n            })\n            : undefined;\n    }\n}\n", "import { LchColorManager } from \"./LchColorManager.js\";\nimport { OklchColorManager } from \"./OklchColorManager.js\";\nexport async function loadOklchColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new OklchColorManager(), refresh);\n    await engine.addColorManager(new LchColorManager(), refresh);\n}\n", "import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class OrbitRotation extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 45;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n    }\n}\n", "import { AnimationOptions, OptionsColor, isNull, setRangeValue, } from \"@tsparticles/engine\";\nimport { OrbitRotation } from \"./OrbitRotation.js\";\nexport class Orbit {\n    constructor() {\n        this.animation = new AnimationOptions();\n        this.enable = false;\n        this.opacity = 1;\n        this.rotation = new OrbitRotation();\n        this.width = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.animation.load(data.animation);\n        this.rotation.load(data.rotation);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.radius !== undefined) {\n            this.radius = setRangeValue(data.radius);\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n    }\n}\n", "export var OrbitType;\n(function (OrbitType) {\n    OrbitType[\"front\"] = \"front\";\n    OrbitType[\"back\"] = \"back\";\n})(OrbitType || (OrbitType = {}));\n", "import { degToRad, getStyleFromHsl } from \"@tsparticles/engine\";\nconst minWidth = 0, half = 0.5, double = 2;\nexport function drawEllipse(context, particle, fillColorValue, radius, opacity, width, rotation, start, end) {\n    if (width <= minWidth) {\n        return;\n    }\n    const pos = particle.getPosition();\n    if (fillColorValue) {\n        context.strokeStyle = getStyleFromHsl(fillColorValue, opacity);\n    }\n    context.lineWidth = width;\n    const rotationRadian = degToRad(rotation);\n    context.beginPath();\n    context.ellipse(pos.x, pos.y, radius * half, radius * double, rotationRadian, start, end);\n    context.stroke();\n}\n", "import { getRangeValue, rangeColorToHsl, } from \"@tsparticles/engine\";\nimport { Orbit } from \"./Options/Classes/Orbit.js\";\nimport { OrbitType } from \"./Enums.js\";\nimport { drawEllipse } from \"./Utils.js\";\nconst double = 2, half = 0.5, doublePI = Math.PI * double, defaultOrbitSpeed = 0, halfPI = Math.PI * half, piAndAHalf = Math.PI + halfPI, startAngle = 0, defaultOpacity = 1, defaultWidth = 1, defaultRotation = 0;\nexport class OrbitUpdater {\n    constructor(container, engine) {\n        this._engine = engine;\n        this._container = container;\n    }\n    afterDraw(particle) {\n        const orbitOptions = particle.options.orbit;\n        if (orbitOptions?.enable) {\n            this.drawOrbit(particle, OrbitType.front);\n        }\n    }\n    beforeDraw(particle) {\n        const orbitOptions = particle.options.orbit;\n        if (orbitOptions?.enable) {\n            this.drawOrbit(particle, OrbitType.back);\n        }\n    }\n    drawOrbit(particle, type) {\n        const container = this._container;\n        let start, end;\n        switch (type) {\n            case OrbitType.back:\n                start = halfPI;\n                end = piAndAHalf;\n                break;\n            case OrbitType.front:\n                start = piAndAHalf;\n                end = halfPI;\n                break;\n            default:\n                start = startAngle;\n                end = doublePI;\n        }\n        container.canvas.draw(ctx => {\n            drawEllipse(ctx, particle, particle.orbitColor ?? particle.getFillColor(), particle.retina.orbitRadius ?? container.retina.orbitRadius ?? particle.getRadius(), particle.orbitOpacity ?? defaultOpacity, particle.orbitWidth ?? defaultWidth, (particle.orbitRotation ?? defaultRotation) * container.retina.pixelRatio, start, end);\n        });\n    }\n    init(particle) {\n        const container = this._container, particlesOptions = particle.options, orbitOptions = particlesOptions.orbit;\n        if (!orbitOptions?.enable) {\n            return;\n        }\n        particle.orbitRotation = getRangeValue(orbitOptions.rotation.value);\n        particle.orbitColor = rangeColorToHsl(this._engine, orbitOptions.color);\n        particle.retina.orbitRadius =\n            orbitOptions.radius !== undefined\n                ? getRangeValue(orbitOptions.radius) * container.retina.pixelRatio\n                : undefined;\n        container.retina.orbitRadius = particle.retina.orbitRadius;\n        particle.orbitAnimationSpeed = orbitOptions.animation.enable\n            ? getRangeValue(orbitOptions.animation.speed)\n            : defaultOrbitSpeed;\n        particle.orbitWidth = getRangeValue(orbitOptions.width);\n        particle.orbitOpacity = getRangeValue(orbitOptions.opacity);\n    }\n    isEnabled(particle) {\n        const orbitAnimations = particle.options.orbit?.animation;\n        return !particle.destroyed && !particle.spawning && !!orbitAnimations?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.orbit) {\n            options.orbit = new Orbit();\n        }\n        for (const source of sources) {\n            options.orbit.load(source?.orbit);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        if (particle.orbitRotation === undefined) {\n            particle.orbitRotation = defaultRotation;\n        }\n        particle.orbitRotation += (particle.orbitAnimationSpeed ?? defaultOrbitSpeed / doublePI) * delta.factor;\n    }\n}\n", "import { OrbitUpdater } from \"./OrbitUpdater.js\";\nexport async function loadOrbitUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"orbit\", container => {\n        return Promise.resolve(new OrbitUpdater(container, engine));\n    }, refresh);\n}\n", "import { ValueWithRandom, isNull, setRangeValue, } from \"@tsparticles/engine\";\nexport class ParticlesRepulse extends ValueWithRandom {\n    constructor() {\n        super();\n        this.enabled = false;\n        this.distance = 1;\n        this.duration = 1;\n        this.factor = 1;\n        this.speed = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enabled !== undefined) {\n            this.enabled = data.enabled;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        if (data.factor !== undefined) {\n            this.factor = setRangeValue(data.factor);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n", "import { ParticlesInteractorBase, Vector, clamp, getDistances, getRangeValue, } from \"@tsparticles/engine\";\nimport { ParticlesRepulse } from \"./Options/Classes/ParticlesRepulse.js\";\nconst minDistance = 0, identity = 1, squareExp = 2, minVelocity = 0;\nexport class Repulser extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1) {\n        const container = this.container;\n        if (!p1.repulse) {\n            const repulseOpt1 = p1.options.repulse;\n            if (!repulseOpt1) {\n                return;\n            }\n            p1.repulse = {\n                distance: getRangeValue(repulseOpt1.distance) * container.retina.pixelRatio,\n                speed: getRangeValue(repulseOpt1.speed),\n                factor: getRangeValue(repulseOpt1.factor),\n            };\n        }\n        const pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, p1.repulse.distance);\n        for (const p2 of query) {\n            if (p1 === p2 || p2.destroyed) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy, distance } = getDistances(pos2, pos1), velocity = p1.repulse.speed * p1.repulse.factor;\n            if (distance > minDistance) {\n                const repulseFactor = clamp((identity - Math.pow(distance / p1.repulse.distance, squareExp)) * velocity, minVelocity, velocity), normVec = Vector.create((dx / distance) * repulseFactor, (dy / distance) * repulseFactor);\n                p2.position.addTo(normVec);\n            }\n            else {\n                const velocityVec = Vector.create(velocity, velocity);\n                p2.position.addTo(velocityVec);\n            }\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.repulse?.enabled ?? false;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new ParticlesRepulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n", "import { Repulser } from \"./Repulser.js\";\nexport async function loadParticlesRepulseInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"particlesRepulse\", container => {\n        return Promise.resolve(new Repulser(container));\n    }, refresh);\n}\n", "export var SegmentType;\n(function (SegmentType) {\n    SegmentType[\"line\"] = \"line\";\n    SegmentType[\"bezier\"] = \"bezier\";\n    SegmentType[\"quadratic\"] = \"quadratic\";\n    SegmentType[\"arc\"] = \"arc\";\n    SegmentType[\"ellipse\"] = \"ellipse\";\n})(SegmentType || (SegmentType = {}));\n", "import { SegmentType } from \"./SegmentType.js\";\nexport function drawPath(ctx, radius, path) {\n    const firstIndex = 0, firstSegment = path.segments[firstIndex], firstValue = firstSegment.values[firstIndex];\n    ctx.moveTo(firstValue.x * radius, firstValue.y * radius);\n    for (const segment of path.segments) {\n        const value = segment.values[firstIndex], index2 = 1, index3 = 2, index4 = 3;\n        switch (segment.type) {\n            case SegmentType.line:\n                ctx.lineTo(value.x * radius, value.y * radius);\n                break;\n            case SegmentType.bezier:\n                ctx.bezierCurveTo(segment.values[index2].x * radius, segment.values[index2].y * radius, segment.values[index3].x * radius, segment.values[index3].y * radius, segment.values[index4].x * radius, segment.values[index4].y * radius);\n                break;\n            case SegmentType.quadratic:\n                ctx.quadraticCurveTo(segment.values[index2].x * radius, segment.values[index2].y * radius, segment.values[index3].x * radius, segment.values[index3].y * radius);\n                break;\n            case SegmentType.arc:\n                ctx.arc(value.x * radius, value.y * radius, segment.values[index2].x * radius, segment.values[index3].x, segment.values[index3].y);\n                break;\n            case SegmentType.ellipse:\n                ctx.ellipse(value.x * radius, value.y * radius, segment.values[index2].x * radius, segment.values[index2].y * radius, segment.values[index3].x, segment.values[index4].x, segment.values[index4].y);\n        }\n    }\n    if (!path.half) {\n        return;\n    }\n    const lengthOffset = 1, minLength = 0;\n    for (let i = path.segments.length - lengthOffset; i >= minLength; i--) {\n        const segment = path.segments[i], value = segment.values[firstIndex], index2 = 1, index3 = 2;\n        switch (segment.type) {\n            case SegmentType.line:\n                ctx.lineTo(value.x * -radius, value.y * radius);\n                break;\n            case SegmentType.bezier:\n                ctx.bezierCurveTo(-segment.values[index3].x * radius, segment.values[index3].y * radius, -segment.values[index2].x * radius, segment.values[index2].y * radius, value.x * radius, value.y * radius);\n                break;\n            case SegmentType.quadratic:\n                ctx.quadraticCurveTo(-segment.values[index2].x * radius, segment.values[index2].y * radius, -segment.values[index3].x * radius, segment.values[index3].y * radius);\n                break;\n            case SegmentType.arc:\n            case SegmentType.ellipse:\n            default:\n                break;\n        }\n    }\n}\n", "import { deepExtend } from \"@tsparticles/engine\";\nimport { drawPath } from \"./Utils.js\";\nexport class PathDrawer {\n    constructor() {\n        this.validTypes = [\"path\"];\n    }\n    draw(data) {\n        const { context, particle, radius } = data;\n        if (!particle.pathData) {\n            return;\n        }\n        drawPath(context, radius, particle.pathData);\n    }\n    particleInit(container, particle) {\n        const shape = particle.shapeData;\n        if (!shape) {\n            return;\n        }\n        particle.pathData = deepExtend({}, shape);\n    }\n}\n", "import { PathDrawer } from \"./PathDrawer.js\";\nexport async function loadPathShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new PathDrawer(), refresh);\n}\n", "export class Grad {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    dot2(x, y) {\n        return this.x * x + this.y * y;\n    }\n    dot3(x, y, z) {\n        return this.dot2(x, y) + this.z * z;\n    }\n}\n", "import { Grad } from \"./Grad.js\";\nexport class PerlinNoise {\n    constructor() {\n        this._grad3 = [\n            new Grad(1, 1, 0),\n            new Grad(-1, 1, 0),\n            new Grad(1, -1, 0),\n            new Grad(-1, -1, 0),\n            new Grad(1, 0, 1),\n            new Grad(-1, 0, 1),\n            new Grad(1, 0, -1),\n            new Grad(-1, 0, -1),\n            new Grad(0, 1, 1),\n            new Grad(0, -1, 1),\n            new Grad(0, 1, -1),\n            new Grad(0, -1, -1),\n        ];\n        this._p = [\n            151,\n            160,\n            137,\n            91,\n            90,\n            15,\n            131,\n            13,\n            201,\n            95,\n            96,\n            53,\n            194,\n            233,\n            7,\n            225,\n            140,\n            36,\n            103,\n            30,\n            69,\n            142,\n            8,\n            99,\n            37,\n            240,\n            21,\n            10,\n            23,\n            190,\n            6,\n            148,\n            247,\n            120,\n            234,\n            75,\n            0,\n            26,\n            197,\n            62,\n            94,\n            252,\n            219,\n            203,\n            117,\n            35,\n            11,\n            32,\n            57,\n            177,\n            33,\n            88,\n            237,\n            149,\n            56,\n            87,\n            174,\n            20,\n            125,\n            136,\n            171,\n            168,\n            68,\n            175,\n            74,\n            165,\n            71,\n            134,\n            139,\n            48,\n            27,\n            166,\n            77,\n            146,\n            158,\n            231,\n            83,\n            111,\n            229,\n            122,\n            60,\n            211,\n            133,\n            230,\n            220,\n            105,\n            92,\n            41,\n            55,\n            46,\n            245,\n            40,\n            244,\n            102,\n            143,\n            54,\n            65,\n            25,\n            63,\n            161,\n            1,\n            216,\n            80,\n            73,\n            209,\n            76,\n            132,\n            187,\n            208,\n            89,\n            18,\n            169,\n            200,\n            196,\n            135,\n            130,\n            116,\n            188,\n            159,\n            86,\n            164,\n            100,\n            109,\n            198,\n            173,\n            186,\n            3,\n            64,\n            52,\n            217,\n            226,\n            250,\n            124,\n            123,\n            5,\n            202,\n            38,\n            147,\n            118,\n            126,\n            255,\n            82,\n            85,\n            212,\n            207,\n            206,\n            59,\n            227,\n            47,\n            16,\n            58,\n            17,\n            182,\n            189,\n            28,\n            42,\n            223,\n            183,\n            170,\n            213,\n            119,\n            248,\n            152,\n            2,\n            44,\n            154,\n            163,\n            70,\n            221,\n            153,\n            101,\n            155,\n            167,\n            43,\n            172,\n            9,\n            129,\n            22,\n            39,\n            253,\n            19,\n            98,\n            108,\n            110,\n            79,\n            113,\n            224,\n            232,\n            178,\n            185,\n            112,\n            104,\n            218,\n            246,\n            97,\n            228,\n            251,\n            34,\n            242,\n            193,\n            238,\n            210,\n            144,\n            12,\n            191,\n            179,\n            162,\n            241,\n            81,\n            51,\n            145,\n            235,\n            249,\n            14,\n            239,\n            107,\n            49,\n            192,\n            214,\n            31,\n            181,\n            199,\n            106,\n            157,\n            184,\n            84,\n            204,\n            176,\n            115,\n            121,\n            50,\n            45,\n            127,\n            4,\n            150,\n            254,\n            138,\n            236,\n            205,\n            93,\n            222,\n            114,\n            67,\n            29,\n            24,\n            72,\n            243,\n            141,\n            128,\n            195,\n            78,\n            66,\n            215,\n            61,\n            156,\n            180,\n        ];\n        this._gradP = new Array(512);\n        this._perm = new Array(512);\n    }\n    noise2d(x, y) {\n        const { _gradP, _perm } = this;\n        let X = Math.floor(x), Y = Math.floor(y);\n        x = x - X;\n        y = y - Y;\n        X = X & 255;\n        Y = Y & 255;\n        const n00 = _gradP[X + _perm[Y]].dot2(x, y), n01 = _gradP[X + _perm[Y + 1]].dot2(x, y - 1), n10 = _gradP[X + 1 + _perm[Y]].dot2(x - 1, y), n11 = _gradP[X + 1 + _perm[Y + 1]].dot2(x - 1, y - 1);\n        const u = this._fade(x);\n        return this._lerp(this._lerp(n00, n10, u), this._lerp(n01, n11, u), this._fade(y));\n    }\n    noise3d(x, y, z) {\n        const { _gradP: gradP, _perm: perm } = this;\n        let X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);\n        x = x - X;\n        y = y - Y;\n        z = z - Z;\n        X = X & 255;\n        Y = Y & 255;\n        Z = Z & 255;\n        const n000 = gradP[X + perm[Y + perm[Z]]].dot3(x, y, z), n001 = gradP[X + perm[Y + perm[Z + 1]]].dot3(x, y, z - 1), n010 = gradP[X + perm[Y + 1 + perm[Z]]].dot3(x, y - 1, z), n011 = gradP[X + perm[Y + 1 + perm[Z + 1]]].dot3(x, y - 1, z - 1), n100 = gradP[X + 1 + perm[Y + perm[Z]]].dot3(x - 1, y, z), n101 = gradP[X + 1 + perm[Y + perm[Z + 1]]].dot3(x - 1, y, z - 1), n110 = gradP[X + 1 + perm[Y + 1 + perm[Z]]].dot3(x - 1, y - 1, z), n111 = gradP[X + 1 + perm[Y + 1 + perm[Z + 1]]].dot3(x - 1, y - 1, z - 1), u = this._fade(x), v = this._fade(y), w = this._fade(z);\n        return this._lerp(this._lerp(this._lerp(n000, n100, u), this._lerp(n001, n101, u), w), this._lerp(this._lerp(n010, n110, u), this._lerp(n011, n111, u), w), v);\n    }\n    seed(inputSeed) {\n        const { _grad3: grad3, _gradP: gradP, _perm: perm, _p: p } = this;\n        let seed = inputSeed;\n        if (seed > 0 && seed < 1) {\n            seed *= 65536;\n        }\n        seed = Math.floor(seed);\n        if (seed < 256) {\n            seed |= seed << 8;\n        }\n        for (let i = 0; i < 256; i++) {\n            const v = i & 1 ? p[i] ^ (seed & 255) : p[i] ^ ((seed >> 8) & 255);\n            perm[i] = perm[i + 256] = v;\n            gradP[i] = gradP[i + 256] = grad3[v % 12];\n        }\n    }\n    _fade(t) {\n        return t * t * t * (t * (t * 6 - 15) + 10);\n    }\n    _lerp(a, b, t) {\n        return (1 - t) * a + t * b;\n    }\n}\n", "import { Vector, deepExtend, getRandom, } from \"@tsparticles/engine\";\nimport { PerlinNoise } from \"@tsparticles/perlin-noise\";\nconst double = 2, doublePI = Math.PI * double, defaultOptions = {\n    draw: false,\n    size: 20,\n    increment: 0.004,\n    columns: 0,\n    rows: 0,\n    width: 0,\n    height: 0,\n    factor: {\n        angle: 0.02,\n        length: 0.01,\n    },\n    offset: {\n        x: 40000,\n        y: 40000,\n    },\n};\nexport class PerlinNoiseGenerator {\n    constructor() {\n        this._calculateField = () => {\n            const { field, noiseGen, options } = this, lengthFactor = options.factor.length, angleFactor = options.factor.angle;\n            for (let x = 0; x < options.columns; x++) {\n                const column = field[x];\n                for (let y = 0; y < options.rows; y++) {\n                    const cell = column[y];\n                    cell.length = noiseGen.noise3d(x * lengthFactor + options.offset.x, y * lengthFactor + options.offset.y, this.noiseZ);\n                    cell.angle = noiseGen.noise3d(x * angleFactor, y * angleFactor, this.noiseZ) * doublePI;\n                }\n            }\n        };\n        this._drawField = ctx => {\n            const { field, options } = this;\n            for (let x = 0; x < options.columns; x++) {\n                const column = field[x];\n                for (let y = 0; y < options.rows; y++) {\n                    const cell = column[y], { angle, length } = cell;\n                    ctx.setTransform(1, 0, 0, 1, x * this.options.size, y * this.options.size);\n                    ctx.rotate(angle);\n                    ctx.strokeStyle = \"white\";\n                    ctx.beginPath();\n                    ctx.moveTo(0, 0);\n                    ctx.lineTo(0, this.options.size * length);\n                    ctx.stroke();\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\n                }\n            }\n        };\n        this._initField = () => {\n            const { columns, rows } = this.options;\n            this.field = new Array(columns);\n            for (let x = 0; x < columns; x++) {\n                this.field[x] = new Array(rows);\n                for (let y = 0; y < rows; y++) {\n                    this.field[x][y] = Vector.origin;\n                }\n            }\n        };\n        this.noiseGen = new PerlinNoise();\n        this.field = [];\n        this.noiseZ = 0;\n        this.options = deepExtend({}, defaultOptions);\n    }\n    generate(particle) {\n        const pos = particle.getPosition(), { size } = this.options, point = {\n            x: Math.max(Math.floor(pos.x / size), 0),\n            y: Math.max(Math.floor(pos.y / size), 0),\n        }, { field } = this;\n        return !field?.[point.x]?.[point.y] ? Vector.origin : field[point.x][point.y].copy();\n    }\n    init(container) {\n        this.container = container;\n        this._setup();\n    }\n    reset() {\n    }\n    update() {\n        if (!this.container) {\n            return;\n        }\n        this._calculateField();\n        this.noiseZ += this.options.increment;\n        if (this.options.draw) {\n            this.container.canvas.draw(ctx => this._drawField(ctx));\n        }\n    }\n    _resetField() {\n        const container = this.container;\n        if (!container) {\n            return;\n        }\n        const sourceOptions = container.actualOptions.particles.move.path.options, { options } = this;\n        options.size = sourceOptions.size > 0 ? sourceOptions.size : defaultOptions.size;\n        options.increment =\n            sourceOptions.increment > 0 ? sourceOptions.increment : defaultOptions.increment;\n        options.draw = !!sourceOptions.draw;\n        const offset = sourceOptions.offset;\n        options.offset.x = offset?.x ?? defaultOptions.offset.x;\n        options.offset.y = offset?.y ?? defaultOptions.offset.y;\n        const factor = sourceOptions.factor;\n        options.factor.angle = factor?.angle ?? defaultOptions.factor.angle;\n        options.factor.length = factor?.length ?? defaultOptions.factor.length;\n        options.width = container.canvas.size.width;\n        options.height = container.canvas.size.height;\n        this.options.seed = sourceOptions.seed;\n        this.noiseGen.seed(this.options.seed ?? getRandom());\n        options.columns = Math.floor(this.options.width / this.options.size) + 1;\n        options.rows = Math.floor(this.options.height / this.options.size) + 1;\n        this._initField();\n    }\n    _setup() {\n        this.noiseZ = 0;\n        this._resetField();\n        window.addEventListener(\"resize\", () => this._resetField());\n    }\n}\n", "import { PerlinNoiseGenerator } from \"./PerlinNoiseGenerator.js\";\nexport const perlinNoisePathName = \"perlinNoise\";\nexport async function loadPerlinNoisePath(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPathGenerator(perlinNoisePathName, new PerlinNoiseGenerator(), refresh);\n}\n", "import { isNull } from \"@tsparticles/engine\";\nexport class Poisson {\n    constructor() {\n        this.enable = false;\n        this.dimensions = 2;\n        this.radius = 0;\n        this.retries = 30;\n        this.steps = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.dimensions !== undefined) {\n            this.dimensions = data.dimensions;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n", "import { getDistance, getRandom } from \"@tsparticles/engine\";\nconst double = 2, doublePI = Math.PI * double;\nexport class PoissonDisc {\n    constructor(size, radius, retries, dimensions, firstPoint) {\n        this.size = { ...size };\n        this.radius = radius;\n        this.retries = retries;\n        this.dimensions = dimensions;\n        this.cellSize = Math.floor(this.radius / Math.sqrt(this.dimensions));\n        this.cols = Math.floor(this.size.width / this.cellSize);\n        this.rows = Math.floor(this.size.height / this.cellSize);\n        this.points = [];\n        this.active = [];\n        this.grid = [];\n        this.firstPoint = firstPoint ? { ...firstPoint } : undefined;\n        this.reset();\n    }\n    addPoint(inputPoint) {\n        const point = {\n            position: { ...inputPoint },\n            gridPosition: {\n                x: Math.floor(inputPoint.x / this.cellSize),\n                y: Math.floor(inputPoint.y / this.cellSize),\n            },\n        }, pointIndex = this.points.length;\n        this.points.push(point);\n        this.grid[point.gridPosition.y][point.gridPosition.x] = pointIndex;\n        this.active.push(pointIndex);\n    }\n    getRandom(min, max) {\n        return Math.floor(getRandom() * (max - min)) + min;\n    }\n    initialiseGrid() {\n        for (let y = 0; y <= this.rows; y++) {\n            this.grid[y] = [];\n            for (let x = 0; x <= this.cols; x++) {\n                this.grid[y][x] = -1;\n            }\n        }\n    }\n    reset() {\n        this.points = [];\n        this.active = [];\n        this.grid = [];\n        this.initialiseGrid();\n        if (this.firstPoint) {\n            this.addPoint(this.firstPoint);\n        }\n        else {\n            const minCoordinate = 0;\n            this.addPoint({\n                x: this.getRandom(minCoordinate, this.size.width),\n                y: this.getRandom(minCoordinate, this.size.height),\n            });\n        }\n    }\n    async run() {\n        this.reset();\n        const minCount = 0, step = 1;\n        while (this.active.length > minCount) {\n            await this.steps(step);\n        }\n    }\n    async steps(steps) {\n        const minCount = 0;\n        for (let i = 0; i < steps; i++) {\n            if (this.active.length <= minCount) {\n                continue;\n            }\n            await this._step();\n        }\n    }\n    _getNewPoint(currentPoint, tries) {\n        const minCoordinate = 0, gridMinValue = 0, maxNeighbourIndex = 1, newAngle = tries * (doublePI / this.retries), newDist = this.getRandom(this.radius, this.radius * double), offset = {\n            x: Math.cos(newAngle) * newDist,\n            y: Math.sin(newAngle) * newDist,\n        }, newPoint = {\n            x: Math.floor(currentPoint.position.x + offset.x),\n            y: Math.floor(currentPoint.position.y + offset.y),\n        }, newGridCoords = {\n            x: Math.floor(newPoint.x / this.cellSize),\n            y: Math.floor(newPoint.y / this.cellSize),\n        };\n        if (newPoint.x > minCoordinate &&\n            newPoint.x < this.size.width &&\n            newPoint.y > minCoordinate &&\n            newPoint.y < this.size.height) {\n            if (this.grid[newGridCoords.y][newGridCoords.x] < gridMinValue) {\n                for (let i = -1; i <= maxNeighbourIndex; i++) {\n                    for (let j = -1; j <= maxNeighbourIndex; j++) {\n                        const neighbourGrid = {\n                            x: newGridCoords.x + j,\n                            y: newGridCoords.y + i,\n                        };\n                        if (neighbourGrid.x >= minCoordinate &&\n                            neighbourGrid.y >= minCoordinate &&\n                            neighbourGrid.x < this.cols &&\n                            neighbourGrid.y < this.rows &&\n                            (neighbourGrid.x !== newGridCoords.x || neighbourGrid.y !== newGridCoords.y)) {\n                            if (this.grid[neighbourGrid.y][neighbourGrid.x] >= gridMinValue) {\n                                const neighbourIndex = this.grid[neighbourGrid.y][neighbourGrid.x], neighbour = this.points[neighbourIndex], dist = getDistance(newPoint, neighbour.position);\n                                if (dist < this.radius) {\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                return;\n            }\n        }\n        else {\n            return;\n        }\n        return newPoint;\n    }\n    async _step() {\n        const minCount = 0, randomActive = this.getRandom(minCount, this.active.length);\n        return new Promise(resolve => {\n            let foundNewPoint = false;\n            for (let tries = 0; tries < this.retries; tries++) {\n                const newPoint = this._getNewPoint(this.points[this.active[randomActive]], tries);\n                if (newPoint) {\n                    foundNewPoint = true;\n                    this.addPoint(newPoint);\n                    break;\n                }\n            }\n            if (!foundNewPoint) {\n                const deleteCount = 1;\n                this.active.splice(randomActive, deleteCount);\n            }\n            resolve();\n        });\n    }\n}\n", "import { getRangeMax } from \"@tsparticles/engine\";\nimport { PoissonDisc } from \"./PoissonDisc.js\";\nexport class PoissonInstance {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n        this._currentIndex = 0;\n    }\n    async init() {\n        await this._initData();\n    }\n    particlePosition(position) {\n        const container = this._container, options = container.actualOptions.poisson;\n        if (!this.poissonDisc || !(options?.enable ?? false) || this._currentIndex >= this.poissonDisc.points.length) {\n            return;\n        }\n        return position ?? this.poissonDisc?.points[this._currentIndex++]?.position;\n    }\n    resize() {\n        const container = this._container, options = container.actualOptions.poisson;\n        if (!(options?.enable ?? false)) {\n            return;\n        }\n        if (this.redrawTimeout) {\n            clearTimeout(this.redrawTimeout);\n        }\n        const timeout = 250;\n        this.redrawTimeout = window.setTimeout(() => {\n            void (async () => {\n                await this._initData();\n                await container.particles.redraw();\n            })();\n        }, timeout);\n    }\n    stop() {\n        delete this.poissonDisc;\n    }\n    async _initData() {\n        const container = this._container, poissonOptions = container.actualOptions.poisson, particlesOptions = container.actualOptions.particles, canvasSize = container.canvas.size, pixelRatio = container.retina.pixelRatio;\n        if (!poissonOptions?.enable) {\n            return;\n        }\n        this._currentIndex = 0;\n        this.poissonDisc = new PoissonDisc(canvasSize, poissonOptions.radius\n            ? poissonOptions.radius * pixelRatio\n            : Math.max(getRangeMax(particlesOptions.size.value) * pixelRatio, Math.sqrt((canvasSize.width * canvasSize.height) / particlesOptions.number.value)), poissonOptions.retries, poissonOptions.dimensions);\n        const noSteps = 0;\n        if (poissonOptions.steps > noSteps) {\n            await this.poissonDisc.steps(poissonOptions.steps);\n        }\n        else {\n            await this.poissonDisc.run();\n        }\n    }\n}\n", "import { Poisson } from \"./Options/Classes/Poisson.js\";\nimport { PoissonInstance } from \"./PoissonInstance.js\";\nexport class PoissonDiscPlugin {\n    constructor(engine) {\n        this.id = \"poisson\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return Promise.resolve(new PoissonInstance(container, this._engine));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        let poissonOptions = options.poisson;\n        if (poissonOptions?.load === undefined) {\n            options.poisson = poissonOptions = new Poisson();\n        }\n        poissonOptions.load(source?.poisson);\n    }\n    needsPlugin(options) {\n        return options?.poisson?.enable ?? false;\n    }\n}\n", "import { PoissonDiscPlugin } from \"./PoissonDiscPlugin.js\";\nexport async function loadPoissonDiscPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPlugin(new PoissonDiscPlugin(engine), refresh);\n}\n", "\"use strict\";\n(function () {\n    \"use strict\";\n    try {\n        if (typeof window === \"undefined\")\n            return;\n        if (!(\"SVGPathSeg\" in window)) {\n            window.SVGPathSeg = function (type, typeAsLetter, owningPathSegList) {\n                this.pathSegType = type;\n                this.pathSegTypeAsLetter = typeAsLetter;\n                this._owningPathSegList = owningPathSegList;\n            };\n            window.SVGPathSeg.prototype.classname = \"SVGPathSeg\";\n            window.SVGPathSeg.PATHSEG_UNKNOWN = 0;\n            window.SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n            window.SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n            window.SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n            window.SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n            window.SVGPathSeg.PATHSEG_LINETO_REL = 5;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n            window.SVGPathSeg.PATHSEG_ARC_ABS = 10;\n            window.SVGPathSeg.PATHSEG_ARC_REL = 11;\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\n            window.SVGPathSeg.prototype._segmentChanged = function () {\n                if (this._owningPathSegList)\n                    this._owningPathSegList.segmentChanged(this);\n            };\n            window.SVGPathSegClosePath = function (owningPathSegList) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n            };\n            window.SVGPathSegClosePath.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegClosePath.prototype.toString = function () {\n                return \"[object SVGPathSegClosePath]\";\n            };\n            window.SVGPathSegClosePath.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter;\n            };\n            window.SVGPathSegClosePath.prototype.clone = function () {\n                return new window.SVGPathSegClosePath(undefined);\n            };\n            window.SVGPathSegMovetoAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegMovetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegMovetoAbs.prototype.toString = function () {\n                return \"[object SVGPathSegMovetoAbs]\";\n            };\n            window.SVGPathSegMovetoAbs.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._x} ${this._y}`;\n            };\n            window.SVGPathSegMovetoAbs.prototype.clone = function () {\n                return new window.SVGPathSegMovetoAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegMovetoRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegMovetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegMovetoRel.prototype.toString = function () {\n                return \"[object SVGPathSegMovetoRel]\";\n            };\n            window.SVGPathSegMovetoRel.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._x} ${this._y}`;\n            };\n            window.SVGPathSegMovetoRel.prototype.clone = function () {\n                return new window.SVGPathSegMovetoRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegLinetoAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegLinetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoAbs]\";\n            };\n            window.SVGPathSegLinetoAbs.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._x} ${this._y}`;\n            };\n            window.SVGPathSegLinetoAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegLinetoRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegLinetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoRel]\";\n            };\n            window.SVGPathSegLinetoRel.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._x} ${this._y}`;\n            };\n            window.SVGPathSegLinetoRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegCurvetoCubicAbs = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicAbs]\";\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter}  ${this._x1} ${this._y1} ${this._x2} ${this._y2} ${this._x} ${this._y}`;\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x1\", {\n                get: function () {\n                    return this._x1;\n                },\n                set: function (x1) {\n                    this._x1 = x1;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y1\", {\n                get: function () {\n                    return this._y1;\n                },\n                set: function (y1) {\n                    this._y1 = y1;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x2\", {\n                get: function () {\n                    return this._x2;\n                },\n                set: function (x2) {\n                    this._x2 = x2;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y2\", {\n                get: function () {\n                    return this._y2;\n                },\n                set: function (y2) {\n                    this._y2 = y2;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegCurvetoCubicRel = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicRel]\";\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._x1} ${this._y1} ${this._x2} ${this._y2} ${this._x} ${this._y}`;\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x1\", {\n                get: function () {\n                    return this._x1;\n                },\n                set: function (x1) {\n                    this._x1 = x1;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y1\", {\n                get: function () {\n                    return this._y1;\n                },\n                set: function (y1) {\n                    this._y1 = y1;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x2\", {\n                get: function () {\n                    return this._x2;\n                },\n                set: function (x2) {\n                    this._x2 = x2;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y2\", {\n                get: function () {\n                    return this._y2;\n                },\n                set: function (y2) {\n                    this._y2 = y2;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegCurvetoQuadraticAbs = function (owningPathSegList, x, y, x1, y1) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticAbs]\";\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._x1} ${this._y1} ${this._x} ${this._y}`;\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", {\n                get: function () {\n                    return this._x1;\n                },\n                set: function (x1) {\n                    this._x1 = x1;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", {\n                get: function () {\n                    return this._y1;\n                },\n                set: function (y1) {\n                    this._y1 = y1;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegCurvetoQuadraticRel = function (owningPathSegList, x, y, x1, y1) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticRel]\";\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._x1} ${this._y1} ${this._x} ${this._y}`;\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", {\n                get: function () {\n                    return this._x1;\n                },\n                set: function (x1) {\n                    this._x1 = x1;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", {\n                get: function () {\n                    return this._y1;\n                },\n                set: function (y1) {\n                    this._y1 = y1;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegArcAbs = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._r1 = r1;\n                this._r2 = r2;\n                this._angle = angle;\n                this._largeArcFlag = largeArcFlag;\n                this._sweepFlag = sweepFlag;\n            };\n            window.SVGPathSegArcAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegArcAbs.prototype.toString = function () {\n                return \"[object SVGPathSegArcAbs]\";\n            };\n            window.SVGPathSegArcAbs.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._r1} ${this._r2} ${this._angle} ${this._largeArcFlag ? \"1\" : \"0\"} ${this._sweepFlag ? \"1\" : \"0\"} ${this._x} ${this._y}`;\n            };\n            window.SVGPathSegArcAbs.prototype.clone = function () {\n                return new window.SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n            };\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r1\", {\n                get: function () {\n                    return this._r1;\n                },\n                set: function (r1) {\n                    this._r1 = r1;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r2\", {\n                get: function () {\n                    return this._r2;\n                },\n                set: function (r2) {\n                    this._r2 = r2;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"angle\", {\n                get: function () {\n                    return this._angle;\n                },\n                set: function (angle) {\n                    this._angle = angle;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"largeArcFlag\", {\n                get: function () {\n                    return this._largeArcFlag;\n                },\n                set: function (largeArcFlag) {\n                    this._largeArcFlag = largeArcFlag;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"sweepFlag\", {\n                get: function () {\n                    return this._sweepFlag;\n                },\n                set: function (sweepFlag) {\n                    this._sweepFlag = sweepFlag;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegArcRel = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._r1 = r1;\n                this._r2 = r2;\n                this._angle = angle;\n                this._largeArcFlag = largeArcFlag;\n                this._sweepFlag = sweepFlag;\n            };\n            window.SVGPathSegArcRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegArcRel.prototype.toString = function () {\n                return \"[object SVGPathSegArcRel]\";\n            };\n            window.SVGPathSegArcRel.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._r1} ${this._r2} ${this._angle} ${this._largeArcFlag ? \"1\" : \"0\"} ${this._sweepFlag ? \"1\" : \"0\"} ${this._x} ${this._y}`;\n            };\n            window.SVGPathSegArcRel.prototype.clone = function () {\n                return new window.SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n            };\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r1\", {\n                get: function () {\n                    return this._r1;\n                },\n                set: function (r1) {\n                    this._r1 = r1;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r2\", {\n                get: function () {\n                    return this._r2;\n                },\n                set: function (r2) {\n                    this._r2 = r2;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"angle\", {\n                get: function () {\n                    return this._angle;\n                },\n                set: function (angle) {\n                    this._angle = angle;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"largeArcFlag\", {\n                get: function () {\n                    return this._largeArcFlag;\n                },\n                set: function (largeArcFlag) {\n                    this._largeArcFlag = largeArcFlag;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"sweepFlag\", {\n                get: function () {\n                    return this._sweepFlag;\n                },\n                set: function (sweepFlag) {\n                    this._sweepFlag = sweepFlag;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegLinetoHorizontalAbs = function (owningPathSegList, x) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n                this._x = x;\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoHorizontalAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoHorizontalAbs]\";\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._x}`;\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, this._x);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalAbs.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegLinetoHorizontalRel = function (owningPathSegList, x) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n                this._x = x;\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoHorizontalRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoHorizontalRel]\";\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._x}`;\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, this._x);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalRel.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegLinetoVerticalAbs = function (owningPathSegList, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n                this._y = y;\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoVerticalAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoVerticalAbs]\";\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._y}`;\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoVerticalAbs.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegLinetoVerticalRel = function (owningPathSegList, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n                this._y = y;\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoVerticalRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoVerticalRel]\";\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._y}`;\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoVerticalRel(undefined, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoVerticalRel.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegCurvetoCubicSmoothAbs = function (owningPathSegList, x, y, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicSmoothAbs]\";\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._x2} ${this._y2} ${this._x} ${this._y}`;\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", {\n                get: function () {\n                    return this._x2;\n                },\n                set: function (x2) {\n                    this._x2 = x2;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", {\n                get: function () {\n                    return this._y2;\n                },\n                set: function (y2) {\n                    this._y2 = y2;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegCurvetoCubicSmoothRel = function (owningPathSegList, x, y, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicSmoothRel]\";\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._x2} ${this._y2} ${this._x} ${this._y}`;\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", {\n                get: function () {\n                    return this._x2;\n                },\n                set: function (x2) {\n                    this._x2 = x2;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", {\n                get: function () {\n                    return this._y2;\n                },\n                set: function (y2) {\n                    this._y2 = y2;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegCurvetoQuadraticSmoothAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\";\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._x} ${this._y}`;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegCurvetoQuadraticSmoothRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\";\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function () {\n                return `${this.pathSegTypeAsLetter} ${this._x} ${this._y}`;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", {\n                get: function () {\n                    return this._x;\n                },\n                set: function (x) {\n                    this._x = x;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", {\n                get: function () {\n                    return this._y;\n                },\n                set: function (y) {\n                    this._y = y;\n                    this._segmentChanged();\n                },\n                enumerable: true,\n            });\n            window.SVGPathElement.prototype.createSVGPathSegClosePath = function () {\n                return new window.SVGPathSegClosePath(undefined);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegMovetoAbs = function (x, y) {\n                return new window.SVGPathSegMovetoAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegMovetoRel = function (x, y) {\n                return new window.SVGPathSegMovetoRel(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoAbs = function (x, y) {\n                return new window.SVGPathSegLinetoAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoRel = function (x, y) {\n                return new window.SVGPathSegLinetoRel(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function (x, y, x1, y1, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function (x, y, x1, y1, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function (x, y, x1, y1) {\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function (x, y, x1, y1) {\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegArcAbs = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                return new window.SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegArcRel = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                return new window.SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function (x) {\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, x);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function (x) {\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, x);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function (y) {\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function (y) {\n                return new window.SVGPathSegLinetoVerticalRel(undefined, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function (x, y, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function (x, y, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function (x, y) {\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function (x, y) {\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y);\n            };\n            if (!(\"getPathSegAtLength\" in window.SVGPathElement.prototype)) {\n                window.SVGPathElement.prototype.getPathSegAtLength = function (distance) {\n                    if (distance === undefined || !isFinite(distance))\n                        throw \"Invalid arguments.\";\n                    const measurementElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                    measurementElement.setAttribute(\"d\", this.getAttribute(\"d\"));\n                    let lastPathSegment = measurementElement.pathSegList.numberOfItems - 1;\n                    if (lastPathSegment <= 0)\n                        return 0;\n                    do {\n                        measurementElement.pathSegList.removeItem(lastPathSegment);\n                        if (distance > measurementElement.getTotalLength())\n                            break;\n                        lastPathSegment--;\n                    } while (lastPathSegment > 0);\n                    return lastPathSegment;\n                };\n            }\n        }\n        if (!(\"SVGPathSegList\" in window) || !(\"appendItem\" in window.SVGPathSegList.prototype)) {\n            window.SVGPathSegList = function (pathElement) {\n                this._pathElement = pathElement;\n                this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n                this._mutationObserverConfig = { attributes: true, attributeFilter: [\"d\"] };\n                this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n            };\n            window.SVGPathSegList.prototype.classname = \"SVGPathSegList\";\n            Object.defineProperty(window.SVGPathSegList.prototype, \"numberOfItems\", {\n                get: function () {\n                    this._checkPathSynchronizedToList();\n                    return this._list.length;\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathSegList.prototype, \"length\", {\n                get: function () {\n                    this._checkPathSynchronizedToList();\n                    return this._list.length;\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathElement.prototype, \"pathSegList\", {\n                get: function () {\n                    if (!this._pathSegList)\n                        this._pathSegList = new window.SVGPathSegList(this);\n                    return this._pathSegList;\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathElement.prototype, \"normalizedPathSegList\", {\n                get: function () {\n                    return this.pathSegList;\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedPathSegList\", {\n                get: function () {\n                    return this.pathSegList;\n                },\n                enumerable: true,\n            });\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedNormalizedPathSegList\", {\n                get: function () {\n                    return this.pathSegList;\n                },\n                enumerable: true,\n            });\n            window.SVGPathSegList.prototype._checkPathSynchronizedToList = function () {\n                this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n            };\n            window.SVGPathSegList.prototype._updateListFromPathMutations = function (mutationRecords) {\n                if (!this._pathElement)\n                    return;\n                let hasPathMutations = false;\n                mutationRecords.forEach(function (record) {\n                    if (record.attributeName == \"d\")\n                        hasPathMutations = true;\n                });\n                if (hasPathMutations)\n                    this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n            };\n            window.SVGPathSegList.prototype._writeListToPath = function () {\n                this._pathElementMutationObserver.disconnect();\n                this._pathElement.setAttribute(\"d\", window.SVGPathSegList._pathSegArrayAsString(this._list));\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n            };\n            window.SVGPathSegList.prototype.segmentChanged = function () {\n                this._writeListToPath();\n            };\n            window.SVGPathSegList.prototype.clear = function () {\n                this._checkPathSynchronizedToList();\n                this._list.forEach(function (pathSeg) {\n                    pathSeg._owningPathSegList = null;\n                });\n                this._list = [];\n                this._writeListToPath();\n            };\n            window.SVGPathSegList.prototype.initialize = function (newItem) {\n                this._checkPathSynchronizedToList();\n                this._list = [newItem];\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n            window.SVGPathSegList.prototype._checkValidIndex = function (index) {\n                if (isNaN(index) || index < 0 || index >= this.numberOfItems)\n                    throw \"INDEX_SIZE_ERR\";\n            };\n            window.SVGPathSegList.prototype.getItem = function (index) {\n                this._checkPathSynchronizedToList();\n                this._checkValidIndex(index);\n                return this._list[index];\n            };\n            window.SVGPathSegList.prototype.insertItemBefore = function (newItem, index) {\n                this._checkPathSynchronizedToList();\n                if (index > this.numberOfItems)\n                    index = this.numberOfItems;\n                if (newItem._owningPathSegList) {\n                    newItem = newItem.clone();\n                }\n                this._list.splice(index, 0, newItem);\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n            window.SVGPathSegList.prototype.replaceItem = function (newItem, index) {\n                this._checkPathSynchronizedToList();\n                if (newItem._owningPathSegList) {\n                    newItem = newItem.clone();\n                }\n                this._checkValidIndex(index);\n                this._list[index] = newItem;\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n            window.SVGPathSegList.prototype.removeItem = function (index) {\n                this._checkPathSynchronizedToList();\n                this._checkValidIndex(index);\n                const item = this._list[index];\n                this._list.splice(index, 1);\n                this._writeListToPath();\n                return item;\n            };\n            window.SVGPathSegList.prototype.appendItem = function (newItem) {\n                this._checkPathSynchronizedToList();\n                if (newItem._owningPathSegList) {\n                    newItem = newItem.clone();\n                }\n                this._list.push(newItem);\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n            window.SVGPathSegList._pathSegArrayAsString = function (pathSegArray) {\n                let string = \"\";\n                let first = true;\n                pathSegArray.forEach(function (pathSeg) {\n                    if (first) {\n                        first = false;\n                        string += pathSeg._asPathString();\n                    }\n                    else {\n                        string += ` ${pathSeg._asPathString()}`;\n                    }\n                });\n                return string;\n            };\n            window.SVGPathSegList.prototype._parsePath = function (string) {\n                if (!string || !string.length)\n                    return [];\n                const owningPathSegList = this;\n                const Builder = function () {\n                    this.pathSegList = [];\n                };\n                Builder.prototype.appendSegment = function (pathSeg) {\n                    this.pathSegList.push(pathSeg);\n                };\n                const Source = function (string) {\n                    this._string = string;\n                    this._currentIndex = 0;\n                    this._endIndex = this._string.length;\n                    this._previousCommand = window.SVGPathSeg.PATHSEG_UNKNOWN;\n                    this._skipOptionalSpaces();\n                };\n                Source.prototype._isCurrentSpace = function () {\n                    const character = this._string[this._currentIndex];\n                    return (character <= \" \" &&\n                        (character == \" \" ||\n                            character == \"\\n\" ||\n                            character == \"\\t\" ||\n                            character == \"\\r\" ||\n                            character == \"\\f\"));\n                };\n                Source.prototype._skipOptionalSpaces = function () {\n                    while (this._currentIndex < this._endIndex && this._isCurrentSpace())\n                        this._currentIndex++;\n                    return this._currentIndex < this._endIndex;\n                };\n                Source.prototype._skipOptionalSpacesOrDelimiter = function () {\n                    if (this._currentIndex < this._endIndex &&\n                        !this._isCurrentSpace() &&\n                        this._string.charAt(this._currentIndex) != \",\")\n                        return false;\n                    if (this._skipOptionalSpaces()) {\n                        if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n                            this._currentIndex++;\n                            this._skipOptionalSpaces();\n                        }\n                    }\n                    return this._currentIndex < this._endIndex;\n                };\n                Source.prototype.hasMoreData = function () {\n                    return this._currentIndex < this._endIndex;\n                };\n                Source.prototype.peekSegmentType = function () {\n                    const lookahead = this._string[this._currentIndex];\n                    return this._pathSegTypeFromChar(lookahead);\n                };\n                Source.prototype._pathSegTypeFromChar = function (lookahead) {\n                    switch (lookahead) {\n                        case \"Z\":\n                        case \"z\":\n                            return window.SVGPathSeg.PATHSEG_CLOSEPATH;\n                        case \"M\":\n                            return window.SVGPathSeg.PATHSEG_MOVETO_ABS;\n                        case \"m\":\n                            return window.SVGPathSeg.PATHSEG_MOVETO_REL;\n                        case \"L\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                        case \"l\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                        case \"C\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n                        case \"c\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n                        case \"Q\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n                        case \"q\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n                        case \"A\":\n                            return window.SVGPathSeg.PATHSEG_ARC_ABS;\n                        case \"a\":\n                            return window.SVGPathSeg.PATHSEG_ARC_REL;\n                        case \"H\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n                        case \"h\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n                        case \"V\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n                        case \"v\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n                        case \"S\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n                        case \"s\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n                        case \"T\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n                        case \"t\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n                        default:\n                            return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                    }\n                };\n                Source.prototype._nextCommandHelper = function (lookahead, previousCommand) {\n                    if ((lookahead == \"+\" ||\n                        lookahead == \"-\" ||\n                        lookahead == \".\" ||\n                        (lookahead >= \"0\" && lookahead <= \"9\")) &&\n                        previousCommand != window.SVGPathSeg.PATHSEG_CLOSEPATH) {\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_ABS)\n                            return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_REL)\n                            return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                        return previousCommand;\n                    }\n                    return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                };\n                Source.prototype.initialCommandIsMoveTo = function () {\n                    if (!this.hasMoreData())\n                        return true;\n                    const command = this.peekSegmentType();\n                    return (command == window.SVGPathSeg.PATHSEG_MOVETO_ABS ||\n                        command == window.SVGPathSeg.PATHSEG_MOVETO_REL);\n                };\n                Source.prototype._parseNumber = function () {\n                    let exponent = 0;\n                    let integer = 0;\n                    let frac = 1;\n                    let decimal = 0;\n                    let sign = 1;\n                    let expsign = 1;\n                    const startIndex = this._currentIndex;\n                    this._skipOptionalSpaces();\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\")\n                        this._currentIndex++;\n                    else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n                        this._currentIndex++;\n                        sign = -1;\n                    }\n                    if (this._currentIndex == this._endIndex ||\n                        ((this._string.charAt(this._currentIndex) < \"0\" ||\n                            this._string.charAt(this._currentIndex) > \"9\") &&\n                            this._string.charAt(this._currentIndex) != \".\"))\n                        return undefined;\n                    const startIntPartIndex = this._currentIndex;\n                    while (this._currentIndex < this._endIndex &&\n                        this._string.charAt(this._currentIndex) >= \"0\" &&\n                        this._string.charAt(this._currentIndex) <= \"9\")\n                        this._currentIndex++;\n                    if (this._currentIndex != startIntPartIndex) {\n                        let scanIntPartIndex = this._currentIndex - 1;\n                        let multiplier = 1;\n                        while (scanIntPartIndex >= startIntPartIndex) {\n                            integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n                            multiplier *= 10;\n                        }\n                    }\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n                        this._currentIndex++;\n                        if (this._currentIndex >= this._endIndex ||\n                            this._string.charAt(this._currentIndex) < \"0\" ||\n                            this._string.charAt(this._currentIndex) > \"9\")\n                            return undefined;\n                        while (this._currentIndex < this._endIndex &&\n                            this._string.charAt(this._currentIndex) >= \"0\" &&\n                            this._string.charAt(this._currentIndex) <= \"9\") {\n                            frac *= 10;\n                            decimal += (this._string.charAt(this._currentIndex) - \"0\") / frac;\n                            this._currentIndex += 1;\n                        }\n                    }\n                    if (this._currentIndex != startIndex &&\n                        this._currentIndex + 1 < this._endIndex &&\n                        (this._string.charAt(this._currentIndex) == \"e\" ||\n                            this._string.charAt(this._currentIndex) == \"E\") &&\n                        this._string.charAt(this._currentIndex + 1) != \"x\" &&\n                        this._string.charAt(this._currentIndex + 1) != \"m\") {\n                        this._currentIndex++;\n                        if (this._string.charAt(this._currentIndex) == \"+\") {\n                            this._currentIndex++;\n                        }\n                        else if (this._string.charAt(this._currentIndex) == \"-\") {\n                            this._currentIndex++;\n                            expsign = -1;\n                        }\n                        if (this._currentIndex >= this._endIndex ||\n                            this._string.charAt(this._currentIndex) < \"0\" ||\n                            this._string.charAt(this._currentIndex) > \"9\")\n                            return undefined;\n                        while (this._currentIndex < this._endIndex &&\n                            this._string.charAt(this._currentIndex) >= \"0\" &&\n                            this._string.charAt(this._currentIndex) <= \"9\") {\n                            exponent *= 10;\n                            exponent += this._string.charAt(this._currentIndex) - \"0\";\n                            this._currentIndex++;\n                        }\n                    }\n                    let number = integer + decimal;\n                    number *= sign;\n                    if (exponent)\n                        number *= Math.pow(10, expsign * exponent);\n                    if (startIndex == this._currentIndex)\n                        return undefined;\n                    this._skipOptionalSpacesOrDelimiter();\n                    return number;\n                };\n                Source.prototype._parseArcFlag = function () {\n                    if (this._currentIndex >= this._endIndex)\n                        return undefined;\n                    let flag = false;\n                    const flagChar = this._string.charAt(this._currentIndex++);\n                    if (flagChar == \"0\")\n                        flag = false;\n                    else if (flagChar == \"1\")\n                        flag = true;\n                    else\n                        return undefined;\n                    this._skipOptionalSpacesOrDelimiter();\n                    return flag;\n                };\n                Source.prototype.parseSegment = function () {\n                    const lookahead = this._string[this._currentIndex];\n                    let command = this._pathSegTypeFromChar(lookahead);\n                    if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) {\n                        if (this._previousCommand == window.SVGPathSeg.PATHSEG_UNKNOWN)\n                            return null;\n                        command = this._nextCommandHelper(lookahead, this._previousCommand);\n                        if (command == window.SVGPathSeg.PATHSEG_UNKNOWN)\n                            return null;\n                    }\n                    else {\n                        this._currentIndex++;\n                    }\n                    this._previousCommand = command;\n                    let points;\n                    switch (command) {\n                        case window.SVGPathSeg.PATHSEG_MOVETO_REL:\n                            return new window.SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\n                            return new window.SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_REL:\n                            return new window.SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_ABS:\n                            return new window.SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                            return new window.SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                            return new window.SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                            return new window.SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                            return new window.SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_CLOSEPATH:\n                            this._skipOptionalSpaces();\n                            return new window.SVGPathSegClosePath(owningPathSegList);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                            points = {\n                                x1: this._parseNumber(),\n                                y1: this._parseNumber(),\n                                x2: this._parseNumber(),\n                                y2: this._parseNumber(),\n                                x: this._parseNumber(),\n                                y: this._parseNumber(),\n                            };\n                            return new window.SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                            points = {\n                                x1: this._parseNumber(),\n                                y1: this._parseNumber(),\n                                x2: this._parseNumber(),\n                                y2: this._parseNumber(),\n                                x: this._parseNumber(),\n                                y: this._parseNumber(),\n                            };\n                            return new window.SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                            points = {\n                                x2: this._parseNumber(),\n                                y2: this._parseNumber(),\n                                x: this._parseNumber(),\n                                y: this._parseNumber(),\n                            };\n                            return new window.SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                            points = {\n                                x2: this._parseNumber(),\n                                y2: this._parseNumber(),\n                                x: this._parseNumber(),\n                                y: this._parseNumber(),\n                            };\n                            return new window.SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                            points = {\n                                x1: this._parseNumber(),\n                                y1: this._parseNumber(),\n                                x: this._parseNumber(),\n                                y: this._parseNumber(),\n                            };\n                            return new window.SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                            points = {\n                                x1: this._parseNumber(),\n                                y1: this._parseNumber(),\n                                x: this._parseNumber(),\n                                y: this._parseNumber(),\n                            };\n                            return new window.SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                            return new window.SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                            return new window.SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_ARC_REL:\n                            points = {\n                                x1: this._parseNumber(),\n                                y1: this._parseNumber(),\n                                arcAngle: this._parseNumber(),\n                                arcLarge: this._parseArcFlag(),\n                                arcSweep: this._parseArcFlag(),\n                                x: this._parseNumber(),\n                                y: this._parseNumber(),\n                            };\n                            return new window.SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                        case window.SVGPathSeg.PATHSEG_ARC_ABS:\n                            points = {\n                                x1: this._parseNumber(),\n                                y1: this._parseNumber(),\n                                arcAngle: this._parseNumber(),\n                                arcLarge: this._parseArcFlag(),\n                                arcSweep: this._parseArcFlag(),\n                                x: this._parseNumber(),\n                                y: this._parseNumber(),\n                            };\n                            return new window.SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                        default:\n                            throw \"Unknown path seg type.\";\n                    }\n                };\n                const builder = new Builder();\n                const source = new Source(string);\n                if (!source.initialCommandIsMoveTo())\n                    return [];\n                while (source.hasMoreData()) {\n                    const pathSeg = source.parseSegment();\n                    if (!pathSeg)\n                        return [];\n                    builder.appendSegment(pathSeg);\n                }\n                return builder.pathSegList;\n            };\n        }\n    }\n    catch (e) {\n        console.warn(\"An error occurred in tsParticles pathseg polyfill. If the Polygon Mask is not working, please open an issue here: https://github.com/tsparticles/tsparticles\", e);\n    }\n})();\n", "import { OptionsColor, isNull, isString, stringToAlpha, } from \"@tsparticles/engine\";\nexport class PolygonMaskDrawStroke {\n    constructor(engine) {\n        this._engine = engine;\n        this.color = new OptionsColor();\n        this.width = 0.5;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (isString(this.color.value)) {\n            this.opacity = stringToAlpha(this._engine, this.color.value) ?? this.opacity;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { PolygonMaskDrawStroke } from \"./PolygonMaskDrawStroke.js\";\nexport class PolygonMaskDraw {\n    constructor(engine) {\n        this.enable = false;\n        this.stroke = new PolygonMaskDrawStroke(engine);\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const stroke = data.stroke;\n        this.stroke.load(stroke);\n    }\n}\n", "export var PolygonMaskInlineArrangement;\n(function (PolygonMaskInlineArrangement) {\n    PolygonMaskInlineArrangement[\"equidistant\"] = \"equidistant\";\n    PolygonMaskInlineArrangement[\"onePerPoint\"] = \"one-per-point\";\n    PolygonMaskInlineArrangement[\"perPoint\"] = \"per-point\";\n    PolygonMaskInlineArrangement[\"randomLength\"] = \"random-length\";\n    PolygonMaskInlineArrangement[\"randomPoint\"] = \"random-point\";\n})(PolygonMaskInlineArrangement || (PolygonMaskInlineArrangement = {}));\n", "import { isNull } from \"@tsparticles/engine\";\nimport { PolygonMaskInlineArrangement, } from \"../../Enums/PolygonMaskInlineArrangement.js\";\nexport class PolygonMaskInline {\n    constructor() {\n        this.arrangement = PolygonMaskInlineArrangement.onePerPoint;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.arrangement !== undefined) {\n            this.arrangement = data.arrangement;\n        }\n    }\n}\n", "import { isNull, } from \"@tsparticles/engine\";\nexport class PolygonMaskLocalSvg {\n    constructor() {\n        this.path = [];\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n        if (data.size !== undefined) {\n            if (data.size.width !== undefined) {\n                this.size.width = data.size.width;\n            }\n            if (data.size.height !== undefined) {\n                this.size.height = data.size.height;\n            }\n        }\n    }\n}\n", "export var PolygonMaskMoveType;\n(function (PolygonMaskMoveType) {\n    PolygonMaskMoveType[\"path\"] = \"path\";\n    PolygonMaskMoveType[\"radius\"] = \"radius\";\n})(PolygonMaskMoveType || (PolygonMaskMoveType = {}));\n", "import { isNull } from \"@tsparticles/engine\";\nimport { PolygonMaskMoveType } from \"../../Enums/PolygonMaskMoveType.js\";\nexport class PolygonMaskMove {\n    constructor() {\n        this.radius = 10;\n        this.type = PolygonMaskMoveType.path;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n", "export var PolygonMaskType;\n(function (PolygonMaskType) {\n    PolygonMaskType[\"inline\"] = \"inline\";\n    PolygonMaskType[\"inside\"] = \"inside\";\n    PolygonMaskType[\"outside\"] = \"outside\";\n    PolygonMaskType[\"none\"] = \"none\";\n})(PolygonMaskType || (PolygonMaskType = {}));\n", "import { deepExtend, isNull, isString, } from \"@tsparticles/engine\";\nimport { PolygonMaskDraw } from \"./PolygonMaskDraw.js\";\nimport { PolygonMaskInline } from \"./PolygonMaskInline.js\";\nimport { PolygonMaskLocalSvg } from \"./PolygonMaskLocalSvg.js\";\nimport { PolygonMaskMove } from \"./PolygonMaskMove.js\";\nimport { PolygonMaskType } from \"../../Enums/PolygonMaskType.js\";\nexport class PolygonMask {\n    constructor(engine) {\n        this.draw = new PolygonMaskDraw(engine);\n        this.enable = false;\n        this.inline = new PolygonMaskInline();\n        this.move = new PolygonMaskMove();\n        this.scale = 1;\n        this.type = PolygonMaskType.none;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.draw.load(data.draw);\n        this.inline.load(data.inline);\n        this.move.load(data.move);\n        if (data.scale !== undefined) {\n            this.scale = data.scale;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        else {\n            this.enable = this.type !== PolygonMaskType.none;\n        }\n        if (data.url !== undefined) {\n            this.url = data.url;\n        }\n        if (data.data !== undefined) {\n            if (isString(data.data)) {\n                this.data = data.data;\n            }\n            else {\n                this.data = new PolygonMaskLocalSvg();\n                this.data.load(data.data);\n            }\n        }\n        if (data.position !== undefined) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n", "import { Vector, getDistances, getStyleFromRgb, rangeColorToRgb, } from \"@tsparticles/engine\";\nconst squareExp = 2, inSegmentRange = {\n    min: 0,\n    max: 1,\n}, double = 2;\nexport function drawPolygonMask(engine, context, rawData, stroke) {\n    const color = rangeColorToRgb(engine, stroke.color);\n    if (!color) {\n        return;\n    }\n    const firstIndex = 0, firstItem = rawData[firstIndex];\n    context.beginPath();\n    context.moveTo(firstItem.x, firstItem.y);\n    for (const item of rawData) {\n        context.lineTo(item.x, item.y);\n    }\n    context.closePath();\n    context.strokeStyle = getStyleFromRgb(color);\n    context.lineWidth = stroke.width;\n    context.stroke();\n}\nexport function drawPolygonMaskPath(engine, context, path, stroke, position) {\n    const defaultTransform = {\n        a: 1,\n        b: 0,\n        c: 0,\n        d: 1,\n    };\n    context.setTransform(defaultTransform.a, defaultTransform.b, defaultTransform.c, defaultTransform.d, position.x, position.y);\n    const color = rangeColorToRgb(engine, stroke.color);\n    if (!color) {\n        return;\n    }\n    context.strokeStyle = getStyleFromRgb(color, stroke.opacity);\n    context.lineWidth = stroke.width;\n    context.stroke(path);\n    context.resetTransform();\n}\nexport function parsePaths(paths, scale, offset) {\n    const res = [], defaultCount = 0;\n    for (const path of paths) {\n        const segments = path.element.pathSegList, len = segments?.numberOfItems ?? defaultCount, p = {\n            x: 0,\n            y: 0,\n        };\n        for (let i = 0; i < len; i++) {\n            const segment = segments?.getItem(i), svgPathSeg = window.SVGPathSeg;\n            switch (segment?.pathSegType) {\n                case svgPathSeg.PATHSEG_MOVETO_ABS:\n                case svgPathSeg.PATHSEG_LINETO_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                case svgPathSeg.PATHSEG_ARC_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: {\n                    const absSeg = segment;\n                    p.x = absSeg.x;\n                    p.y = absSeg.y;\n                    break;\n                }\n                case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                    p.x = segment.x;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                    p.y = segment.y;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_REL:\n                case svgPathSeg.PATHSEG_MOVETO_REL:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                case svgPathSeg.PATHSEG_ARC_REL:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: {\n                    const relSeg = segment;\n                    p.x += relSeg.x;\n                    p.y += relSeg.y;\n                    break;\n                }\n                case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                    p.x += segment.x;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                    p.y += segment.y;\n                    break;\n                case svgPathSeg.PATHSEG_UNKNOWN:\n                case svgPathSeg.PATHSEG_CLOSEPATH:\n                    continue;\n            }\n            res.push({\n                x: p.x * scale + offset.x,\n                y: p.y * scale + offset.y,\n            });\n        }\n    }\n    return res;\n}\nexport function calcClosestPointOnSegment(s1, s2, pos) {\n    const { dx: dx1, dy: dy1 } = getDistances(pos, s1), { dx: dx2, dy: dy2 } = getDistances(s2, s1), t = (dx1 * dx2 + dy1 * dy2) / (dx2 ** squareExp + dy2 ** squareExp), res = {\n        x: s1.x + dx2 * t,\n        y: s1.y + dy2 * t,\n        isOnSegment: t >= inSegmentRange.min && t <= inSegmentRange.max,\n    };\n    if (t < inSegmentRange.min) {\n        res.x = s1.x;\n        res.y = s1.y;\n    }\n    else if (t > inSegmentRange.max) {\n        res.x = s2.x;\n        res.y = s2.y;\n    }\n    return res;\n}\nexport function segmentBounce(start, stop, velocity) {\n    const { dx, dy } = getDistances(start, stop), wallAngle = Math.atan2(dy, dx), wallNormal = Vector.create(Math.sin(wallAngle), -Math.cos(wallAngle)), d = double * (velocity.x * wallNormal.x + velocity.y * wallNormal.y);\n    wallNormal.multTo(d);\n    velocity.subFrom(wallNormal);\n}\n", "import { OutModeDirection, deepExtend, errorPrefix, getDistance, getDistances, getRandom, isArray, isString, itemFromArray, percentDenominator, } from \"@tsparticles/engine\";\nimport { calcClosestPointOnSegment, drawPolygonMask, drawPolygonMaskPath, parsePaths, segmentBounce } from \"./utils.js\";\nimport { PolygonMaskInlineArrangement } from \"./Enums/PolygonMaskInlineArrangement.js\";\nimport { PolygonMaskType } from \"./Enums/PolygonMaskType.js\";\nconst noPolygonDataLoaded = `${errorPrefix} No polygon data loaded.`, noPolygonFound = `${errorPrefix} No polygon found, you need to specify SVG url in config.`, origin = {\n    x: 0,\n    y: 0,\n}, half = 0.5, double = 2;\nexport class PolygonMaskInstance {\n    constructor(container, engine) {\n        this._checkInsidePolygon = position => {\n            const container = this._container, options = container.actualOptions.polygon;\n            if (!options?.enable || options.type === PolygonMaskType.none || options.type === PolygonMaskType.inline) {\n                return true;\n            }\n            if (!this.raw) {\n                throw new Error(noPolygonFound);\n            }\n            const canvasSize = container.canvas.size, x = position?.x ?? getRandom() * canvasSize.width, y = position?.y ?? getRandom() * canvasSize.height, indexOffset = 1;\n            let inside = false;\n            for (let i = 0, j = this.raw.length - indexOffset; i < this.raw.length; j = i++) {\n                const pi = this.raw[i], pj = this.raw[j], intersect = pi.y > y !== pj.y > y && x < ((pj.x - pi.x) * (y - pi.y)) / (pj.y - pi.y) + pi.x;\n                if (intersect) {\n                    inside = !inside;\n                }\n            }\n            if (options.type === PolygonMaskType.inside) {\n                return inside;\n            }\n            else {\n                return options.type === PolygonMaskType.outside ? !inside : false;\n            }\n        };\n        this._createPath2D = () => {\n            const container = this._container, options = container.actualOptions.polygon;\n            if (!options || !this.paths?.length) {\n                return;\n            }\n            for (const path of this.paths) {\n                const pathData = path.element?.getAttribute(\"d\");\n                if (pathData) {\n                    const path2d = new Path2D(pathData), matrix = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\").createSVGMatrix(), finalPath = new Path2D(), transform = matrix.scale(this._scale);\n                    if (finalPath.addPath) {\n                        finalPath.addPath(path2d, transform);\n                        path.path2d = finalPath;\n                    }\n                    else {\n                        delete path.path2d;\n                    }\n                }\n                else {\n                    delete path.path2d;\n                }\n                if (path.path2d ?? !this.raw) {\n                    continue;\n                }\n                path.path2d = new Path2D();\n                const firstIndex = 0, firstPoint = this.raw[firstIndex];\n                path.path2d.moveTo(firstPoint.x, firstPoint.y);\n                this.raw.forEach((pos, i) => {\n                    if (i > firstIndex) {\n                        path.path2d?.lineTo(pos.x, pos.y);\n                    }\n                });\n                path.path2d.closePath();\n            }\n        };\n        this._downloadSvgPath = async (svgUrl, force) => {\n            const options = this._container.actualOptions.polygon;\n            if (!options) {\n                return;\n            }\n            const url = svgUrl ?? options.url, forceDownload = force ?? false;\n            if (!url || (this.paths !== undefined && !forceDownload)) {\n                return this.raw;\n            }\n            const req = await fetch(url);\n            if (!req.ok) {\n                throw new Error(`${errorPrefix} occurred during polygon mask download`);\n            }\n            return this._parseSvgPath(await req.text(), force);\n        };\n        this._drawPoints = () => {\n            if (!this.raw) {\n                return;\n            }\n            for (const item of this.raw) {\n                void this._container.particles.addParticle({\n                    x: item.x,\n                    y: item.y,\n                });\n            }\n        };\n        this._getEquidistantPointByIndex = index => {\n            const container = this._container, options = container.actualOptions, polygonMaskOptions = options.polygon;\n            if (!polygonMaskOptions) {\n                return;\n            }\n            if (!this.raw?.length || !this.paths?.length) {\n                throw new Error(noPolygonDataLoaded);\n            }\n            let offset = 0, point;\n            const baseAccumulator = 0, totalLength = this.paths.reduce((tot, path) => tot + path.length, baseAccumulator), distance = totalLength / options.particles.number.value;\n            for (const path of this.paths) {\n                const pathDistance = distance * index - offset;\n                if (pathDistance <= path.length) {\n                    point = path.element.getPointAtLength(pathDistance);\n                    break;\n                }\n                else {\n                    offset += path.length;\n                }\n            }\n            const scale = this._scale;\n            return {\n                x: (point?.x ?? origin.x) * scale + (this.offset?.x ?? origin.x),\n                y: (point?.y ?? origin.y) * scale + (this.offset?.y ?? origin.y),\n            };\n        };\n        this._getPointByIndex = index => {\n            if (!this.raw?.length) {\n                throw new Error(noPolygonDataLoaded);\n            }\n            const coords = this.raw[index % this.raw.length];\n            return {\n                x: coords.x,\n                y: coords.y,\n            };\n        };\n        this._getRandomPoint = () => {\n            if (!this.raw?.length) {\n                throw new Error(noPolygonDataLoaded);\n            }\n            const coords = itemFromArray(this.raw);\n            return {\n                x: coords.x,\n                y: coords.y,\n            };\n        };\n        this._getRandomPointByLength = () => {\n            const container = this._container, options = container.actualOptions.polygon;\n            if (!options) {\n                return;\n            }\n            if (!this.raw?.length || !this.paths?.length) {\n                throw new Error(noPolygonDataLoaded);\n            }\n            const path = itemFromArray(this.paths), offset = 1, distance = Math.floor(getRandom() * path.length) + offset, point = path.element.getPointAtLength(distance), scale = this._scale;\n            return {\n                x: point.x * scale + (this.offset?.x ?? origin.x),\n                y: point.y * scale + (this.offset?.y ?? origin.y),\n            };\n        };\n        this._initRawData = async (force) => {\n            const options = this._container.actualOptions.polygon;\n            if (!options) {\n                return;\n            }\n            if (options.url) {\n                this.raw = await this._downloadSvgPath(options.url, force);\n            }\n            else if (options.data) {\n                const data = options.data;\n                let svg;\n                if (isString(data)) {\n                    svg = data;\n                }\n                else {\n                    const getPath = (p) => `<path d=\"${p}\" />`, path = isArray(data.path) ? data.path.map(getPath).join(\"\") : getPath(data.path);\n                    const namespaces = 'xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n                    svg = `<svg ${namespaces} width=\"${data.size.width}\" height=\"${data.size.height}\">${path}</svg>`;\n                }\n                this.raw = this._parseSvgPath(svg, force);\n            }\n            this._createPath2D();\n            this._engine.dispatchEvent(\"polygonMaskLoaded\", {\n                container: this._container,\n            });\n        };\n        this._parseSvgPath = (xml, force) => {\n            const forceDownload = force ?? false;\n            if (this.paths !== undefined && !forceDownload) {\n                return this.raw;\n            }\n            const container = this._container, options = container.actualOptions.polygon;\n            if (!options) {\n                return;\n            }\n            const parser = new DOMParser(), doc = parser.parseFromString(xml, \"image/svg+xml\"), firstIndex = 0, svg = doc.getElementsByTagName(\"svg\")[firstIndex];\n            let svgPaths = svg.getElementsByTagName(\"path\");\n            if (!svgPaths.length) {\n                svgPaths = doc.getElementsByTagName(\"path\");\n            }\n            this.paths = [];\n            for (let i = 0; i < svgPaths.length; i++) {\n                const path = svgPaths.item(i);\n                if (path) {\n                    this.paths.push({\n                        element: path,\n                        length: path.getTotalLength(),\n                    });\n                }\n            }\n            const scale = this._scale;\n            this.dimension.width = parseFloat(svg.getAttribute(\"width\") ?? \"0\") * scale;\n            this.dimension.height = parseFloat(svg.getAttribute(\"height\") ?? \"0\") * scale;\n            const position = options.position ?? {\n                x: 50,\n                y: 50,\n            }, canvasSize = container.canvas.size;\n            this.offset = {\n                x: (canvasSize.width * position.x) / percentDenominator - this.dimension.width * half,\n                y: (canvasSize.height * position.y) / percentDenominator - this.dimension.height * half,\n            };\n            return parsePaths(this.paths, scale, this.offset);\n        };\n        this._polygonBounce = (particle, delta, direction) => {\n            const options = this._container.actualOptions.polygon;\n            if (!this.raw || !options?.enable || direction !== OutModeDirection.top) {\n                return false;\n            }\n            if (options.type === PolygonMaskType.inside || options.type === PolygonMaskType.outside) {\n                let closest, dx, dy;\n                const pos = particle.getPosition(), radius = particle.getRadius(), offset = 1;\n                for (let i = 0, j = this.raw.length - offset; i < this.raw.length; j = i++) {\n                    const pi = this.raw[i], pj = this.raw[j];\n                    closest = calcClosestPointOnSegment(pi, pj, pos);\n                    const dist = getDistances(pos, closest);\n                    [dx, dy] = [dist.dx, dist.dy];\n                    if (dist.distance < radius) {\n                        segmentBounce(pi, pj, particle.velocity);\n                        return true;\n                    }\n                }\n                if (closest && dx !== undefined && dy !== undefined && !this._checkInsidePolygon(pos)) {\n                    const factor = { x: 1, y: 1 }, diameter = radius * double, inverse = -1;\n                    if (pos.x >= closest.x) {\n                        factor.x = -1;\n                    }\n                    if (pos.y >= closest.y) {\n                        factor.y = -1;\n                    }\n                    particle.position.x = closest.x + diameter * factor.x;\n                    particle.position.y = closest.y + diameter * factor.y;\n                    particle.velocity.mult(inverse);\n                    return true;\n                }\n            }\n            else if (options.type === PolygonMaskType.inline && particle.initialPosition) {\n                const dist = getDistance(particle.initialPosition, particle.getPosition()), { velocity } = particle;\n                if (dist > this._moveRadius) {\n                    velocity.x = velocity.y * half - velocity.x;\n                    velocity.y = velocity.x * half - velocity.y;\n                    return true;\n                }\n            }\n            return false;\n        };\n        this._randomPoint = () => {\n            const container = this._container, options = container.actualOptions.polygon;\n            if (!options) {\n                return;\n            }\n            let position;\n            if (options.type === PolygonMaskType.inline) {\n                switch (options.inline.arrangement) {\n                    case PolygonMaskInlineArrangement.randomPoint:\n                        position = this._getRandomPoint();\n                        break;\n                    case PolygonMaskInlineArrangement.randomLength:\n                        position = this._getRandomPointByLength();\n                        break;\n                    case PolygonMaskInlineArrangement.equidistant:\n                        position = this._getEquidistantPointByIndex(container.particles.count);\n                        break;\n                    case PolygonMaskInlineArrangement.onePerPoint:\n                    case PolygonMaskInlineArrangement.perPoint:\n                    default:\n                        position = this._getPointByIndex(container.particles.count);\n                }\n            }\n            else {\n                const canvasSize = container.canvas.size;\n                position = {\n                    x: getRandom() * canvasSize.width,\n                    y: getRandom() * canvasSize.height,\n                };\n            }\n            if (this._checkInsidePolygon(position)) {\n                return position;\n            }\n            else {\n                return this._randomPoint();\n            }\n        };\n        this._container = container;\n        this._engine = engine;\n        this.dimension = {\n            height: 0,\n            width: 0,\n        };\n        this._moveRadius = 0;\n        this._scale = 1;\n    }\n    clickPositionValid(position) {\n        const options = this._container.actualOptions.polygon;\n        return (!!options?.enable &&\n            options.type !== PolygonMaskType.none &&\n            options.type !== PolygonMaskType.inline &&\n            this._checkInsidePolygon(position));\n    }\n    draw(context) {\n        if (!this.paths?.length) {\n            return;\n        }\n        const options = this._container.actualOptions.polygon;\n        if (!options?.enable) {\n            return;\n        }\n        const polygonDraw = options.draw;\n        if (!polygonDraw.enable) {\n            return;\n        }\n        const rawData = this.raw;\n        for (const path of this.paths) {\n            const path2d = path.path2d;\n            if (!context) {\n                continue;\n            }\n            if (path2d && this.offset) {\n                drawPolygonMaskPath(this._engine, context, path2d, polygonDraw.stroke, this.offset);\n            }\n            else if (rawData) {\n                drawPolygonMask(this._engine, context, rawData, polygonDraw.stroke);\n            }\n        }\n    }\n    async init() {\n        const container = this._container, polygonMaskOptions = container.actualOptions.polygon, pxRatio = container.retina.pixelRatio;\n        if (!polygonMaskOptions) {\n            return;\n        }\n        this._moveRadius = polygonMaskOptions.move.radius * pxRatio;\n        this._scale = polygonMaskOptions.scale * pxRatio;\n        if (polygonMaskOptions.enable) {\n            await this._initRawData();\n        }\n    }\n    particleBounce(particle, delta, direction) {\n        return this._polygonBounce(particle, delta, direction);\n    }\n    particlePosition(position) {\n        const options = this._container.actualOptions.polygon, defaultLength = 0;\n        if (!(options?.enable && (this.raw?.length ?? defaultLength) > defaultLength)) {\n            return;\n        }\n        return deepExtend({}, position ? position : this._randomPoint());\n    }\n    particlesInitialization() {\n        const options = this._container.actualOptions.polygon;\n        if (options?.enable &&\n            options.type === PolygonMaskType.inline &&\n            (options.inline.arrangement === PolygonMaskInlineArrangement.onePerPoint ||\n                options.inline.arrangement === PolygonMaskInlineArrangement.perPoint)) {\n            this._drawPoints();\n            return true;\n        }\n        return false;\n    }\n    resize() {\n        const container = this._container, options = container.actualOptions.polygon;\n        if (!(options?.enable && options.type !== PolygonMaskType.none)) {\n            return;\n        }\n        if (this.redrawTimeout) {\n            clearTimeout(this.redrawTimeout);\n        }\n        const timeout = 250;\n        this.redrawTimeout = window.setTimeout(() => {\n            void (async () => {\n                await this._initRawData(true);\n                await container.particles.redraw();\n            })();\n        }, timeout);\n    }\n    stop() {\n        delete this.raw;\n        delete this.paths;\n    }\n}\n", "import { PolygonMask } from \"./Options/Classes/PolygonMask.js\";\nimport { PolygonMaskInstance } from \"./PolygonMaskInstance.js\";\nimport { PolygonMaskType } from \"./Enums/PolygonMaskType.js\";\nexport class PolygonMaskPlugin {\n    constructor(engine) {\n        this.id = \"polygonMask\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return Promise.resolve(new PolygonMaskInstance(container, this._engine));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        let polygonOptions = options.polygon;\n        if (polygonOptions?.load === undefined) {\n            options.polygon = polygonOptions = new PolygonMask(this._engine);\n        }\n        polygonOptions.load(source?.polygon);\n    }\n    needsPlugin(options) {\n        return (options?.polygon?.enable ??\n            (options?.polygon?.type !== undefined && options.polygon.type !== PolygonMaskType.none));\n    }\n}\n", "import \"./pathseg.js\";\nimport { PolygonMaskPlugin } from \"./PolygonMaskPlugin.js\";\nexport async function loadPolygonMaskPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPlugin(new PolygonMaskPlugin(engine), refresh);\n}\nexport * from \"./Enums/PolygonMaskInlineArrangement.js\";\nexport * from \"./Enums/PolygonMaskMoveType.js\";\nexport * from \"./Enums/PolygonMaskType.js\";\n", "import { Vector, getRandom } from \"@tsparticles/engine\";\nexport class PolygonPathGenerator {\n    constructor() {\n        this._createDirs = () => {\n            this.dirsList = [];\n            for (let i = 0; i < 360; i += 360 / this.options.sides) {\n                const angle = this.options.angle + i;\n                this.dirsList.push(Vector.create(Math.cos((angle * Math.PI) / 180), Math.sin((angle * Math.PI) / 180)));\n            }\n        };\n        this.dirsList = [];\n        this.options = {\n            sides: 6,\n            turnSteps: 20,\n            angle: 30,\n        };\n    }\n    generate(p) {\n        const { sides } = this.options;\n        if (p.hexStep === undefined) {\n            p.hexStep = 0;\n        }\n        if (p.hexDirection === undefined) {\n            p.hexDirection = sides === 6 ? ((getRandom() * 3) | 0) * 2 : (getRandom() * sides) | 0;\n        }\n        if (p.hexSpeed === undefined) {\n            p.hexSpeed = p.velocity.length;\n        }\n        if (p.hexStep % this.options.turnSteps === 0) {\n            p.hexDirection = getRandom() > 0.5 ? (p.hexDirection + 1) % sides : (p.hexDirection + sides - 1) % sides;\n        }\n        p.velocity.x = 0;\n        p.velocity.y = 0;\n        p.hexStep++;\n        const direction = this.dirsList[p.hexDirection];\n        return Vector.create(direction.x * p.hexSpeed, direction.y * p.hexSpeed);\n    }\n    init(container) {\n        const options = container.actualOptions.particles.move.path.options;\n        this.options.sides = options.sides > 0 ? options.sides : 6;\n        this.options.angle = options.angle ?? 30;\n        this.options.turnSteps = options.turnSteps >= 0 ? options.turnSteps : 20;\n        this._createDirs();\n    }\n    reset(particle) {\n        delete particle.hexStep;\n        delete particle.hexDirection;\n        delete particle.hexSpeed;\n    }\n    update() {\n    }\n}\n", "import { PolygonPathGenerator } from \"./PolygonPathGenerator.js\";\nexport const polygonPathName = \"polygonPathGenerator\";\nexport async function loadPolygonPath(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPathGenerator(polygonPathName, new PolygonPathGenerator(), refresh);\n}\n", "const double = 2, doublePI = Math.PI * double, half = 0.5, defaultRotation = 0;\nexport function polygon(sides, radius, rot = defaultRotation) {\n    const step = doublePI / sides, path = [];\n    for (let i = 0; i < sides; i++) {\n        path.push({ x: Math.cos(i * step + rot) * radius, y: Math.sin(i * step + rot) * radius });\n    }\n    return path;\n}\nexport function roundedPath(context, path, radius) {\n    const index1 = 0, index2 = 1, increment = 1;\n    let p1 = path[index1], p2 = path[index2];\n    const len = path.length;\n    context.moveTo((p1.x + p2.x) * half, (p1.y + p2.y) * half);\n    for (let i = 1; i <= len; i++) {\n        p1 = p2;\n        p2 = path[(i + increment) % len];\n        context.arcTo(p1.x, p1.y, (p1.x + p2.x) * half, (p1.y + p2.y) * half, radius);\n    }\n}\n", "import { getRangeValue, } from \"@tsparticles/engine\";\nimport { polygon, roundedPath } from \"./Utils.js\";\nconst defaultSides = 5, defaultRadius = 5;\nexport class RoundedPolygonDrawer {\n    constructor() {\n        this.validTypes = [\"rounded-polygon\"];\n    }\n    draw(data) {\n        const { context, particle, radius } = data;\n        roundedPath(context, polygon(particle.sides, radius), particle.borderRadius ?? defaultRadius);\n    }\n    getSidesCount(particle) {\n        const roundedPolygon = particle.shapeData;\n        return Math.round(getRangeValue(roundedPolygon?.sides ?? defaultSides));\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData;\n        particle.borderRadius =\n            Math.round(getRangeValue(shapeData?.radius ?? defaultSides)) * container.retina.pixelRatio;\n    }\n}\n", "import { RoundedPolygonDrawer } from \"./RoundedPolygonDrawer.js\";\nexport async function loadRoundedPolygonShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new RoundedPolygonDrawer(), refresh);\n}\n", "export function drawRoundedRect(ctx, fixedRadius, fixedDiameter, borderRadius) {\n    const info = {\n        x: -fixedRadius,\n        y: -fixedRadius,\n        height: fixedDiameter,\n        width: fixedDiameter,\n    }, radius = {\n        topLeft: borderRadius,\n        topRight: borderRadius,\n        bottomLeft: borderRadius,\n        bottomRight: borderRadius,\n    }, { x, y, width, height } = info, r = x + width, b = y + height;\n    ctx.moveTo(x + radius.topLeft, y);\n    ctx.lineTo(r - radius.topRight, y);\n    ctx.quadraticCurveTo(r, y, r, y + radius.topRight);\n    ctx.lineTo(r, y + height - radius.bottomRight);\n    ctx.quadraticCurveTo(r, b, r - radius.bottomRight, b);\n    ctx.lineTo(x + radius.bottomLeft, b);\n    ctx.quadraticCurveTo(x, b, x, b - radius.bottomLeft);\n    ctx.lineTo(x, y + radius.topLeft);\n    ctx.quadraticCurveTo(x, y, x + radius.topLeft, y);\n}\n", "import { getRangeValue } from \"@tsparticles/engine\";\nimport { drawRoundedRect } from \"./Utils.js\";\nconst fixFactorSquare = 2, fixFactor = Math.sqrt(fixFactorSquare), double = 2, defaultRadius = 5;\nexport class RoundedRectDrawer {\n    constructor() {\n        this.validTypes = [\"rounded-rect\"];\n    }\n    draw(data) {\n        const { context, particle, radius } = data, fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * double, borderRadius = particle.borderRadius ?? defaultRadius;\n        if (\"roundRect\" in context) {\n            context.roundRect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter, borderRadius);\n        }\n        else {\n            drawRoundedRect(context, fixedRadius, fixedDiameter, borderRadius);\n        }\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData;\n        particle.borderRadius = getRangeValue(shapeData?.radius ?? defaultRadius) * container.retina.pixelRatio;\n    }\n}\n", "import { RoundedRectDrawer } from \"./RoundedRectDrawer.js\";\nexport async function loadRoundedRectShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new RoundedRectDrawer(), refresh);\n}\n", "import { PixelMode, Vector, getPosition, getRandom, half, randomInRange, } from \"@tsparticles/engine\";\nvar SVGPathDirection;\n(function (SVGPathDirection) {\n    SVGPathDirection[SVGPathDirection[\"normal\"] = 0] = \"normal\";\n    SVGPathDirection[SVGPathDirection[\"reverse\"] = 1] = \"reverse\";\n})(SVGPathDirection || (SVGPathDirection = {}));\nconst defaultSpeed = 1, minStep = 0, minIndex = 0, minWidth = 0, minScale = 1;\nexport class SVGPathGenerator {\n    constructor() {\n        this._paths = [];\n        this._reverse = false;\n        this._size = { width: 0, height: 0 };\n        this._scale = 1;\n        this._offset = { x: 0, y: 0, mode: PixelMode.percent };\n        this._width = 0;\n    }\n    generate(particle, delta) {\n        const container = particle.container, pxRatio = container.retina.pixelRatio;\n        if (particle.svgDirection === undefined) {\n            particle.svgDirection = getRandom() > half ? SVGPathDirection.normal : SVGPathDirection.reverse;\n        }\n        if (particle.svgPathIndex === undefined) {\n            particle.svgPathIndex = Math.floor(Math.random() * this._paths.length);\n        }\n        if (particle.svgSpeed === undefined) {\n            particle.svgSpeed = particle.velocity.mult((particle.retina.moveSpeed ?? defaultSpeed) * half).length;\n        }\n        if (particle.svgStep === undefined) {\n            particle.svgStep = randomInRange({ min: 0, max: this._paths[particle.svgPathIndex].length }) * pxRatio;\n        }\n        if (particle.svgOffset === undefined) {\n            particle.svgOffset = {\n                width: randomInRange({ min: -this._width * half, max: this._width * half }) * pxRatio,\n                height: randomInRange({ min: -this._width * half, max: this._width * half }) * pxRatio,\n            };\n        }\n        if (particle.svgInitialPosition === undefined) {\n            particle.svgInitialPosition = { ...particle.position };\n        }\n        particle.velocity.x = 0;\n        particle.velocity.y = 0;\n        if (particle.svgDirection === SVGPathDirection.normal) {\n            particle.svgStep += particle.svgSpeed * delta.factor;\n        }\n        else {\n            particle.svgStep -= particle.svgSpeed * delta.factor;\n        }\n        let path = this._paths[particle.svgPathIndex];\n        if (path) {\n            const pathLength = path.length, indexOffset = 1;\n            if (particle.svgStep >= pathLength) {\n                particle.svgPathIndex = particle.svgPathIndex + indexOffset;\n                if (particle.svgPathIndex >= this._paths.length) {\n                    if (this._reverse) {\n                        particle.svgPathIndex = this._paths.length - indexOffset;\n                        particle.svgDirection = SVGPathDirection.reverse;\n                    }\n                    else {\n                        particle.svgPathIndex = 0;\n                        particle.svgStep = 0;\n                    }\n                }\n            }\n            else if (particle.svgStep <= minStep) {\n                particle.svgPathIndex = particle.svgPathIndex - indexOffset;\n                if (particle.svgPathIndex < minIndex) {\n                    if (this._reverse) {\n                        particle.svgPathIndex = 0;\n                        particle.svgDirection = SVGPathDirection.normal;\n                    }\n                    else {\n                        particle.svgPathIndex = this._paths.length - indexOffset;\n                        path = this._paths[particle.svgPathIndex];\n                        particle.svgStep = path.length;\n                    }\n                }\n            }\n            path = this._paths[particle.svgPathIndex];\n        }\n        if (path) {\n            const pathElement = path.element, pos = pathElement.getPointAtLength(particle.svgStep), canvasSize = particle.container.canvas.size, offset = getPosition(this._offset, canvasSize), scale = this._scale * pxRatio;\n            particle.position.x =\n                (pos.x - this._size.width * half) * scale +\n                    particle.svgInitialPosition.x +\n                    offset.x +\n                    particle.svgOffset.width;\n            particle.position.y =\n                (pos.y - this._size.height * half) * scale +\n                    particle.svgInitialPosition.y +\n                    offset.y +\n                    particle.svgOffset.height;\n        }\n        return Vector.origin;\n    }\n    init(container) {\n        const options = container.actualOptions.particles.move.path.options, position = options.position ?? this._offset;\n        this._reverse = options.reverse ?? this._reverse;\n        this._scale = options.scale ?? minScale;\n        this._offset.x = position.x;\n        this._offset.y = position.y;\n        this._offset.mode = position.mode;\n        this._width = options.width ?? minWidth;\n        if (options.url && !options.path) {\n            const url = options.url;\n            void (async () => {\n                const response = await fetch(url), data = await response.text();\n                const parser = new DOMParser(), doc = parser.parseFromString(data, \"image/svg+xml\"), firstIndex = 0, svg = doc.getElementsByTagName(\"svg\")[firstIndex];\n                let svgPaths = svg.getElementsByTagName(\"path\");\n                if (!svgPaths.length) {\n                    svgPaths = doc.getElementsByTagName(\"path\");\n                }\n                this._paths = [];\n                for (let i = 0; i < svgPaths.length; i++) {\n                    const path = svgPaths.item(i);\n                    if (path) {\n                        this._paths.push({\n                            element: path,\n                            length: path.getTotalLength(),\n                        });\n                    }\n                }\n                this._size.height = parseFloat(svg.getAttribute(\"height\") ?? \"0\");\n                this._size.width = parseFloat(svg.getAttribute(\"width\") ?? \"0\");\n            })();\n        }\n        else if (options.path) {\n            const path = options.path;\n            this._paths = [];\n            for (const item of path.data) {\n                const element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                element.setAttribute(\"d\", item);\n                this._paths.push({\n                    element,\n                    length: element.getTotalLength(),\n                });\n            }\n            this._size.height = path.size.height;\n            this._size.width = path.size.width;\n        }\n    }\n    reset() {\n    }\n    update() {\n    }\n}\n", "import { SVGPathGenerator } from \"./SVGPathGenerator.js\";\nexport const svgPathName = \"svgPathGenerator\";\nexport async function loadSVGPath(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPathGenerator(svgPathName, new SVGPathGenerator(), refresh);\n}\n", "import { Vector, deepExtend, getRandom, } from \"@tsparticles/engine\";\nimport { SimplexNoise } from \"@tsparticles/simplex-noise\";\nconst defaultOptions = {\n    size: 20,\n    increment: 0.004,\n    columns: 0,\n    rows: 0,\n    layers: 0,\n    width: 0,\n    height: 0,\n    offset: {\n        x: 40000,\n        y: 40000,\n        z: 40000,\n    },\n};\nexport class SimplexNoiseGenerator {\n    constructor() {\n        const simplex = new SimplexNoise();\n        this._simplex = simplex.noise4d;\n        this.field = [];\n        this.noiseW = 0;\n        this.options = deepExtend({}, defaultOptions);\n    }\n    generate(particle) {\n        const pos = particle.getPosition(), point = {\n            x: Math.max(Math.floor(pos.x / this.options.size), 0),\n            y: Math.max(Math.floor(pos.y / this.options.size), 0),\n            z: Math.max(Math.floor(pos.z / this.options.size), 0),\n        }, v = Vector.origin;\n        if (!this.field?.[point.x]?.[point.y]?.[point.z]) {\n            return v;\n        }\n        v.setTo(this.field[point.x][point.y][point.z]);\n        return v;\n    }\n    init(container) {\n        this.container = container;\n        this._setup();\n    }\n    reset() {\n    }\n    update() {\n        if (!this.container) {\n            return;\n        }\n        this._calculateField();\n        this.noiseW += this.options.increment;\n    }\n    _calculateField() {\n        const options = this.options;\n        for (let x = 0; x < options.columns; x++) {\n            for (let y = 0; y < options.rows; y++) {\n                for (let z = 0; z < options.layers; z++) {\n                    this.field[x][y][z].angle = this._simplex.noise(x / 50, y / 50, z / 50, this.noiseW) * Math.PI * 2;\n                    this.field[x][y][z].length = this._simplex.noise(x / 100 + options.offset.x, y / 100 + options.offset.y, z / 100 + options.offset.z, this.noiseW);\n                }\n            }\n        }\n    }\n    _initField() {\n        this.field = new Array(this.options.columns);\n        for (let x = 0; x < this.options.columns; x++) {\n            this.field[x] = new Array(this.options.rows);\n            for (let y = 0; y < this.options.rows; y++) {\n                this.field[x][y] = new Array(this.options.layers);\n                for (let z = 0; z < this.options.layers; z++) {\n                    this.field[x][y][z] = Vector.origin;\n                }\n            }\n        }\n    }\n    _resetField() {\n        const container = this.container;\n        if (!container) {\n            return;\n        }\n        const sourceOptions = container.actualOptions.particles.move.path.options;\n        this.options.size = sourceOptions.size > 0 ? sourceOptions.size : defaultOptions.size;\n        this.options.increment =\n            sourceOptions.increment > 0 ? sourceOptions.increment : defaultOptions.increment;\n        this.options.width = container.canvas.size.width;\n        this.options.height = container.canvas.size.height;\n        const offset = sourceOptions.offset;\n        this.options.offset.x = offset?.x ?? defaultOptions.offset.x;\n        this.options.offset.y = offset?.y ?? defaultOptions.offset.y;\n        this.options.offset.z = offset?.z ?? defaultOptions.offset.z;\n        this.options.seed = sourceOptions.seed ?? defaultOptions.seed;\n        this._simplex.seed(this.options.seed ?? getRandom());\n        this.options.columns = Math.floor(this.options.width / this.options.size) + 1;\n        this.options.rows = Math.floor(this.options.height / this.options.size) + 1;\n        this.options.layers = Math.floor(container.zLayers / this.options.size) + 1;\n        this._initField();\n    }\n    _setup() {\n        this.noiseW = 0;\n        this._resetField();\n        addEventListener(\"resize\", () => this._resetField());\n    }\n}\n", "import { SimplexNoiseGenerator } from \"./SimplexNoiseGenerator.js\";\nexport const simplexNoisePathName = \"simplexNoise\";\nexport async function loadSimplexNoisePath(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPathGenerator(simplexNoisePathName, new SimplexNoiseGenerator(), refresh);\n}\n", "import { isNull, isObject } from \"@tsparticles/engine\";\nexport class SoundsAudio {\n    constructor() {\n        this.loop = false;\n        this.source = \"\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (isObject(data)) {\n            if (data.loop !== undefined) {\n                this.loop = data.loop;\n            }\n            if (data.source !== undefined) {\n                this.source = data.source;\n            }\n        }\n        else {\n            this.source = data;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nexport class SoundsNote {\n    constructor() {\n        this.duration = 500;\n        this.value = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { SoundsNote } from \"./SoundsNote.js\";\nexport class SoundsMelody {\n    constructor() {\n        this.loop = false;\n        this.melodies = [];\n        this.notes = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.loop !== undefined) {\n            this.loop = data.loop;\n        }\n        if (data.melodies !== undefined) {\n            this.melodies = data.melodies.map(s => {\n                const tmp = new SoundsMelody();\n                tmp.load(s);\n                return tmp;\n            });\n        }\n        if (data.notes !== undefined) {\n            this.notes = data.notes.map(s => {\n                const tmp = new SoundsNote();\n                tmp.load(s);\n                return tmp;\n            });\n        }\n    }\n}\n", "import { isArray, isFunction, isNull, isString, } from \"@tsparticles/engine\";\nimport { SoundsAudio } from \"./SoundsAudio.js\";\nimport { SoundsMelody } from \"./SoundsMelody.js\";\nimport { SoundsNote } from \"./SoundsNote.js\";\nexport class SoundsEvent {\n    constructor() {\n        this.event = [];\n        this.notes = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.event !== undefined) {\n            this.event = data.event;\n        }\n        if (data.audio !== undefined) {\n            if (isArray(data.audio)) {\n                this.audio = data.audio.map(s => {\n                    const tmp = new SoundsAudio();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                this.audio = new SoundsAudio();\n                this.audio.load(data.audio);\n            }\n        }\n        if (data.notes !== undefined) {\n            this.notes = data.notes.map(t => {\n                const tmp = new SoundsNote();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (data.melodies !== undefined) {\n            this.melodies = data.melodies.map(t => {\n                const tmp = new SoundsMelody();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (data.filter) {\n            if (isString(data.filter)) {\n                const filterFunc = window[data.filter];\n                if (isFunction(filterFunc)) {\n                    this.filter = filterFunc;\n                }\n            }\n            else {\n                this.filter = data.filter;\n            }\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nexport class SoundsIcon {\n    constructor() {\n        this.width = 24;\n        this.height = 24;\n        this.style = \"\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n        if (data.svg !== undefined) {\n            this.svg = data.svg;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { SoundsIcon } from \"./SoundsIcon.js\";\nexport class SoundsIcons {\n    constructor() {\n        this.mute = new SoundsIcon();\n        this.unmute = new SoundsIcon();\n        this.volumeDown = new SoundsIcon();\n        this.volumeUp = new SoundsIcon();\n        this.enable = false;\n        this.mute.svg = `<?xml version=\"1.0\"?>\n<svg baseProfile=\"tiny\" height=\"24px\" version=\"1.2\" viewBox=\"0 0 24 24\" width=\"24px\"\n    xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <g id=\"Layer_1\">\n        <path fill=\"#fff\" d=\"M19.707,5.293c-0.391-0.391-1.023-0.391-1.414,0l-1.551,1.551c-0.345-0.688-0.987-1.02-1.604-1.02c-0.449,0-0.905,0.152-1.356,0.453l-2.672,1.781C10.357,8.561,8.904,9,8,9c-1.654,0-3,1.346-3,3v2c0,1.237,0.754,2.302,1.826,2.76l-1.533,1.533c-0.391,0.391-0.391,1.023,0,1.414C5.488,19.902,5.744,20,6,20s0.512-0.098,0.707-0.293l2.527-2.527c0.697,0.174,1.416,0.455,1.875,0.762l2.672,1.781c0.451,0.301,0.907,0.453,1.356,0.453C16.035,20.176,17,19.495,17,18V9.414l2.707-2.707C20.098,6.316,20.098,5.684,19.707,5.293z M14.891,7.941c0.038-0.025,0.073-0.046,0.104-0.062C14.998,7.914,15,7.954,15,8v1.293l-2,2V9.202L14.891,7.941z M7,12c0-0.552,0.448-1,1-1c1.211,0,2.907-0.495,4-1.146v2.439l-2.83,2.83C8.757,15.046,8.356,15,8,15c-0.552,0-1-0.448-1-1V12z M10.301,15.406L12,13.707v2.439C11.519,15.859,10.925,15.604,10.301,15.406z M14.994,18.12c-0.03-0.016-0.065-0.036-0.104-0.062L13,16.798v-4.091l2-2V18C15,18.046,14.998,18.086,14.994,18.12z\"/>\n    </g>\n</svg>`;\n        this.unmute.svg = `<?xml version=\"1.0\"?>\n<svg baseProfile=\"tiny\" height=\"24px\" version=\"1.2\" viewBox=\"0 0 24 24\" width=\"24px\"\n    xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <g id=\"Layer_1\">\n        <path fill=\"#fff\" d=\"M17.138,5.824c-0.449,0-0.905,0.152-1.356,0.453l-2.672,1.781C12.357,8.561,10.904,9,10,9c-1.654,0-3,1.346-3,3v2c0,1.654,1.346,3,3,3c0.904,0,2.357,0.439,3.109,0.941l2.672,1.781c0.451,0.301,0.907,0.453,1.356,0.453C18.035,20.176,19,19.495,19,18V8C19,6.505,18.035,5.824,17.138,5.824z M14,16.146C12.907,15.495,11.211,15,10,15c-0.552,0-1-0.448-1-1v-2c0-0.552,0.448-1,1-1c1.211,0,2.907-0.495,4-1.146V16.146z M17,18c0,0.046-0.002,0.086-0.006,0.12c-0.03-0.016-0.065-0.036-0.104-0.062L15,16.798V9.202l1.891-1.261c0.038-0.025,0.073-0.046,0.104-0.062C16.998,7.914,17,7.954,17,8V18z\"/>\n    </g>\n</svg>`;\n        this.volumeDown.svg = `<?xml version=\"1.0\"?>\n<svg baseProfile=\"tiny\" height=\"24px\" version=\"1.2\" viewBox=\"0 0 24 24\" width=\"24px\"\n    xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <g id=\"Layer_1\">\n        <path fill=\"#fff\" d=\"M15.138,5.824c-0.449,0-0.905,0.152-1.356,0.453l-2.672,1.781C10.357,8.561,8.904,9,8,9c-1.654,0-3,1.346-3,3v2c0,1.654,1.346,3,3,3c0.904,0,2.357,0.439,3.109,0.941l2.672,1.781c0.451,0.301,0.907,0.453,1.356,0.453C16.035,20.176,17,19.495,17,18V8C17,6.505,16.035,5.824,15.138,5.824z M8,15c-0.552,0-1-0.448-1-1v-2c0-0.552,0.448-1,1-1c1.211,0,2.907-0.495,4-1.146v6.293C10.907,15.495,9.211,15,8,15z M15,18c0,0.046-0.002,0.086-0.006,0.12c-0.03-0.016-0.065-0.036-0.104-0.062L13,16.798V9.202l1.891-1.261c0.038-0.025,0.073-0.046,0.104-0.062C14.998,7.914,15,7.954,15,8V18z\"/>\n        <path fill=\"#fff\" d=\"M18.292,10.294c-0.39,0.391-0.39,1.023,0.002,1.414c0.345,0.345,0.535,0.803,0.535,1.291c0,0.489-0.19,0.948-0.536,1.294c-0.391,0.39-0.391,1.023,0,1.414C18.488,15.902,18.744,16,19,16s0.512-0.098,0.707-0.293c0.724-0.723,1.122-1.685,1.122-2.708s-0.398-1.984-1.123-2.707C19.317,9.903,18.683,9.901,18.292,10.294z\"/>\n    </g>\n</svg>`;\n        this.volumeUp.svg = `<?xml version=\"1.0\"?>\n<svg baseProfile=\"tiny\" height=\"24px\" version=\"1.2\" viewBox=\"0 0 24 24\" width=\"24px\"\n    xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <g id=\"Layer_1\">\n        <path fill=\"#fff\" d=\"M16.706,10.292c-0.389-0.389-1.023-0.391-1.414,0.002c-0.39,0.391-0.39,1.023,0.002,1.414c0.345,0.345,0.535,0.803,0.535,1.291c0,0.489-0.19,0.948-0.536,1.294c-0.391,0.39-0.391,1.023,0,1.414C15.488,15.902,15.744,16,16,16s0.512-0.098,0.707-0.293c0.724-0.723,1.122-1.685,1.122-2.708S17.431,11.015,16.706,10.292z\"/>\n        <path fill=\"#fff\" d=\"M18.706,8.292c-0.391-0.389-1.023-0.39-1.414,0.002c-0.39,0.391-0.39,1.024,0.002,1.414c0.879,0.877,1.363,2.044,1.364,3.287c0.001,1.246-0.484,2.417-1.365,3.298c-0.391,0.391-0.391,1.023,0,1.414C17.488,17.902,17.744,18,18,18s0.512-0.098,0.707-0.293c1.259-1.259,1.952-2.933,1.951-4.713C20.657,11.217,19.964,9.547,18.706,8.292z\"/>\n        <path fill=\"#fff\" d=\"M20.706,6.292c-0.391-0.389-1.023-0.39-1.414,0.002c-0.39,0.391-0.39,1.024,0.002,1.414c1.412,1.409,2.191,3.285,2.192,5.284c0.002,2.002-0.777,3.885-2.193,5.301c-0.391,0.391-0.391,1.023,0,1.414C19.488,19.902,19.744,20,20,20s0.512-0.098,0.707-0.293c1.794-1.794,2.781-4.18,2.779-6.717C23.485,10.457,22.497,8.078,20.706,6.292z\"/>\n        <path fill=\"#fff\" d=\"M12.138,5.824c-0.449,0-0.905,0.152-1.356,0.453L8.109,8.059C7.357,8.561,5.904,9,5,9c-1.654,0-3,1.346-3,3v2c0,1.654,1.346,3,3,3c0.904,0,2.357,0.439,3.109,0.941l2.672,1.781c0.451,0.301,0.907,0.453,1.356,0.453C13.035,20.176,14,19.495,14,18V8C14,6.505,13.035,5.824,12.138,5.824z M5,15c-0.552,0-1-0.448-1-1v-2c0-0.552,0.448-1,1-1c1.211,0,2.907-0.495,4-1.146v6.293C7.907,15.495,6.211,15,5,15z M12,18c0,0.046-0.002,0.086-0.006,0.12c-0.03-0.016-0.065-0.036-0.104-0.062L10,16.798V9.202l1.891-1.261c0.038-0.025,0.073-0.046,0.104-0.062C11.998,7.914,12,7.954,12,8V18z\"/>\n    </g>\n</svg>`;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.mute.load(data.mute);\n        this.unmute.load(data.unmute);\n        this.volumeDown.load(data.volumeDown);\n        this.volumeUp.load(data.volumeUp);\n    }\n}\n", "import { isNull, isObject } from \"@tsparticles/engine\";\nexport class SoundsVolume {\n    constructor() {\n        this.value = 100;\n        this.max = 100;\n        this.min = 0;\n        this.step = 10;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (isObject(data)) {\n            if (data.max !== undefined) {\n                this.max = data.max;\n            }\n            if (data.min !== undefined) {\n                this.min = data.min;\n            }\n            if (data.step !== undefined) {\n                this.step = data.step;\n            }\n            if (data.value !== undefined) {\n                this.value = data.value;\n            }\n        }\n        else {\n            this.value = data;\n        }\n    }\n}\n", "import { isNull } from \"@tsparticles/engine\";\nimport { SoundsEvent } from \"./SoundsEvent.js\";\nimport { SoundsIcons } from \"./SoundsIcons.js\";\nimport { SoundsVolume } from \"./SoundsVolume.js\";\nexport class Sounds {\n    constructor() {\n        this.autoPlay = true;\n        this.enable = false;\n        this.events = [];\n        this.icons = new SoundsIcons();\n        this.volume = new SoundsVolume();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.events !== undefined) {\n            this.events = data.events.map(t => {\n                const event = new SoundsEvent();\n                event.load(t);\n                return event;\n            });\n        }\n        this.icons.load(data.icons);\n        if (data.volume !== undefined) {\n            this.volume.load(data.volume);\n        }\n    }\n}\n", "export var SoundsEventType;\n(function (SoundsEventType) {\n    SoundsEventType[\"mute\"] = \"soundsMuted\";\n    SoundsEventType[\"unmute\"] = \"soundsUnmuted\";\n})(SoundsEventType || (SoundsEventType = {}));\nexport var ImageDisplay;\n(function (ImageDisplay) {\n    ImageDisplay[\"Block\"] = \"block\";\n    ImageDisplay[\"None\"] = \"none\";\n})(ImageDisplay || (ImageDisplay = {}));\n", "const notes = new Map();\nnotes.set(\"C\", [16.35, 32.7, 65.41, 130.81, 261.63, 523.25, 1046.5, 2093.0, 4186.01]);\nnotes.set(\"Db\", [17.32, 34.65, 69.3, 138.59, 277.18, 554.37, 1108.73, 2217.46, 4434.92]);\nnotes.set(\"D\", [18.35, 36.71, 73.42, 146.83, 293.66, 587.33, 1174.66, 2349.32, 4698.63]);\nnotes.set(\"Eb\", [19.45, 38.89, 77.78, 155.56, 311.13, 622.25, 1244.51, 2489.02, 4978.03]);\nnotes.set(\"E\", [20.6, 41.2, 82.41, 164.81, 329.63, 659.25, 1318.51, 2637.02, 5274.04]);\nnotes.set(\"F\", [21.83, 43.65, 87.31, 174.61, 349.23, 698.46, 1396.91, 2793.83, 5587.65]);\nnotes.set(\"Gb\", [23.12, 46.25, 92.5, 185.0, 369.99, 739.99, 1479.98, 2959.96, 5919.91]);\nnotes.set(\"G\", [24.5, 49.0, 98.0, 196.0, 392.0, 783.99, 1567.98, 3135.96, 6271.93]);\nnotes.set(\"Ab\", [25.96, 51.91, 103.83, 207.65, 415.3, 830.61, 1661.22, 3322.44, 6644.88]);\nnotes.set(\"A\", [27.5, 55.0, 110.0, 220.0, 440.0, 880.0, 1760.0, 3520.0, 7040.0]);\nnotes.set(\"Bb\", [29.14, 58.27, 116.54, 233.08, 466.16, 932.33, 1864.66, 3729.31, 7458.62]);\nnotes.set(\"B\", [30.87, 61.74, 123.47, 246.94, 493.88, 987.77, 1975.53, 3951.07, 7902.13]);\nnotes.set(\"pause\", [0]);\nexport function getNoteFrequency(note) {\n    const regex = /(([A-G]b?)(\\d))|pause/i, result = regex.exec(note), groupKey = 2, defaultMatchKey = 0, innerGroupKey = 3;\n    if (!result?.length) {\n        return;\n    }\n    const noteKey = result[groupKey] || result[defaultMatchKey], noteItem = notes.get(noteKey);\n    if (!noteItem) {\n        return;\n    }\n    return noteItem[parseInt(result[innerGroupKey] || \"0\")];\n}\nlet muted = true;\nexport const isWindowMuted = () => {\n    return muted;\n};\nexport const unmuteWindow = () => {\n    muted = false;\n};\n", "import { clamp, executeOnSingleOrMultiple, getLogger, isArray, isNumber, itemFromArray, itemFromSingleOrMultiple, mouseDownEvent, percentDenominator, touchStartEvent, } from \"@tsparticles/engine\";\nimport { ImageDisplay, SoundsEventType } from \"./enums.js\";\nimport { getNoteFrequency, isWindowMuted, unmuteWindow } from \"./utils.js\";\nconst zIndexOffset = 1, rightOffset = 1, minVolume = 0;\nfunction initImage(data) {\n    const img = document.createElement(\"img\"), { clickCb, container, display, iconOptions, margin, options, pos, rightOffsets } = data, { width, path, style, svg } = iconOptions, defaultAccumulator = 0;\n    setIconStyle(img, pos.top + margin, pos.right -\n        (margin * (rightOffsets.length + rightOffset) +\n            width +\n            rightOffsets.reduce((a, b) => a + b, defaultAccumulator)), display, options.fullScreen.zIndex + zIndexOffset, width, margin, style);\n    img.src = path ?? (svg ? `data:image/svg+xml;base64,${btoa(svg)}` : \"\");\n    const parent = container.canvas.element?.parentNode ?? document.body;\n    parent.append(img);\n    img.addEventListener(\"click\", () => {\n        void clickCb();\n    });\n    return img;\n}\nfunction removeImage(image) {\n    if (!image) {\n        return;\n    }\n    image.remove();\n}\nfunction setIconStyle(icon, top, left, display, zIndex, width, margin, style) {\n    icon.style.userSelect = \"none\";\n    icon.style.webkitUserSelect = \"none\";\n    icon.style.position = \"absolute\";\n    icon.style.top = `${top + margin}px`;\n    icon.style.left = `${left - margin - width}px`;\n    icon.style.display = display;\n    icon.style.zIndex = `${zIndex + zIndexOffset}`;\n    icon.style.cssText += style;\n}\nexport class SoundsInstance {\n    constructor(container, engine) {\n        this._addBuffer = audioCtx => {\n            const buffer = audioCtx.createBufferSource();\n            this._audioSources.push(buffer);\n            return buffer;\n        };\n        this._addOscillator = audioCtx => {\n            const oscillator = audioCtx.createOscillator();\n            this._audioSources.push(oscillator);\n            return oscillator;\n        };\n        this._initEvents = () => {\n            const container = this._container, soundsOptions = container.actualOptions.sounds;\n            if (!soundsOptions?.enable || !container.canvas.element) {\n                return;\n            }\n            for (const event of soundsOptions.events) {\n                const cb = (args) => {\n                    void (async () => {\n                        const filterNotValid = event.filter && !event.filter(args);\n                        if (this._container !== args.container) {\n                            return;\n                        }\n                        if (!this._container || !!this._container.muted || this._container.destroyed) {\n                            executeOnSingleOrMultiple(event.event, item => {\n                                this._engine.removeEventListener(item, cb);\n                            });\n                            return;\n                        }\n                        if (filterNotValid) {\n                            return;\n                        }\n                        const defaultNoteIndex = 0;\n                        if (event.audio) {\n                            this._playBuffer(itemFromSingleOrMultiple(event.audio));\n                        }\n                        else if (event.melodies) {\n                            const melody = itemFromArray(event.melodies);\n                            if (melody.melodies.length) {\n                                await Promise.allSettled(melody.melodies.map(m => this._playNote(m.notes, defaultNoteIndex, melody.loop)));\n                            }\n                            else {\n                                await this._playNote(melody.notes, defaultNoteIndex, melody.loop);\n                            }\n                        }\n                        else if (event.notes) {\n                            const note = itemFromArray(event.notes);\n                            await this._playNote([note], defaultNoteIndex, false);\n                        }\n                    })();\n                };\n                executeOnSingleOrMultiple(event.event, item => {\n                    this._engine.addEventListener(item, cb);\n                });\n            }\n        };\n        this._mute = async () => {\n            const container = this._container, audioContext = this._getAudioContext();\n            for (const source of this._audioSources) {\n                this._removeAudioSource(source);\n            }\n            if (this._gain) {\n                this._gain.disconnect();\n            }\n            await audioContext.close();\n            container.audioContext = undefined;\n            this._engine.dispatchEvent(SoundsEventType.mute, { container: this._container });\n        };\n        this._playBuffer = audio => {\n            const audioBuffer = this._audioMap.get(audio.source);\n            if (!audioBuffer) {\n                return;\n            }\n            const audioCtx = this._container.audioContext;\n            if (!audioCtx) {\n                return;\n            }\n            const source = this._addBuffer(audioCtx);\n            source.loop = audio.loop;\n            source.buffer = audioBuffer;\n            source.connect(this._gain ?? audioCtx.destination);\n            source.start();\n        };\n        this._playFrequency = async (frequency, duration) => {\n            if (!this._gain || this._container.muted) {\n                return;\n            }\n            const audioContext = this._getAudioContext(), oscillator = this._addOscillator(audioContext);\n            oscillator.connect(this._gain);\n            oscillator.type = \"sine\";\n            oscillator.frequency.value = frequency;\n            oscillator.start();\n            return new Promise(resolve => {\n                setTimeout(() => {\n                    this._removeAudioSource(oscillator);\n                    resolve();\n                }, duration);\n            });\n        };\n        this._playMuteSound = () => {\n            if (this._container.muted) {\n                return;\n            }\n            const audioContext = this._getAudioContext(), gain = audioContext.createGain();\n            gain.connect(audioContext.destination);\n            gain.gain.value = 0;\n            const oscillator = audioContext.createOscillator();\n            oscillator.connect(gain);\n            oscillator.type = \"sine\";\n            oscillator.frequency.value = 1;\n            oscillator.start();\n            setTimeout(() => {\n                oscillator.stop();\n                oscillator.disconnect();\n                gain.disconnect();\n            });\n        };\n        this._playNote = async (notes, noteIdx, loop) => {\n            if (this._container.muted) {\n                return;\n            }\n            const note = notes[noteIdx];\n            if (!note) {\n                return;\n            }\n            const value = note.value;\n            const promises = executeOnSingleOrMultiple(value, async (_, idx) => {\n                return this._playNoteValue(notes, noteIdx, idx);\n            });\n            await (isArray(promises) ? Promise.allSettled(promises) : promises);\n            const indexOffset = 1;\n            let nextNoteIdx = noteIdx + indexOffset;\n            if (loop && nextNoteIdx >= notes.length) {\n                nextNoteIdx = nextNoteIdx % notes.length;\n            }\n            if (this._container.muted) {\n                return;\n            }\n            await this._playNote(notes, nextNoteIdx, loop);\n        };\n        this._playNoteValue = async (notes, noteIdx, valueIdx) => {\n            const note = notes[noteIdx];\n            if (!note) {\n                return;\n            }\n            const value = itemFromSingleOrMultiple(note.value, valueIdx, true);\n            try {\n                const freq = getNoteFrequency(value);\n                if (!isNumber(freq)) {\n                    return;\n                }\n                await this._playFrequency(freq, note.duration);\n            }\n            catch (e) {\n                getLogger().error(e);\n            }\n        };\n        this._removeAudioSource = source => {\n            source.stop();\n            source.disconnect();\n            const deleteCount = 1;\n            this._audioSources.splice(this._audioSources.indexOf(source), deleteCount);\n        };\n        this._unmute = () => {\n            const container = this._container, options = container.actualOptions, soundsOptions = options.sounds;\n            if (!soundsOptions) {\n                return;\n            }\n            const audioContext = this._getAudioContext();\n            if (!this._audioSources) {\n                this._audioSources = [];\n            }\n            const gain = audioContext.createGain();\n            gain.connect(audioContext.destination);\n            gain.gain.value = soundsOptions.volume.value / percentDenominator;\n            this._gain = gain;\n            this._initEvents();\n            this._engine.dispatchEvent(SoundsEventType.unmute, { container: this._container });\n        };\n        this._updateMuteIcons = () => {\n            const container = this._container, soundsOptions = container.actualOptions.sounds;\n            if (!soundsOptions?.enable || !soundsOptions.icons.enable) {\n                return;\n            }\n            const muteImg = this._muteImg, unmuteImg = this._unmuteImg;\n            if (muteImg) {\n                muteImg.style.display = container.muted ? \"block\" : \"none\";\n            }\n            if (unmuteImg) {\n                unmuteImg.style.display = container.muted ? \"none\" : \"block\";\n            }\n        };\n        this._updateMuteStatus = async () => {\n            const container = this._container, audioContext = this._getAudioContext();\n            if (container.muted) {\n                await audioContext?.suspend();\n                await this._mute();\n            }\n            else {\n                await audioContext?.resume();\n                this._unmute();\n                this._playMuteSound();\n            }\n        };\n        this._updateVolume = async () => {\n            const container = this._container, soundsOptions = container.actualOptions.sounds;\n            if (!soundsOptions?.enable) {\n                return;\n            }\n            clamp(this._volume, soundsOptions.volume.min, soundsOptions.volume.max);\n            let stateChanged = false;\n            if (this._volume <= minVolume && !container.muted) {\n                this._volume = 0;\n                container.muted = true;\n                stateChanged = true;\n            }\n            else if (this._volume > minVolume && container.muted) {\n                container.muted = false;\n                stateChanged = true;\n            }\n            if (stateChanged) {\n                this._updateMuteIcons();\n                await this._updateMuteStatus();\n            }\n            if (this._gain?.gain) {\n                this._gain.gain.value = this._volume / percentDenominator;\n            }\n        };\n        this._container = container;\n        this._engine = engine;\n        this._volume = 0;\n        this._audioSources = [];\n        this._audioMap = new Map();\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions, soundsOptions = options.sounds;\n        if (!soundsOptions?.enable) {\n            return;\n        }\n        if (soundsOptions.autoPlay && isWindowMuted()) {\n            const firstClickHandler = () => {\n                removeEventListener(mouseDownEvent, firstClickHandler);\n                removeEventListener(touchStartEvent, firstClickHandler);\n                unmuteWindow();\n                void this.unmute();\n            };\n            const listenerOptions = {\n                capture: true,\n                once: true,\n            };\n            addEventListener(mouseDownEvent, firstClickHandler, listenerOptions);\n            addEventListener(touchStartEvent, firstClickHandler, listenerOptions);\n        }\n        this._volume = soundsOptions.volume.value;\n        const events = soundsOptions.events;\n        this._audioMap = new Map();\n        for (const event of events) {\n            if (!event.audio) {\n                continue;\n            }\n            const promises = executeOnSingleOrMultiple(event.audio, async (audio) => {\n                const response = await fetch(audio.source);\n                if (!response.ok) {\n                    return;\n                }\n                const arrayBuffer = await response.arrayBuffer(), audioContext = this._getAudioContext(), audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n                this._audioMap.set(audio.source, audioBuffer);\n            });\n            if (promises instanceof Promise) {\n                await promises;\n            }\n            else {\n                await Promise.allSettled(promises);\n            }\n        }\n    }\n    async mute() {\n        if (!this._container.muted) {\n            await this.toggleMute();\n        }\n    }\n    async start() {\n        const container = this._container, options = container.actualOptions, soundsOptions = options.sounds;\n        if (!soundsOptions?.enable || !container.canvas.element) {\n            return;\n        }\n        container.muted = true;\n        const canvas = container.canvas.element, pos = {\n            top: canvas.offsetTop,\n            right: canvas.offsetLeft + canvas.offsetWidth,\n        }, { mute, unmute, volumeDown, volumeUp } = soundsOptions.icons, margin = 10, toggleMute = async () => {\n            await this.toggleMute();\n        }, enableIcons = soundsOptions.icons.enable, display = enableIcons ? ImageDisplay.Block : ImageDisplay.None;\n        this._muteImg = initImage({\n            container,\n            options,\n            pos,\n            display,\n            iconOptions: mute,\n            margin,\n            rightOffsets: [volumeDown.width, volumeUp.width],\n            clickCb: toggleMute,\n        });\n        this._unmuteImg = initImage({\n            container,\n            options,\n            pos,\n            display: ImageDisplay.None,\n            iconOptions: unmute,\n            margin,\n            rightOffsets: [volumeDown.width, volumeUp.width],\n            clickCb: toggleMute,\n        });\n        this._volumeDownImg = initImage({\n            container,\n            options,\n            pos,\n            display,\n            iconOptions: volumeDown,\n            margin,\n            rightOffsets: [volumeUp.width],\n            clickCb: async () => {\n                await this.volumeDown();\n            },\n        });\n        this._volumeUpImg = initImage({\n            container,\n            options,\n            pos,\n            display,\n            iconOptions: volumeUp,\n            margin,\n            rightOffsets: [],\n            clickCb: async () => {\n                await this.volumeUp();\n            },\n        });\n        if (!isWindowMuted() && soundsOptions.autoPlay) {\n            await this.unmute();\n        }\n    }\n    stop() {\n        this._container.muted = true;\n        void (async () => {\n            await this._mute();\n            removeImage(this._muteImg);\n            removeImage(this._unmuteImg);\n            removeImage(this._volumeDownImg);\n            removeImage(this._volumeUpImg);\n        })();\n    }\n    async toggleMute() {\n        const container = this._container;\n        container.muted = !container.muted;\n        this._updateMuteIcons();\n        await this._updateMuteStatus();\n    }\n    async unmute() {\n        if (this._container.muted) {\n            await this.toggleMute();\n        }\n    }\n    async volumeDown() {\n        const container = this._container, soundsOptions = container.actualOptions.sounds;\n        if (!soundsOptions?.enable) {\n            return;\n        }\n        if (container.muted) {\n            this._volume = 0;\n        }\n        this._volume -= soundsOptions.volume.step;\n        await this._updateVolume();\n    }\n    async volumeUp() {\n        const container = this._container, soundsOptions = container.actualOptions.sounds;\n        if (!soundsOptions?.enable) {\n            return;\n        }\n        this._volume += soundsOptions.volume.step;\n        await this._updateVolume();\n    }\n    _getAudioContext() {\n        const container = this._container;\n        if (!container.audioContext) {\n            container.audioContext = new AudioContext();\n        }\n        return container.audioContext;\n    }\n}\n", "import { mouseDownEvent, touchStartEvent, } from \"@tsparticles/engine\";\nimport { Sounds } from \"./Options/Classes/Sounds.js\";\nimport { SoundsInstance } from \"./SoundsInstance.js\";\nimport { unmuteWindow } from \"./utils.js\";\nconst generalFirstClickHandler = () => {\n    removeEventListener(mouseDownEvent, generalFirstClickHandler);\n    removeEventListener(touchStartEvent, generalFirstClickHandler);\n    unmuteWindow();\n};\nexport class SoundsPlugin {\n    constructor(engine) {\n        this.id = \"sounds\";\n        this._engine = engine;\n        const listenerOptions = {\n            capture: true,\n            once: true,\n        };\n        addEventListener(mouseDownEvent, generalFirstClickHandler, listenerOptions);\n        addEventListener(touchStartEvent, generalFirstClickHandler, listenerOptions);\n    }\n    getPlugin(container) {\n        return Promise.resolve(new SoundsInstance(container, this._engine));\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        let soundsOptions = options.sounds;\n        if (soundsOptions?.load === undefined) {\n            options.sounds = soundsOptions = new Sounds();\n        }\n        soundsOptions.load(source?.sounds);\n    }\n    needsPlugin(options) {\n        return options?.sounds?.enable ?? false;\n    }\n}\n", "import { SoundsPlugin } from \"./SoundsPlugin.js\";\nexport async function loadSoundsPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPlugin(new SoundsPlugin(engine), refresh);\n}\n", "export function drawSpiral(data) {\n    const { context, particle, radius } = data;\n    if (particle.spiralInnerRadius === undefined ||\n        particle.spiralLineSpacing === undefined ||\n        particle.spiralWidthFactor === undefined) {\n        return;\n    }\n    const realWidth = (radius - particle.spiralInnerRadius) / particle.spiralLineSpacing, widthFactor = 10;\n    for (let i = 0; i < realWidth * widthFactor; i++) {\n        const angle = i / widthFactor, factor = particle.spiralInnerRadius + particle.spiralLineSpacing * angle, pos = {\n            x: factor * Math.cos(angle),\n            y: factor * Math.sin(angle),\n        };\n        context.lineTo(pos.x, pos.y);\n    }\n}\n", "import { getRangeValue } from \"@tsparticles/engine\";\nimport { drawSpiral } from \"./Utils.js\";\nconst defaultInnerRadius = 1, defaultLineSpacing = 1, defaultWidthFactor = 10;\nexport class SpiralDrawer {\n    constructor() {\n        this.validTypes = [\"spiral\"];\n    }\n    draw(data) {\n        drawSpiral(data);\n    }\n    particleInit(container, particle) {\n        const pixelRatio = container.retina.pixelRatio, shapeData = particle.shapeData;\n        particle.spiralInnerRadius = getRangeValue(shapeData?.innerRadius ?? defaultInnerRadius) * pixelRatio;\n        particle.spiralLineSpacing = getRangeValue(shapeData?.lineSpacing ?? defaultLineSpacing) * pixelRatio;\n        particle.spiralWidthFactor = getRangeValue(shapeData?.widthFactor ?? defaultWidthFactor);\n    }\n}\n", "import { SpiralDrawer } from \"./SpiralDrawer.js\";\nexport async function loadSpiralShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new SpiralDrawer(), refresh);\n}\n", "import { defaultAlpha, double, getRangeValue, half, none, originPoint, } from \"@tsparticles/engine\";\nconst minTrailLength = 2, trailLengthOffset = 1, minWidth = -1, defaultLength = 10;\nconst defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n};\nexport class TrailDrawer {\n    draw(data) {\n        const { context, radius, particle, transformData } = data, diameter = radius * double, pxRatio = particle.container.retina.pixelRatio, currentPos = particle.getPosition(), trail = particle.trail;\n        if (!trail || !particle.trailLength) {\n            return;\n        }\n        const pathLength = particle.trailLength + radius;\n        trail.push({\n            color: context.fillStyle ?? context.strokeStyle,\n            position: {\n                x: currentPos.x,\n                y: currentPos.y,\n            },\n            transformData: { ...data.transformData },\n        });\n        if (trail.length < minTrailLength) {\n            return;\n        }\n        while (trail.length > pathLength) {\n            trail.shift();\n        }\n        const trailLength = Math.min(trail.length, pathLength), canvasSize = {\n            width: particle.container.canvas.size.width + diameter,\n            height: particle.container.canvas.size.height + diameter,\n        };\n        let lastPos = trail[trailLength - trailLengthOffset].position;\n        for (let i = trailLength; i > none; i--) {\n            const step = trail[i - trailLengthOffset], position = step.position, stepTransformData = particle.trailTransform\n                ? (step.transformData ?? defaultTransform)\n                : defaultTransform;\n            context.setTransform(stepTransformData.a, stepTransformData.b, stepTransformData.c, stepTransformData.d, position.x, position.y);\n            context.beginPath();\n            context.moveTo(lastPos.x - position.x, lastPos.y - position.y);\n            const warp = {\n                x: (lastPos.x + canvasSize.width) % canvasSize.width,\n                y: (lastPos.y + canvasSize.height) % canvasSize.height,\n            };\n            if (Math.abs(lastPos.x - position.x) > canvasSize.width * half ||\n                Math.abs(lastPos.y - position.y) > canvasSize.height * half) {\n                lastPos = position;\n                continue;\n            }\n            context.lineTo(Math.abs(lastPos.x - position.x) > canvasSize.width * half ? warp.x : originPoint.x, Math.abs(lastPos.y - position.y) > canvasSize.height * half ? warp.y : originPoint.y);\n            const width = Math.max((i / trailLength) * diameter, pxRatio, particle.trailMinWidth ?? minWidth), oldAlpha = context.globalAlpha;\n            context.globalAlpha = particle.trailFade ? i / trailLength : defaultAlpha;\n            context.lineWidth = particle.trailMaxWidth ? Math.min(width, particle.trailMaxWidth) : width;\n            context.strokeStyle = step.color;\n            context.stroke();\n            context.globalAlpha = oldAlpha;\n            lastPos = position;\n        }\n        context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, currentPos.x, currentPos.y);\n    }\n    particleInit(container, particle) {\n        particle.trail = [];\n        const effectData = particle.effectData;\n        particle.trailFade = effectData?.fade ?? true;\n        particle.trailLength = getRangeValue(effectData?.length ?? defaultLength) * container.retina.pixelRatio;\n        particle.trailMaxWidth = effectData?.maxWidth\n            ? getRangeValue(effectData.maxWidth) * container.retina.pixelRatio\n            : undefined;\n        particle.trailMinWidth = effectData?.minWidth\n            ? getRangeValue(effectData.minWidth) * container.retina.pixelRatio\n            : undefined;\n        particle.trailTransform = effectData?.transform ?? false;\n    }\n}\n", "import { TrailDrawer } from \"./TrailDrawer.js\";\nexport async function loadTrailEffect(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEffect(\"trail\", new TrailDrawer(), refresh);\n}\n", "import { Vector, getRandom, getRangeValue, } from \"@tsparticles/engine\";\nconst angularFrequencyFactor = 0.5, half = 0.5, halfPI = Math.PI * half;\nexport class ZigZagPathGenerator {\n    constructor() {\n        this.options = {\n            waveHeight: { min: 0, max: 3 },\n            waveLength: { min: 0, max: 5 },\n        };\n    }\n    generate(particle, delta) {\n        if (particle.zigzag === undefined) {\n            particle.zigzag = {\n                counter: getRandom(),\n                waveHeight: getRangeValue(this.options.waveHeight),\n                waveLength: getRangeValue(this.options.waveLength),\n            };\n        }\n        const angularFrequency = (angularFrequencyFactor / particle.zigzag.waveLength) * delta.factor;\n        particle.zigzag.counter += angularFrequency;\n        const zigzagAngle = particle.zigzag.waveHeight * Math.sin(particle.zigzag.counter);\n        particle.position.x += zigzagAngle * Math.cos(particle.velocity.angle + halfPI);\n        particle.position.y += zigzagAngle * Math.sin(particle.velocity.angle + halfPI);\n        return Vector.origin;\n    }\n    init(container) {\n        const options = container.actualOptions.particles.move.path.options;\n        this.options.waveLength = options.waveLength ?? this.options.waveLength;\n        this.options.waveHeight = options.waveHeight ?? this.options.waveHeight;\n    }\n    reset() {\n    }\n    update() {\n    }\n}\n", "import { ZigZagPathGenerator } from \"./ZigZagPathGenerator.js\";\nexport const zigZagPathName = \"zigZagPathGenerator\";\nexport async function loadZigZagPath(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addPathGenerator(zigZagPathName, new ZigZagPathGenerator(), refresh);\n}\n", "import { initPjs } from \"@tsparticles/pjs\";\nimport { loadArrowShape } from \"@tsparticles/shape-arrow\";\nimport { loadBubbleEffect } from \"@tsparticles/effect-bubble\";\nimport { loadCanvasMaskPlugin } from \"@tsparticles/plugin-canvas-mask\";\nimport { loadCardsShape } from \"@tsparticles/shape-cards\";\nimport { loadCogShape } from \"@tsparticles/shape-cog\";\nimport { loadCurlNoisePath } from \"@tsparticles/path-curl-noise\";\nimport { loadCurvesPath } from \"@tsparticles/path-curves\";\nimport { loadEasingBackPlugin } from \"@tsparticles/plugin-easing-back\";\nimport { loadEasingCircPlugin } from \"@tsparticles/plugin-easing-circ\";\nimport { loadEasingCubicPlugin } from \"@tsparticles/plugin-easing-cubic\";\nimport { loadEasingExpoPlugin } from \"@tsparticles/plugin-easing-expo\";\nimport { loadEasingLinearPlugin } from \"@tsparticles/plugin-easing-linear\";\nimport { loadEasingQuartPlugin } from \"@tsparticles/plugin-easing-quart\";\nimport { loadEasingQuintPlugin } from \"@tsparticles/plugin-easing-quint\";\nimport { loadEasingSinePlugin } from \"@tsparticles/plugin-easing-sine\";\nimport { loadEmittersShapeCanvas } from \"@tsparticles/plugin-emitters-shape-canvas\";\nimport { loadEmittersShapePath } from \"@tsparticles/plugin-emitters-shape-path\";\nimport { loadEmittersShapePolygon } from \"@tsparticles/plugin-emitters-shape-polygon\";\nimport { loadExportImagePlugin } from \"@tsparticles/plugin-export-image\";\nimport { loadExportJSONPlugin } from \"@tsparticles/plugin-export-json\";\nimport { loadExportVideoPlugin } from \"@tsparticles/plugin-export-video\";\nimport { loadExternalParticleInteraction } from \"@tsparticles/interaction-external-particle\";\nimport { loadExternalPopInteraction } from \"@tsparticles/interaction-external-pop\";\nimport { loadFull } from \"tsparticles\";\nimport { loadGradientUpdater } from \"@tsparticles/updater-gradient\";\nimport { loadHeartShape } from \"@tsparticles/shape-heart\";\nimport { loadHsvColorPlugin } from \"@tsparticles/plugin-hsv-color\";\nimport { loadInfectionPlugin } from \"@tsparticles/plugin-infection\";\nimport { loadInfinityShape } from \"@tsparticles/shape-infinity\";\nimport { loadLightInteraction } from \"@tsparticles/interaction-light\";\nimport { loadMotionPlugin } from \"@tsparticles/plugin-motion\";\nimport { loadNamedColorPlugin } from \"@tsparticles/plugin-named-color\";\nimport { loadOklchColorPlugin } from \"@tsparticles/plugin-oklch-color\";\nimport { loadOrbitUpdater } from \"@tsparticles/updater-orbit\";\nimport { loadParticlesRepulseInteraction } from \"@tsparticles/interaction-particles-repulse\";\nimport { loadPathShape } from \"@tsparticles/shape-path\";\nimport { loadPerlinNoisePath } from \"@tsparticles/path-perlin-noise\";\nimport { loadPoissonDiscPlugin } from \"@tsparticles/plugin-poisson-disc\";\nimport { loadPolygonMaskPlugin } from \"@tsparticles/plugin-polygon-mask\";\nimport { loadPolygonPath } from \"@tsparticles/path-polygon\";\nimport { loadRoundedPolygonShape } from \"@tsparticles/shape-rounded-polygon\";\nimport { loadRoundedRectShape } from \"@tsparticles/shape-rounded-rect\";\nimport { loadSVGPath } from \"@tsparticles/path-svg\";\nimport { loadSimplexNoisePath } from \"@tsparticles/path-simplex-noise\";\nimport { loadSoundsPlugin } from \"@tsparticles/plugin-sounds\";\nimport { loadSpiralShape } from \"@tsparticles/shape-spiral\";\nimport { loadTrailEffect } from \"@tsparticles/effect-trail\";\nimport { loadZigZagPath } from \"@tsparticles/path-zig-zag\";\nexport async function loadAll(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    initPjs(engine);\n    await loadFull(engine, false);\n    await loadHsvColorPlugin(engine, false);\n    await loadNamedColorPlugin(engine, false);\n    await loadOklchColorPlugin(engine, false);\n    await loadEasingBackPlugin(engine, false);\n    await loadEasingCircPlugin(engine, false);\n    await loadEasingCubicPlugin(engine, false);\n    await loadEasingExpoPlugin(engine, false);\n    await loadEasingLinearPlugin(engine, false);\n    await loadEasingQuartPlugin(engine, false);\n    await loadEasingQuintPlugin(engine, false);\n    await loadEasingSinePlugin(engine, false);\n    await loadEmittersShapeCanvas(engine, false);\n    await loadEmittersShapePath(engine, false);\n    await loadEmittersShapePolygon(engine, false);\n    await loadCanvasMaskPlugin(engine, false);\n    await loadInfectionPlugin(engine, false);\n    await loadMotionPlugin(engine, false);\n    await loadPolygonMaskPlugin(engine, false);\n    await loadSoundsPlugin(engine, false);\n    await loadExportImagePlugin(engine, false);\n    await loadExportJSONPlugin(engine, false);\n    await loadExportVideoPlugin(engine, false);\n    await loadExternalParticleInteraction(engine, false);\n    await loadExternalPopInteraction(engine, false);\n    await loadLightInteraction(engine, false);\n    await loadParticlesRepulseInteraction(engine, false);\n    await loadGradientUpdater(engine, false);\n    await loadOrbitUpdater(engine, false);\n    await loadCurvesPath(engine, false);\n    await loadCurlNoisePath(engine, false);\n    await loadPerlinNoisePath(engine, false);\n    await loadPoissonDiscPlugin(engine, false);\n    await loadPolygonPath(engine, false);\n    await loadSVGPath(engine, false);\n    await loadZigZagPath(engine, false);\n    await loadSimplexNoisePath(engine, false);\n    await loadBubbleEffect(engine, false);\n    await loadArrowShape(engine, false);\n    await loadCardsShape(engine, false);\n    await loadCogShape(engine, false);\n    await loadHeartShape(engine, false);\n    await loadInfinityShape(engine, false);\n    await loadPathShape(engine, false);\n    await loadRoundedPolygonShape(engine, false);\n    await loadRoundedRectShape(engine, false);\n    await loadSpiralShape(engine, false);\n    await loadTrailEffect(engine, false);\n    await engine.refresh(refresh);\n}\n"],
  "mappings": "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",
  "names": ["_a", "double", "half", "defaultHeightFactor", "defaultHeadWidthFactor", "defaultBodyHeightFactor", "half", "origin", "defaultIndex", "alphaFactor", "minIndex", "n", "double", "doublePI", "origin", "double", "double", "doublePI", "EmitterClickMode", "half", "_a", "_b", "minDuration", "minLifeCount", "container", "defaultIndex", "minIndex", "origin", "getCanvasImageData", "alphaFactor", "getImageData", "getTextData", "half", "minAlpha", "getImageData", "getTextData", "getCanvasImageData", "minAlpha", "half", "half", "firstIndex", "double", "doublePI", "maxAttempts", "sides", "polygon", "firstIndex", "half", "polygon", "firstIndex", "container", "AbsorberClickMode", "minAngle", "double", "container", "DestroyMode", "double", "doublePI", "squareExp", "half", "Sides", "RollMode", "double", "doublePI", "maxAngle", "half", "double", "minVelocity", "doublePI", "spinFactor", "double", "doublePI", "minAngle", "origin", "sides", "maxAngle", "minAngle", "RgbIndexes", "defaultAlpha", "HslIndexes", "defaultAlpha", "none", "minVelocity", "minVelocity", "minVelocity", "minVelocity", "RgbIndexes", "defaultAlpha", "half", "double", "identity", "minRadius", "attractFactor", "squareExp", "half", "double", "minRadius", "bounceMode", "bounce", "ProcessBubbleType", "minDistance", "double", "half", "container", "lineStyle", "minDistance", "defaultWidth", "minDistance", "container", "container", "container", "minDistance", "minRadius", "half", "container", "range", "minRadius", "defaultOpacity", "increment", "DisposalMethod", "GIFDataHeaders", "origin", "half", "increment", "double", "defaultAlpha", "sides", "defaultRatio", "noTime", "identity", "infiniteValue", "drawLine", "sides", "drawLine", "half", "identity", "Attractor", "Attractor", "half", "absorbFactor", "double", "double", "range", "squarePower", "origin", "minDistance", "container", "range", "minOpacity", "minWidth", "minDistance", "half", "container", "origin", "polygon", "sides", "yFactor", "sides", "double", "double", "doublePI", "identity", "minIndex", "double", "sides", "origin", "sides", "defaultInset", "defaultSides", "defaultOpacity", "double", "half", "drawLine", "TiltDirection", "identity", "double", "doublePI", "maxAngle", "minIndex", "double", "doublePI", "double", "doublePI", "maxAngle", "moveSpeedFactor", "defaultDistance", "gradient", "double", "doublePI", "gradient", "origin", "minRadius", "speedFactor", "half", "double", "HeartDrawer", "HeartDrawer", "defaultAlpha", "minStage", "double", "origin", "half", "double", "halfPI", "doublePI", "quarter", "sides", "n", "identity", "container", "rgbFactor", "defaultAlpha", "defaultAlpha", "OrbitType", "minWidth", "half", "double", "double", "half", "doublePI", "halfPI", "defaultOpacity", "defaultWidth", "defaultRotation", "minDistance", "identity", "squareExp", "minVelocity", "Repulser", "Repulser", "SegmentType", "drawPath", "firstIndex", "drawPath", "double", "doublePI", "defaultOptions", "double", "doublePI", "string", "PolygonMaskInlineArrangement", "PolygonMaskMoveType", "PolygonMaskType", "squareExp", "double", "firstIndex", "defaultTransform", "paths", "origin", "half", "double", "container", "firstIndex", "_a", "defaultLength", "sides", "double", "doublePI", "half", "defaultRotation", "sides", "increment", "defaultSides", "fixFactor", "double", "defaultRadius", "SVGPathDirection", "minWidth", "firstIndex", "defaultOptions", "SoundsEventType", "ImageDisplay", "container", "notes", "defaultInnerRadius", "minWidth", "half", "halfPI"]
}
