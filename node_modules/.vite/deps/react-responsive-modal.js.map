{
  "version": 3,
  "sources": ["../../classnames/index.js", "../../@bedrock-layout/use-stateful-ref/lib/index.m.js", "../../@bedrock-layout/use-forwarded-ref/lib/index.m.js", "../../body-scroll-lock/lib/bodyScrollLock.esm.js", "../../react-responsive-modal/src/CloseIcon.tsx", "../../react-responsive-modal/src/utils.ts", "../../react-responsive-modal/src/lib/focusTrapJs.ts", "../../react-responsive-modal/src/FocusTrap.tsx", "../../react-responsive-modal/src/modalManager.ts", "../../react-responsive-modal/src/useScrollLock.ts", "../../react-responsive-modal/src/index.tsx"],
  "sourcesContent": ["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n", "import c from \"react\";\nfunction s(u) {\n  let [e, f] = c.useState(u);\n  const { current: r } = c.useRef({\n    current: e\n  });\n  return Object.defineProperty(r, \"current\", {\n    get: () => e,\n    // eslint-disable-next-line functional/no-return-void\n    set: (t) => {\n      Object.is(e, t) || (e = t, f(t));\n    }\n  }), r;\n}\nexport {\n  s as useStatefulRef\n};\n", "import { useStatefulRef as n } from \"@bedrock-layout/use-stateful-ref\";\nimport o, { useRef as s } from \"react\";\nfunction c(t, r = { isStateful: !0 }) {\n  const f = n(), u = s(), e = r.isStateful ? f : u;\n  return o.useImperativeHandle(t, () => e.current), e;\n}\nexport {\n  c as useForwardedRef\n};\n", "function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// Older browsers don't support event options, feature detect it.\n\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\nvar hasPassiveEvents = false;\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\n\n\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPaddingRight = void 0;\n\n// returns true if `el` should be allowed to receive touchmove events.\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event;\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true;\n  }\n\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true;\n\n  if (e.preventDefault) e.preventDefault();\n\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (_reserveScrollBarGap && scrollBarGap > 0) {\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = scrollBarGap + 'px';\n    }\n  }\n\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight;\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting;\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined;\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nexport var disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(function (lock) {\n    return lock.targetElement === targetElement;\n  })) {\n    return;\n  }\n\n  var lock = {\n    targetElement: targetElement,\n    options: options || {}\n  };\n\n  locks = [].concat(_toConsumableArray(locks), [lock]);\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n    targetElement.ontouchmove = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = true;\n    }\n  } else {\n    setOverflowHidden(options);\n  }\n};\n\nexport var clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n\n    // Reset initial clientY.\n    initialClientY = -1;\n  } else {\n    restoreOverflowSetting();\n  }\n\n  locks = [];\n};\n\nexport var enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(function (lock) {\n    return lock.targetElement !== targetElement;\n  });\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting();\n  }\n};\n\n", "import React from 'react';\nimport cx from 'classnames';\n\ninterface CloseIconProps {\n  id?: string;\n  closeIcon?: React.ReactNode;\n  styles?: {\n    closeButton?: React.CSSProperties;\n    closeIcon?: React.CSSProperties;\n  };\n  classNames?: {\n    closeButton?: string;\n    closeIcon?: string;\n  };\n  classes: {\n    closeButton?: string;\n  };\n  onClick: () => void;\n}\n\nconst CloseIcon = ({\n  classes,\n  classNames,\n  styles,\n  id,\n  closeIcon,\n  onClick,\n}: CloseIconProps) => (\n  <button\n    id={id}\n    className={cx(classes.closeButton, classNames?.closeButton)}\n    style={styles?.closeButton}\n    onClick={onClick}\n    data-testid=\"close-button\"\n  >\n    {closeIcon ? (\n      closeIcon\n    ) : (\n      <svg\n        className={classNames?.closeIcon}\n        style={styles?.closeIcon}\n        width={28}\n        height={28}\n        viewBox=\"0 0 36 36\"\n        data-testid=\"close-icon\"\n      >\n        <path d=\"M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z\" />\n      </svg>\n    )}\n  </button>\n);\n\nexport default CloseIcon;\n", "export const isBrowser = typeof window !== 'undefined';\n", "// https://github.com/alexandrzavalii/focus-trap-js/blob/master/src/index.js v1.1.0\n\nexport const candidateSelectors = [\n  'input',\n  'select',\n  'textarea',\n  'a[href]',\n  'button',\n  '[tabindex]',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n];\n\nfunction isHidden(node: any) {\n  // offsetParent being null will allow detecting cases where an element is invisible or inside an invisible element,\n  // as long as the element does not use position: fixed. For them, their visibility has to be checked directly as well.\n  return (\n    node.offsetParent === null || getComputedStyle(node).visibility === 'hidden'\n  );\n}\n\nfunction getCheckedRadio(nodes: any, form: any) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n}\n\nfunction isNotRadioOrTabbableRadio(node: any) {\n  if (node.tagName !== 'INPUT' || node.type !== 'radio' || !node.name) {\n    return true;\n  }\n  var radioScope = node.form || node.ownerDocument;\n  var radioSet = radioScope.querySelectorAll(\n    'input[type=\"radio\"][name=\"' + node.name + '\"]',\n  );\n  var checked = getCheckedRadio(radioSet, node.form);\n  return checked === node || (checked === undefined && radioSet[0] === node);\n}\n\nexport function getAllTabbingElements(parentElem: any) {\n  var currentActiveElement = document.activeElement;\n  var tabbableNodes = parentElem.querySelectorAll(candidateSelectors.join(','));\n  var onlyTabbable = [];\n  for (var i = 0; i < tabbableNodes.length; i++) {\n    var node = tabbableNodes[i];\n    if (\n      currentActiveElement === node ||\n      (!node.disabled &&\n        getTabindex(node) > -1 &&\n        !isHidden(node) &&\n        isNotRadioOrTabbableRadio(node))\n    ) {\n      onlyTabbable.push(node);\n    }\n  }\n  return onlyTabbable;\n}\n\nexport function tabTrappingKey(event: any, parentElem: any) {\n  // check if current event keyCode is tab\n  if (!event || event.key !== 'Tab') return;\n\n  if (!parentElem || !parentElem.contains) {\n    if (process && process.env.NODE_ENV === 'development') {\n      console.warn('focus-trap-js: parent element is not defined');\n    }\n    return false;\n  }\n\n  if (!parentElem.contains(event.target)) {\n    return false;\n  }\n\n  var allTabbingElements = getAllTabbingElements(parentElem);\n  var firstFocusableElement = allTabbingElements[0];\n  var lastFocusableElement = allTabbingElements[allTabbingElements.length - 1];\n\n  if (event.shiftKey && event.target === firstFocusableElement) {\n    lastFocusableElement.focus();\n    event.preventDefault();\n    return true;\n  } else if (!event.shiftKey && event.target === lastFocusableElement) {\n    firstFocusableElement.focus();\n    event.preventDefault();\n    return true;\n  }\n  return false;\n}\n\nfunction getTabindex(node: any) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n\n  if (!isNaN(tabindexAttr)) return tabindexAttr;\n  // Browsers do not return tabIndex correctly for contentEditable nodes;\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n\n  if (isContentEditable(node)) return 0;\n  return node.tabIndex;\n}\n\nfunction isContentEditable(node: any) {\n  return node.getAttribute('contentEditable');\n}\n", "import { useEffect, useRef } from 'react';\nimport { isBrowser } from './utils';\nimport {\n  tabTrappingKey,\n  candidateSelectors,\n  getAllTabbingElements,\n} from './lib/focusTrapJs';\n\ninterface FocusTrapProps {\n  container?: React.RefObject<HTMLElement> | null;\n  initialFocusRef?: React.RefObject<HTMLElement | null>;\n}\n\nexport const FocusTrap = ({ container, initialFocusRef }: FocusTrapProps) => {\n  const refLastFocus = useRef<HTMLElement | null>(null);\n  /**\n   * Handle focus lock on the modal\n   */\n  useEffect(() => {\n    const handleKeyEvent = (event: KeyboardEvent) => {\n      if (container?.current) {\n        tabTrappingKey(event, container.current);\n      }\n    };\n\n    if (isBrowser) {\n      document.addEventListener('keydown', handleKeyEvent);\n    }\n    // On mount we focus on the first focusable element in the modal if there is one\n    if (isBrowser && container?.current) {\n      const savePreviousFocus = () => {\n        // First we save the last focused element\n        // only if it's a focusable element\n        if (\n          candidateSelectors.findIndex((selector) =>\n            document.activeElement?.matches(selector),\n          ) !== -1\n        ) {\n          refLastFocus.current = document.activeElement as HTMLElement;\n        }\n      };\n\n      if (initialFocusRef) {\n        savePreviousFocus();\n        // We need to schedule focusing on a next frame - this allows to focus on the modal root\n        requestAnimationFrame(() => {\n          initialFocusRef.current?.focus();\n        });\n      } else {\n        const allTabbingElements = getAllTabbingElements(container.current);\n        if (allTabbingElements[0]) {\n          savePreviousFocus();\n          allTabbingElements[0].focus();\n        }\n      }\n    }\n    return () => {\n      if (isBrowser) {\n        document.removeEventListener('keydown', handleKeyEvent);\n        // On unmount we restore the focus to the last focused element\n        refLastFocus.current?.focus();\n      }\n    };\n  }, [container, initialFocusRef]);\n\n  return null;\n};\n", "import { Ref, useEffect } from 'react';\n\nlet modals: Ref<Element>[] = [];\n\n/**\n * Handle the order of the modals.\n * Inspired by the material-ui implementation.\n */\nexport const modalManager = {\n  /**\n   * Register a new modal\n   */\n  add: (newModal: Ref<Element>) => {\n    modals.push(newModal);\n  },\n\n  /**\n   * Remove a modal\n   */\n  remove: (oldModal: Ref<Element>) => {\n    modals = modals.filter((modal) => modal !== oldModal);\n  },\n\n  /**\n   * When multiple modals are rendered will return true if current modal is the last one\n   */\n  isTopModal: (modal: Ref<Element>) =>\n    !!modals.length && modals[modals.length - 1] === modal,\n};\n\nexport function useModalManager(ref: Ref<Element>, open: boolean) {\n  useEffect(() => {\n    if (open) {\n      modalManager.add(ref);\n    }\n    return () => {\n      modalManager.remove(ref);\n    };\n  }, [open, ref]);\n}\n", "import { useEffect, useRef } from 'react';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\nexport const useScrollLock = (\n  refModal: React.RefObject<Element | null>,\n  open: boolean,\n  showPortal: boolean,\n  blockScroll: boolean,\n  reserveScrollBarGap?: boolean,\n) => {\n  const oldRef = useRef<Element | null>(null);\n\n  useEffect(() => {\n    if (open && refModal.current && blockScroll) {\n      oldRef.current = refModal.current;\n      disableBodyScroll(refModal.current, { reserveScrollBarGap });\n    }\n    return () => {\n      if (oldRef.current) {\n        enableBodyScroll(oldRef.current);\n        oldRef.current = null;\n      }\n    };\n  }, [open, showPortal, refModal, blockScroll, reserveScrollBarGap]);\n};\n", "import React, { useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport cx from 'classnames';\nimport { useForwardedRef } from '@bedrock-layout/use-forwarded-ref';\nimport CloseIcon from './CloseIcon';\nimport { FocusTrap } from './FocusTrap';\nimport { modalManager, useModalManager } from './modalManager';\nimport { useScrollLock } from './useScrollLock';\nimport { isBrowser } from './utils';\n\nconst classes = {\n  root: 'react-responsive-modal-root',\n  overlay: 'react-responsive-modal-overlay',\n  overlayAnimationIn: 'react-responsive-modal-overlay-in',\n  overlayAnimationOut: 'react-responsive-modal-overlay-out',\n  modalContainer: 'react-responsive-modal-container',\n  modalContainerCenter: 'react-responsive-modal-containerCenter',\n  modal: 'react-responsive-modal-modal',\n  modalAnimationIn: 'react-responsive-modal-modal-in',\n  modalAnimationOut: 'react-responsive-modal-modal-out',\n  closeButton: 'react-responsive-modal-closeButton',\n};\n\nexport interface ModalProps {\n  /**\n   * Control if the modal is open or not.\n   */\n  open: boolean;\n  /**\n   * Should the dialog be centered.\n   *\n   * Default to false.\n   */\n  center?: boolean;\n  /**\n   * Is the modal closable when user press esc key.\n   *\n   * Default to true.\n   */\n  closeOnEsc?: boolean;\n  /**\n   * Is the modal closable when user click on overlay.\n   *\n   * Default to true.\n   */\n  closeOnOverlayClick?: boolean;\n  /**\n   * Whether to block scrolling when dialog is open.\n   *\n   * Default to true.\n   */\n  blockScroll?: boolean;\n  /**\n   * Show the close icon.\n   *\n   * Default to true.\n   */\n  showCloseIcon?: boolean;\n  /**\n   * id attribute for the close icon button.\n   */\n  closeIconId?: string;\n  /**\n   * Custom icon to render (svg, img, etc...).\n   */\n  closeIcon?: React.ReactNode;\n  /**\n   * When the modal is open, trap focus within it.\n   *\n   * Default to true.\n   */\n  focusTrapped?: boolean;\n  /**\n   * Element to focus when focus trap is used.\n   *\n   * Default to undefined.\n   */\n  initialFocusRef?: React.RefObject<HTMLElement | null>;\n  /**\n   * You can specify a container prop which should be of type `Element`.\n   * The portal will be rendered inside that element.\n   * The default behavior will create a div node and render it at the at the end of document.body.\n   */\n  container?: Element | null;\n  /**\n   * An object containing classNames to style the modal.\n   */\n  classNames?: {\n    root?: string;\n    overlay?: string;\n    overlayAnimationIn?: string;\n    overlayAnimationOut?: string;\n    modalContainer?: string;\n    modal?: string;\n    modalAnimationIn?: string;\n    modalAnimationOut?: string;\n    closeButton?: string;\n    closeIcon?: string;\n  };\n  /**\n   * An object containing the styles objects to style the modal.\n   */\n  styles?: {\n    root?: React.CSSProperties;\n    overlay?: React.CSSProperties;\n    modalContainer?: React.CSSProperties;\n    modal?: React.CSSProperties;\n    closeButton?: React.CSSProperties;\n    closeIcon?: React.CSSProperties;\n  };\n  /**\n   * Animation duration in milliseconds.\n   *\n   * Default to 300.\n   */\n  animationDuration?: number;\n  /**\n   * ARIA role for modal\n   *\n   * Default to 'dialog'.\n   */\n  role?: string;\n  /**\n   * ARIA label for modal\n   */\n  ariaLabelledby?: string;\n  /**\n   * ARIA description for modal\n   */\n  ariaDescribedby?: string;\n  /**\n   * Avoid unpleasant flickering effect when body overflow is hidden. For more information see https://www.npmjs.com/package/body-scroll-lock\n   */\n  reserveScrollBarGap?: boolean;\n  /**\n   * id attribute for modal container\n   */\n  containerId?: string;\n  /**\n   * id attribute for modal\n   */\n  modalId?: string;\n  /**\n   * Callback fired when the Modal is requested to be closed by a click on the overlay or when user press esc key.\n   */\n  onClose: () => void;\n  /**\n   * Callback fired when the escape key is pressed.\n   */\n  onEscKeyDown?: (event: KeyboardEvent) => void;\n  /**\n   * Callback fired when the overlay is clicked.\n   */\n  onOverlayClick?: (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => void;\n  /**\n   * Callback fired when the Modal has exited and the animation is finished.\n   */\n  onAnimationEnd?: () => void;\n  children?: React.ReactNode;\n}\n\nexport const Modal = React.forwardRef(\n  (\n    {\n      open,\n      center,\n      blockScroll = true,\n      closeOnEsc = true,\n      closeOnOverlayClick = true,\n      container,\n      showCloseIcon = true,\n      closeIconId,\n      closeIcon,\n      focusTrapped = true,\n      initialFocusRef = undefined,\n      animationDuration = 300,\n      classNames,\n      styles,\n      role = 'dialog',\n      ariaDescribedby,\n      ariaLabelledby,\n      containerId,\n      modalId,\n      onClose,\n      onEscKeyDown,\n      onOverlayClick,\n      onAnimationEnd,\n      children,\n      reserveScrollBarGap,\n    }: ModalProps,\n    ref: React.ForwardedRef<HTMLDivElement>,\n  ) => {\n    const refDialog = useForwardedRef(ref);\n    const refModal = useRef<HTMLDivElement>(null);\n    const refShouldClose = useRef<boolean | null>(null);\n    const refContainer = useRef<HTMLDivElement | null>(null);\n    // Lazily create the ref instance\n    // https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n    if (refContainer.current === null && isBrowser) {\n      refContainer.current = document.createElement('div');\n    }\n\n    // The value should be false for srr, that way when the component is hydrated client side,\n    // it will match the server rendered content\n    const [showPortal, setShowPortal] = useState(false);\n\n    // Hook used to manage multiple modals opened at the same time\n    useModalManager(refModal, open);\n\n    // Hook used to manage the scroll\n    useScrollLock(refModal, open, showPortal, blockScroll, reserveScrollBarGap);\n\n    const handleOpen = () => {\n      if (\n        refContainer.current &&\n        !container &&\n        !document.body.contains(refContainer.current)\n      ) {\n        document.body.appendChild(refContainer.current);\n      }\n\n      document.addEventListener('keydown', handleKeydown);\n    };\n\n    const handleClose = () => {\n      if (\n        refContainer.current &&\n        !container &&\n        document.body.contains(refContainer.current)\n      ) {\n        document.body.removeChild(refContainer.current);\n      }\n      document.removeEventListener('keydown', handleKeydown);\n    };\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      // Only the last modal need to be escaped when pressing the esc key\n      if (event.keyCode !== 27 || !modalManager.isTopModal(refModal)) {\n        return;\n      }\n\n      onEscKeyDown?.(event);\n\n      if (closeOnEsc) {\n        onClose();\n      }\n    };\n\n    useEffect(() => {\n      return () => {\n        if (showPortal) {\n          // When the modal is closed or removed directly, cleanup the listeners\n          handleClose();\n        }\n      };\n    }, [showPortal]);\n\n    useEffect(() => {\n      // If the open prop is changing, we need to open the modal\n      // This is also called on the first render if the open prop is true when the modal is created\n      if (open && !showPortal) {\n        setShowPortal(true);\n        handleOpen();\n      }\n    }, [open]);\n\n    const handleClickOverlay = (\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    ) => {\n      if (refShouldClose.current === null) {\n        refShouldClose.current = true;\n      }\n\n      if (!refShouldClose.current) {\n        refShouldClose.current = null;\n        return;\n      }\n\n      onOverlayClick?.(event);\n\n      if (closeOnOverlayClick) {\n        onClose();\n      }\n\n      refShouldClose.current = null;\n    };\n\n    const handleModalEvent = () => {\n      refShouldClose.current = false;\n    };\n\n    const handleAnimationEnd = () => {\n      if (!open) {\n        setShowPortal(false);\n      }\n\n      onAnimationEnd?.();\n    };\n\n    const containerModal = container || refContainer.current;\n\n    const overlayAnimation = open\n      ? (classNames?.overlayAnimationIn ?? classes.overlayAnimationIn)\n      : (classNames?.overlayAnimationOut ?? classes.overlayAnimationOut);\n\n    const modalAnimation = open\n      ? (classNames?.modalAnimationIn ?? classes.modalAnimationIn)\n      : (classNames?.modalAnimationOut ?? classes.modalAnimationOut);\n\n    return showPortal && containerModal\n      ? createPortal(\n          <div\n            className={cx(classes.root, classNames?.root)}\n            style={styles?.root}\n            data-testid=\"root\"\n          >\n            <div\n              className={cx(classes.overlay, classNames?.overlay)}\n              data-testid=\"overlay\"\n              aria-hidden={true}\n              style={{\n                animation: `${overlayAnimation} ${animationDuration}ms`,\n                ...styles?.overlay,\n              }}\n            />\n            <div\n              ref={refModal}\n              id={containerId}\n              className={cx(\n                classes.modalContainer,\n                center && classes.modalContainerCenter,\n                classNames?.modalContainer,\n              )}\n              style={styles?.modalContainer}\n              data-testid=\"modal-container\"\n              onClick={handleClickOverlay}\n            >\n              <div\n                ref={refDialog}\n                className={cx(classes.modal, classNames?.modal)}\n                style={{\n                  animation: `${modalAnimation} ${animationDuration}ms`,\n                  ...styles?.modal,\n                }}\n                onMouseDown={handleModalEvent}\n                onMouseUp={handleModalEvent}\n                onClick={handleModalEvent}\n                onAnimationEnd={handleAnimationEnd}\n                id={modalId}\n                role={role}\n                aria-modal=\"true\"\n                aria-labelledby={ariaLabelledby}\n                aria-describedby={ariaDescribedby}\n                data-testid=\"modal\"\n                tabIndex={-1}\n              >\n                {focusTrapped && (\n                  <FocusTrap\n                    container={refDialog}\n                    initialFocusRef={initialFocusRef}\n                  />\n                )}\n                {children}\n                {showCloseIcon && (\n                  <CloseIcon\n                    classes={classes}\n                    classNames={classNames}\n                    styles={styles}\n                    closeIcon={closeIcon}\n                    onClick={onClose}\n                    id={closeIconId}\n                  />\n                )}\n              </div>\n            </div>\n          </div>,\n          containerModal,\n        )\n      : null;\n  },\n);\n\nexport default Modal;\n"],
  "mappings": "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",
  "names": ["classes", "c", "import_react", "c", "s", "o", "allowTouchMove", "preventDefault", "setOverflowHidden", "restoreOverflowSetting", "isTargetElementTotallyScrolled", "handleScroll", "disableBodyScroll", "lock", "enableBodyScroll", "cx", "classes", "node: any", "nodes: any", "form: any", "parentElem: any", "event: any", "event: KeyboardEvent", "modals: Ref<Element>[]", "newModal: Ref<Element>", "oldModal: Ref<Element>", "modal: Ref<Element>", "ref: Ref<Element>", "open: boolean", "refModal: React.RefObject<Element | null>", "showPortal: boolean", "blockScroll: boolean", "reserveScrollBarGap?: boolean", "React", "ref: React.ForwardedRef<HTMLDivElement>", "c", "event: React.MouseEvent<HTMLDivElement, MouseEvent>", "CloseIcon"]
}
